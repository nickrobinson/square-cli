{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Square Connect API",
    "description": "Client library for accessing the Square Connect APIs",
    "termsOfService": "https://connect.squareup.com/tos",
    "contact": {
      "name": "Square Developer Platform",
      "email": "developers@squareup.com",
      "url": "https://squareup.com/developers"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "Read the official documentation here:",
    "url": "https://docs.connect.squareup.com/"
  },
  "host": "connect.squareup.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "authorizationUrl": "https://connect.squareup.com/oauth2/authorize",
      "flow": "accessCode",
      "tokenUrl": "https://connect.squareup.com/oauth2/token",
      "scopes": {
        "BANK_ACCOUNTS_READ": "__HTTP Method__: `GET`\n\nGrants read access to bank account information associated with the targeted\nSquare account. For example, to call the Connect v1 ListBankAccounts endpoint.",
        "CASH_DRAWER_READ": "__HTTP Method__: `GET`\n\nGrants read access to cash drawer shift information. For example, to call the\nListCashDrawerShifts endpoint.",
        "CUSTOMERS_READ": "__HTTP Method__: `GET`\n\nGrants read access to customer information. For example, to call the\nListCustomers endpoint.",
        "CUSTOMERS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to customer information. For example, to create and update\ncustomer profiles.",
        "DEVICE_CREDENTIAL_MANAGEMENT": "__HTTP Method__: `POST`, `GET`\n\nGrants read/write access to device credentials information. For example, to\ncall the CreateDeviceCode endpoint.",
        "EMPLOYEES_READ": "__HTTP Method__: `GET`\n\nGrants read access to employee profile information. For example, to call the\nConnect v1 Employees API.",
        "EMPLOYEES_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to employee profile information. For example, to create\nand modify employee profiles.",
        "INVENTORY_READ": "__HTTP Method__: `GET`\n\nGrants read access to inventory information. For example, to call the\nRetrieveInventoryCount endpoint.",
        "INVENTORY_WRITE": "__HTTP Method__:  `POST`, `PUT`, `DELETE`\n\nGrants write access to inventory information. For example, to call the\nBatchChangeInventory endpoint.",
        "ITEMS_READ": "__HTTP Method__: `GET`\n\nGrants read access to business and location information. For example, to\nobtain a location ID for subsequent activity.",
        "ITEMS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to product catalog information. For example, to modify or\nadd to a product catalog.",
        "LOYALTY_READ": "__HTTP Method__: `GET`\n\nGrants read access to loyalty information. For example, to call the\nListLoyaltyPrograms endpoint.",
        "LOYALTY_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to loyalty information. For example, to call the\nCreateLoyaltyAccount endpoint.",
        "MERCHANT_PROFILE_READ": "__HTTP Method__: `GET`\n\nGrants read access to business and location information. For example, to\nobtain a location ID for subsequent activity.",
        "ORDERS_READ": "__HTTP Method__: `GET`\n\nGrants read access to order information. For example, to call the\nBatchRetrieveOrders endpoint.",
        "ORDERS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to order information. For example, to call the\nCreateCheckout endpoint.",
        "PAYMENTS_READ": "__HTTP Method__: `GET`\n\nGrants read access to transaction and refund information. For example, to call\nthe RetrieveTransaction endpoint.",
        "PAYMENTS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to transaction and refunds information. For example, to\nprocess payments with the Payments or Checkout API.",
        "PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nAllow third party applications to deduct a portion of each transaction amount.\n__Required__ to use multiparty transaction functionality with the Payments\nAPI.",
        "PAYMENTS_WRITE_IN_PERSON": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to payments and refunds information. For example, to\nprocess in-person payments.",
        "SETTLEMENTS_READ": "__HTTP Method__: `GET`\n\nGrants read access to settlement (deposit) information. For example, to call\nthe Connect v1 ListSettlements endpoint.",
        "TIMECARDS_READ": "__HTTP Method__: `GET`\n\nGrants read access to employee timecard information. For example, to call the\nConnect v2 SearchShifts endpoint.",
        "TIMECARDS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to employee shift information. For example, to create\nand modify employee shifts.",
        "TIMECARDS_SETTINGS_READ": "__HTTP Method__: `GET`\n\nGrants read access to employee timecard settings information. For example, to\ncall the GetBreakType endpoint.",
        "TIMECARDS_SETTINGS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to employee timecard settings information. For example, to\ncall the UpdateBreakType endpoint."
      }
    },
    "oauth2ClientSecret": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "paths": {
    "/mobile/authorization-code": {
      "post": {
        "tags": [
          "MobileAuthorization"
        ],
        "summary": "CreateMobileAuthorizationCode",
        "operationId": "CreateMobileAuthorizationCode",
        "description": "Generates code to authorize a mobile application to connect to a Square card reader\n\nAuthorization codes are one-time-use and expire __60 minutes__ after being issued.\n\n__Important:__ The `Authorization` header you provide to this endpoint must have the following format:\n\n```\nAuthorization: Bearer ACCESS_TOKEN\n```\n\nReplace `ACCESS_TOKEN` with a\n[valid production authorization credential](/docs/build-basics/access-tokens).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE_IN_PERSON"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE_IN_PERSON"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateMobileAuthorizationCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateMobileAuthorizationCodeResponse"
            }
          }
        }
      }
    },
    "/oauth2/clients/{client_id}/access-token/renew": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "RenewToken",
        "operationId": "RenewToken",
        "description": "`RenewToken` is deprecated. For information about refreshing OAuth access tokens, see\n[Renew OAuth Token](https://developer.squareup.com/docs/oauth-api/cookbook/renew-oauth-tokens).\n\n\nRenews an OAuth access token before it expires.\n\nOAuth access tokens besides your application\u0027s personal access token expire after __30 days__.\nYou can also renew expired tokens within __15 days__ of their expiration.\nYou cannot renew an access token that has been expired for more than 15 days.\nInstead, the associated user must re-complete the OAuth flow from the beginning.\n\n__Important:__ The `Authorization` header for this endpoint must have the\nfollowing format:\n\n```\nAuthorization: Client APPLICATION_SECRET\n```\n\nReplace `APPLICATION_SECRET` with the application secret on the Credentials\npage in the [application dashboard](https://connect.squareup.com/apps).",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2ClientSecret": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "Your application ID, available from the [application dashboard](https://connect.squareup.com/apps).",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/RenewTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RenewTokenResponse"
            }
          }
        }
      }
    },
    "/oauth2/revoke": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "RevokeToken",
        "operationId": "RevokeToken",
        "description": "Revokes an access token generated with the OAuth flow.\n\nIf an account has more than one OAuth access token for your application, this\nendpoint revokes all of them, regardless of which token you specify. When an\nOAuth access token is revoked, all of the active subscriptions associated\nwith that OAuth token are canceled immediately.\n\n__Important:__ The `Authorization` header for this endpoint must have the\nfollowing format:\n\n```\nAuthorization: Client APPLICATION_SECRET\n```\n\nReplace `APPLICATION_SECRET` with the application secret on the Credentials\npage in the [application dashboard](https://connect.squareup.com/apps).",
        "x-release-status": "PUBLIC",
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2ClientSecret": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/RevokeTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RevokeTokenResponse"
            }
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "ObtainToken",
        "operationId": "ObtainToken",
        "description": "Returns an OAuth access token.\n\nThe endpoint supports distinct methods of obtaining OAuth access tokens.\nApplications specify a method by adding the `grant_type` parameter\nin the request and also provide relevant information.\nFor more information, see [OAuth access token management](/authz/oauth/how-it-works#oauth-access-token-management).\n\n__Note:__ Regardless of the method application specified,\nthe endpoint always returns two items; an OAuth access token and\na refresh token in the response.\n\n__OAuth tokens should only live on secure servers. Application clients\nshould never interact directly with OAuth tokens__.",
        "x-release-status": "PUBLIC",
        "x-sq-version": "2020-08-12",
        "security": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/ObtainTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ObtainTokenResponse"
            }
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "tags": [
          "V1Locations"
        ],
        "summary": "RetrieveBusiness",
        "operationId": "RetrieveBusiness",
        "description": "Get the general information for a business.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Merchant"
            }
          }
        }
      }
    },
    "/v1/me/employees": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListEmployees",
        "operationId": "ListEmployees",
        "description": "Provides summary information for all of a business\u0027s employees.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "order",
            "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_updated_at",
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_updated_at",
            "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_created_at",
            "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_created_at",
            "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "status",
            "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "external_id",
            "description": "If provided, the endpoint returns only employee entities with the specified external_id.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Employee"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "CreateEmployee",
        "operationId": "CreateEmployee",
        "description": " Use the CreateEmployee endpoint to add an employee to a Square\naccount. Employees created with the Connect API have an initial status\nof `INACTIVE`. Inactive employees cannot sign in to Square Point of Sale\nuntil they are activated from the Square Dashboard. Employee status\ncannot be changed with the Connect API.\n\n\u003caside class\u003d\"important\"\u003e\nEmployee entities cannot be deleted. To disable employee profiles,\nset the employee\u0027s status to \u003ccode\u003eINACTIVE\u003c/code\u003e\n\u003c/aside\u003e",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        }
      }
    },
    "/v1/me/employees/{employee_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveEmployee",
        "operationId": "RetrieveEmployee",
        "description": "Provides the details for a single employee.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "description": "The employee\u0027s ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "UpdateEmployee",
        "operationId": "UpdateEmployee",
        "description": "",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "description": "The ID of the role to modify.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Employee"
            }
          }
        }
      }
    },
    "/v1/me/locations": {
      "get": {
        "tags": [
          "V1Locations"
        ],
        "summary": "ListLocations",
        "operationId": "ListLocations",
        "description": "Provides details for all business locations associated with a Square\naccount, including the Square-assigned object ID for the location.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Merchant"
              }
            }
          }
        }
      }
    },
    "/v1/me/roles": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListEmployeeRoles",
        "operationId": "ListEmployeeRoles",
        "description": "Provides summary information for all of a business\u0027s employee roles.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "order",
            "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1EmployeeRole"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "CreateEmployeeRole",
        "operationId": "CreateEmployeeRole",
        "description": "Creates an employee role you can then assign to employees.\n\nSquare accounts can include any number of roles that can be assigned to\nemployees. These roles define the actions and permissions granted to an\nemployee with that role. For example, an employee with a \"Shift Manager\"\nrole might be able to issue refunds in Square Point of Sale, whereas an\nemployee with a \"Clerk\" role might not.\n\nRoles are assigned with the [V1UpdateEmployee](#endpoint-v1updateemployee)\nendpoint. An employee can have only one role at a time.\n\nIf an employee has no role, they have none of the permissions associated\nwith roles. All employees can accept payments with Square Point of Sale.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "employee_role",
            "in": "body",
            "required": true,
            "description": "An EmployeeRole object with a name and permissions, and an optional owner flag.",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        }
      }
    },
    "/v1/me/roles/{role_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveEmployeeRole",
        "operationId": "RetrieveEmployeeRole",
        "description": "Provides the details for a single employee role.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "description": "The role\u0027s ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "UpdateEmployeeRole",
        "operationId": "UpdateEmployeeRole",
        "description": "Modifies the details of an employee role.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "description": "The ID of the role to modify.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1EmployeeRole"
            }
          }
        }
      }
    },
    "/v1/me/timecards": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListTimecards",
        "operationId": "ListTimecards",
        "description": "Provides summary information for all of a business\u0027s employee timecards.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "order",
            "description": "The order in which timecards are listed in the response, based on their created_at field.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "employee_id",
            "description": "If provided, the endpoint returns only timecards for the employee with the specified ID.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_clockin_time",
            "description": "If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_clockin_time",
            "description": "If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_clockout_time",
            "description": "If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_clockout_time",
            "description": "If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_updated_at",
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_updated_at",
            "description": "If filtering results by their updated_at field, the end of the requested reporting period, in ISO 8601 format.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "deleted",
            "description": "If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don\u0027t provide this parameter, both valid and deleted timecards are returned.",
            "x-is-deprecated": true,
            "type": "boolean",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "x-is-deprecated": true,
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Timecard"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "CreateTimecard",
        "operationId": "CreateTimecard",
        "description": "Creates a timecard for an employee and clocks them in with an\n`API_CREATE` event and a `clockin_time` set to the current time unless\nthe request provides a different value.\n\nTo import timecards from another\nsystem (rather than clocking someone in). Specify the `clockin_time`\nand* `clockout_time` in the request.\n\nTimecards correspond to exactly one shift for a given employee, bounded\nby the `clockin_time` and `clockout_time` fields. An employee is\nconsidered clocked in if they have a timecard that doesn\u0027t have a\n`clockout_time` set. An employee that is currently clocked in cannot\nbe clocked in a second time.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        }
      }
    },
    "/v1/me/timecards/{timecard_id}": {
      "delete": {
        "tags": [
          "V1Employees"
        ],
        "summary": "DeleteTimecard",
        "operationId": "DeleteTimecard",
        "description": "Deletes a timecard. Timecards can also be deleted through the\nSquare Dashboard. Deleted timecards are still accessible through\nConnect API endpoints, but cannot be modified. The `deleted` field of\nthe `Timecard` object indicates whether the timecard has been deleted.\n\n\n__Note__: By default, deleted timecards appear alongside valid timecards in\nresults returned by the [ListTimecards](#endpoint-v1employees-listtimecards)\nendpoint. To filter deleted timecards, include the `deleted` query\nparameter in the list request.\n\nOnly approved accounts can manage their employees with Square.\nUnapproved accounts cannot use employee management features with the\nAPI.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "timecard_id",
            "description": "The ID of the timecard to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveTimecard",
        "operationId": "RetrieveTimecard",
        "description": "Provides the details for a single timecard.\n\n\n\u003caside\u003e\nOnly approved accounts can manage their employees with Square.\nUnapproved accounts cannot use employee management features with the\nAPI.\n\u003c/aside\u003e",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "timecard_id",
            "description": "The timecard\u0027s ID.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "UpdateTimecard",
        "operationId": "UpdateTimecard",
        "description": "Modifies the details of a timecard with an `API_EDIT` event for\nthe timecard. Updating an active timecard with a `clockout_time`\nclocks the employee out.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "timecard_id",
            "description": "TThe ID of the timecard to modify.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Timecard"
            }
          }
        }
      }
    },
    "/v1/me/timecards/{timecard_id}/events": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListTimecardEvents",
        "operationId": "ListTimecardEvents",
        "description": "Provides summary information for all events associated with a\nparticular timecard.\n\n\n\u003caside\u003e\nOnly approved accounts can manage their employees with Square.\nUnapproved accounts cannot use employee management features with the\nAPI.\n\u003c/aside\u003e",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "timecard_id",
            "description": "The ID of the timecard to list events for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1TimecardEvent"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/bank-accounts": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListBankAccounts",
        "operationId": "ListBankAccounts",
        "description": "Provides non-confidential details for all of a location\u0027s associated bank accounts. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list bank accounts for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1BankAccount"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/bank-accounts/{bank_account_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrieveBankAccount",
        "operationId": "RetrieveBankAccount",
        "description": "Provides non-confidential details for a merchant\u0027s associated bank account. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the bank account\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "bank_account_id",
            "description": "The bank account\u0027s Square-issued ID. You obtain this value from Settlement objects returned.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1BankAccount"
            }
          }
        }
      }
    },
    "/v1/{location_id}/cash-drawer-shifts": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListCashDrawerShifts",
        "operationId": "ListCashDrawerShifts",
        "description": "Provides the details for all of a location\u0027s cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list cash drawer shifts for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "The order in which cash drawer shifts are listed in the response, based on their created_at field. Default value: ASC",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time minus 90 days.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1CashDrawerShift"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/cash-drawer-shifts/{shift_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveCashDrawerShift",
        "operationId": "RetrieveCashDrawerShift",
        "description": "Provides the details for a single cash drawer shift, including all events that occurred during the shift.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list cash drawer shifts for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "shift_id",
            "description": "The shift\u0027s ID.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1CashDrawerShift"
            }
          }
        }
      }
    },
    "/v1/{location_id}/categories": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListCategories",
        "operationId": "ListCategories",
        "description": "Lists all the item categories for a given location.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list categories for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Category"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateCategory",
        "operationId": "CreateCategory",
        "description": "Creates an item category.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create an item for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        }
      }
    },
    "/v1/{location_id}/categories/{category_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteCategory",
        "operationId": "DeleteCategory",
        "description": "Deletes an existing item category.\n\n\n__DeleteCategory__ returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteCategoryRequest` object\nas documented below.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "category_id",
            "description": "The ID of the category to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateCategory",
        "operationId": "UpdateCategory",
        "description": "Modifies the details of an existing item category.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the category\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "category_id",
            "description": "The ID of the category to edit.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Category"
            }
          }
        }
      }
    },
    "/v1/{location_id}/discounts": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListDiscounts",
        "operationId": "ListDiscounts",
        "description": "Lists all the discounts for a given location.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list categories for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Discount"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateDiscount",
        "operationId": "CreateDiscount",
        "description": "Creates a discount.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create an item for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        }
      }
    },
    "/v1/{location_id}/discounts/{discount_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteDiscount",
        "operationId": "DeleteDiscount",
        "description": "Deletes an existing discount.\n\n\n__DeleteDiscount__ returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteDiscountRequest` object\nas documented below.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "discount_id",
            "description": "The ID of the discount to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateDiscount",
        "operationId": "UpdateDiscount",
        "description": "Modifies the details of an existing discount.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the category\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "discount_id",
            "description": "The ID of the discount to edit.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Discount"
            }
          }
        }
      }
    },
    "/v1/{location_id}/fees": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListFees",
        "operationId": "ListFees",
        "description": "Lists all the fees (taxes) for a given location.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list fees for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Fee"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateFee",
        "operationId": "CreateFee",
        "description": "Creates a fee (tax).",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create a fee for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        }
      }
    },
    "/v1/{location_id}/fees/{fee_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteFee",
        "operationId": "DeleteFee",
        "description": "Deletes an existing fee (tax).\n\n\n__DeleteFee__ returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteFeeRequest` object\nas documented below.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the fee\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fee_id",
            "description": "The ID of the fee to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateFee",
        "operationId": "UpdateFee",
        "description": "Modifies the details of an existing fee (tax).",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the fee\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fee_id",
            "description": "The ID of the fee to edit.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Fee"
            }
          }
        }
      }
    },
    "/v1/{location_id}/inventory": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListInventory",
        "operationId": "ListInventory",
        "description": "Provides inventory information for all inventory-enabled item\nvariations.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "description": "The maximum number of inventory entries to return in a single response. This value cannot exceed 1000.",
            "x-is-deprecated": true,
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1InventoryEntry"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/inventory/{variation_id}": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "AdjustInventory",
        "operationId": "AdjustInventory",
        "description": "Adjusts the current available inventory of an item variation.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "variation_id",
            "description": "The ID of the variation to adjust inventory information for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1AdjustInventoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1InventoryEntry"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListItems",
        "operationId": "ListItems",
        "description": "Provides summary information of all items for a given location.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "location_id",
            "description": "The ID of the location to list items for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Item"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateItem",
        "operationId": "CreateItem",
        "description": "Creates an item and at least one variation for it.\n\n\n\nItem-related entities include fields you can use to associate them with\nentities in a non-Square system.\n\nWhen you create an item-related entity, you can optionally specify `id`.\nThis value must be unique among all IDs ever specified for the account,\nincluding those specified by other applications. You can never reuse an\nentity ID. If you do not specify an ID, Square generates one for the entity.\n\nItem variations have a `user_data` string that lets you associate arbitrary\nmetadata with the variation. The string cannot exceed 255 characters.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create an item for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteItem",
        "operationId": "DeleteItem",
        "description": "Deletes an existing item and all item variations associated with it.\n\n\n__DeleteItem__ returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteItemRequest` object\nas documented below.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to modify.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "RetrieveItem",
        "operationId": "RetrieveItem",
        "description": "Provides the details for a single item, including associated modifier\nlists and fees.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The item\u0027s ID.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateItem",
        "operationId": "UpdateItem",
        "description": "Modifies the core details of an existing item.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to modify.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/fees/{fee_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "RemoveFee",
        "operationId": "RemoveFee",
        "description": "Removes a fee assocation from an item so the fee is no longer\nautomatically applied to the item in Square Point of Sale.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the fee\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to add the fee to.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fee_id",
            "description": "The ID of the fee to apply.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "ApplyFee",
        "operationId": "ApplyFee",
        "description": "Associates a fee with an item so the fee is automatically applied to\nthe item in Square Point of Sale.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the fee\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to add the fee to.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "fee_id",
            "description": "The ID of the fee to apply.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/modifier-lists/{modifier_list_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "RemoveModifierList",
        "operationId": "RemoveModifierList",
        "description": "Removes a modifier list association from an item so the modifier\noptions from the list can no longer be applied to the item.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to remove.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to remove the modifier list from.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "ApplyModifierList",
        "operationId": "ApplyModifierList",
        "description": "Associates a modifier list with an item so the associated modifier\noptions can be applied to the item.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to apply.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to add the modifier list to.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Item"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/variations": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateVariation",
        "operationId": "CreateVariation",
        "description": "Creates an item variation for an existing item.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The item\u0027s ID.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        }
      }
    },
    "/v1/{location_id}/items/{item_id}/variations/{variation_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteVariation",
        "operationId": "DeleteVariation",
        "description": "Deletes an existing item variation from an item.\n\n\n__DeleteVariation__ returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteVariationRequest` object\nas documented below.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "variation_id",
            "description": "The ID of the variation to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateVariation",
        "operationId": "UpdateVariation",
        "description": "Modifies the details of an existing item variation.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "item_id",
            "description": "The ID of the item to modify.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "variation_id",
            "description": "The ID of the variation to modify.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Variation"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListModifierLists",
        "operationId": "ListModifierLists",
        "description": "Lists all the modifier lists for a given location.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list modifier lists for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1ModifierList"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateModifierList",
        "operationId": "CreateModifierList",
        "description": "Creates an item modifier list and at least 1 modifier option for it.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create a modifier list for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteModifierList",
        "operationId": "DeleteModifierList",
        "description": "Deletes an existing item modifier list and all modifier options\nassociated with it.\n\n\n__DeleteModifierList__ returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeleteModifierListRequest` object\nas documented below.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        }
      },
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "RetrieveModifierList",
        "operationId": "RetrieveModifierList",
        "description": "Provides the details for a single modifier list.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The modifier list\u0027s ID.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateModifierList",
        "operationId": "UpdateModifierList",
        "description": "Modifies the details of an existing item modifier list.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to edit.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1UpdateModifierListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierList"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options": {
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreateModifierOption",
        "operationId": "CreateModifierOption",
        "description": "Creates an item modifier option and adds it to a modifier list.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to edit.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        }
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options/{modifier_option_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeleteModifierOption",
        "operationId": "DeleteModifierOption",
        "description": "Deletes an existing item modifier option from a modifier list.\n\n\n__DeleteModifierOption__ returns nothing on success but Connect\nSDKs map the empty response to an empty `V1DeleteModifierOptionRequest`\nobject.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_option_id",
            "description": "The ID of the modifier list to edit.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdateModifierOption",
        "operationId": "UpdateModifierOption",
        "description": "Modifies the details of an existing item modifier option.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the item\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_list_id",
            "description": "The ID of the modifier list to edit.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "modifier_option_id",
            "description": "The ID of the modifier list to edit.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1ModifierOption"
            }
          }
        }
      }
    },
    "/v1/{location_id}/orders": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListOrders",
        "operationId": "ListOrders",
        "description": "Provides summary information for a merchant\u0027s online store orders.",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list online store orders for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "TThe order in which payments are listed in the response.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Order"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/orders/{order_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrieveOrder",
        "operationId": "RetrieveOrder",
        "description": "Provides comprehensive information for a single online store order, including the order\u0027s history.",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the order\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order_id",
            "description": "The order\u0027s Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Order"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "UpdateOrder",
        "operationId": "UpdateOrder",
        "description": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY",
        "x-oauthpermissions": [
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the order\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order_id",
            "description": "The order\u0027s Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1UpdateOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Order"
            }
          }
        }
      }
    },
    "/v1/{location_id}/pages": {
      "get": {
        "tags": [
          "V1Items"
        ],
        "summary": "ListPages",
        "operationId": "ListPages",
        "description": "Lists all Favorites pages (in Square Point of Sale) for a given\nlocation.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list Favorites pages for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Page"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Items"
        ],
        "summary": "CreatePage",
        "operationId": "CreatePage",
        "description": "Creates a Favorites page in Square Point of Sale.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to create an item for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      }
    },
    "/v1/{location_id}/pages/{page_id}": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeletePage",
        "operationId": "DeletePage",
        "description": "Deletes an existing Favorites page and all of its cells.\n\n\n__DeletePage__ returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeletePageRequest` object.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the Favorites page\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "page_id",
            "description": "The ID of the page to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdatePage",
        "operationId": "UpdatePage",
        "description": "Modifies the details of a Favorites page in Square Point of Sale.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the Favorites page\u0027s associated location",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "page_id",
            "description": "The ID of the page to modify.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      }
    },
    "/v1/{location_id}/pages/{page_id}/cells": {
      "delete": {
        "tags": [
          "V1Items"
        ],
        "summary": "DeletePageCell",
        "operationId": "DeletePageCell",
        "description": "Deletes a cell from a Favorites page in Square Point of Sale.\n\n\n__DeletePageCell__ returns nothing on success but Connect SDKs\nmap the empty response to an empty `V1DeletePageCellRequest` object\nas documented below.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the Favorites page\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "row",
            "description": "The row of the cell to clear. Always an integer between 0 and 4, inclusive. Row 0 is the top row.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "page_id",
            "description": "The ID of the page to delete.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "column",
            "description": "The column of the cell to clear. Always an integer between 0 and 4, inclusive. Column 0 is the leftmost column.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      },
      "put": {
        "tags": [
          "V1Items"
        ],
        "summary": "UpdatePageCell",
        "operationId": "UpdatePageCell",
        "description": "Modifies a cell of a Favorites page in Square Point of Sale.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the Favorites page\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "page_id",
            "description": "The ID of the page the cell belongs to.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1PageCell"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Page"
            }
          }
        }
      }
    },
    "/v1/{location_id}/payments": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListPayments",
        "operationId": "ListPayments",
        "description": "Provides summary information for all payments taken for a given\nSquare account during a date range. Date ranges cannot exceed 1 year in\nlength. See Date ranges for details of inclusive and exclusive dates.\n\n*Note**: Details for payments processed with Square Point of Sale while\nin offline mode may not be transmitted to Square for up to 72 hours.\nOffline payments have a `created_at` value that reflects the time the\npayment was originally processed, not the time it was subsequently\ntransmitted to Square. Consequently, the ListPayments endpoint might\nlist an offline payment chronologically between online payments that\nwere seen in a previous request.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business\u0027s locations.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "The order in which payments are listed in the response.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "include_partial",
            "description": "Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed.",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Payment"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/payments/{payment_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrievePayment",
        "operationId": "RetrievePayment",
        "description": "Provides comprehensive information for a single payment.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the payment\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "payment_id",
            "description": "The Square-issued payment ID. payment_id comes from Payment objects returned by the List Payments endpoint, Settlement objects returned by the List Settlements endpoint, or Refund objects returned by the List Refunds endpoint.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Payment"
            }
          }
        }
      }
    },
    "/v1/{location_id}/refunds": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListRefunds",
        "operationId": "ListRefunds",
        "description": "Provides the details for all refunds initiated by a merchant or any of the merchant\u0027s mobile staff during a date range. Date ranges cannot exceed one year in length.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list refunds for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "TThe order in which payments are listed in the response.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Refund"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "CreateRefund",
        "operationId": "CreateRefund",
        "description": "Issues a refund for a previously processed payment. You must issue\na refund within 60 days of the associated payment.\n\nYou cannot issue a partial refund for a split tender payment. You must\ninstead issue a full or partial refund for a particular tender, by\nproviding the applicable tender id to the V1CreateRefund endpoint.\nIssuing a full refund for a split tender payment refunds all tenders\nassociated with the payment.\n\nIssuing a refund for a card payment is not reversible. For development\npurposes, you can create fake cash payments in Square Point of Sale and\nrefund them.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the original payment\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/V1CreateRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Refund"
            }
          }
        }
      }
    },
    "/v1/{location_id}/settlements": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListSettlements",
        "operationId": "ListSettlements",
        "description": "Provides summary information for all deposits and withdrawals\ninitiated by Square to a linked bank account during a date range. Date\nranges cannot exceed one year in length.\n\n*Note**: the ListSettlements endpoint does not provide entry\ninformation.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "SETTLEMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list settlements for. If you specify me, this endpoint returns settlements aggregated from all of the business\u0027s locations.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "The order in which settlements are listed in the response.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum number of settlements to return in a single response. This value cannot exceed 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "status",
            "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "batch_token",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1Settlement"
              }
            }
          }
        }
      }
    },
    "/v1/{location_id}/settlements/{settlement_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrieveSettlement",
        "operationId": "RetrieveSettlement",
        "description": "Provides comprehensive information for a single settlement.\n\nThe returned `Settlement` objects include an `entries` field that lists\nthe transactions that contribute to the settlement total. Most\nsettlement entries correspond to a payment payout, but settlement\nentries are also generated for less common events, like refunds, manual\nadjustments, or chargeback holds.\n\nSquare initiates its regular deposits as indicated in the\n[Deposit Options with Square](https://squareup.com/help/us/en/article/3807)\nhelp article. Details for a regular deposit are usually not available\nfrom Connect API endpoints before 10 p.m. PST the same day.\n\nSquare does not know when an initiated settlement **completes**, only\nwhether it has failed. A completed settlement is typically reflected in\na bank account within 3 business days, but in exceptional cases it may\ntake longer.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "SETTLEMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the settlements\u0027s associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "settlement_id",
            "description": "The settlement\u0027s Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1Settlement"
            }
          }
        }
      }
    },
    "/v2/apple-pay/domains": {
      "post": {
        "tags": [
          "ApplePay"
        ],
        "summary": "RegisterDomain",
        "operationId": "RegisterDomain",
        "description": "Activates a domain for use with Web Apple Pay and Square. A validation\nwill be performed on this domain by Apple to ensure is it properly set up as\nan Apple Pay enabled domain.\n\nThis endpoint provides an easy way for platform developers to bulk activate\nWeb Apple Pay with Square for merchants using their platform.\n\nTo learn more about Apple Pay on Web see the Apple Pay section in the\n[Square Payment Form Walkthrough](/docs/payment-form/payment-form-walkthrough).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/RegisterDomainRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegisterDomainResponse"
            }
          }
        }
      }
    },
    "/v2/bank-accounts": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "ListBankAccounts",
        "operationId": "ListBankAccounts",
        "description": "Returns a list of [BankAccount](#type-bankaccount) objects linked to a Square account. \nFor more information, see \n[Bank Accounts API](/docs/bank-accounts-api).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "The pagination cursor returned by a previous call to this endpoint.\nUse it in the next `ListBankAccounts` request to retrieve the next set \nof results.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "Upper limit on the number of bank accounts to return in the response. \nCurrently, 1000 is the largest supported limit. You can specify a limit \nof up to 1000 bank accounts. This is also the default limit.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "location_id",
            "description": "Location ID. You can specify this optional filter \nto retrieve only the linked bank accounts belonging to a specific location.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListBankAccountsResponse"
            }
          }
        }
      }
    },
    "/v2/bank-accounts/by-v1-id/{v1_bank_account_id}": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "GetBankAccountByV1Id",
        "operationId": "GetBankAccountByV1Id",
        "description": "Returns details of a [BankAccount](#type-bankaccount) identified by V1 bank account ID. \nFor more information, see \n[Retrieve a bank account by using an ID issued by V1 Bank Accounts API](/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-the-v1-bank-accounts-api).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "v1_bank_account_id",
            "description": "Connect V1 ID of the desired `BankAccount`. For more information, see \n[Retrieve a bank account by using an ID issued by V1 Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-v1-bank-accounts-api).",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBankAccountByV1IdResponse"
            }
          }
        }
      }
    },
    "/v2/bank-accounts/{bank_account_id}": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "GetBankAccount",
        "operationId": "GetBankAccount",
        "description": "Returns details of a [BankAccount](#type-bankaccount) \nlinked to a Square account. For more information, see \n[Bank Accounts API](/docs/bank-accounts-api).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "bank_account_id",
            "description": "Square-issued ID of the desired `BankAccount`.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBankAccountResponse"
            }
          }
        }
      }
    },
    "/v2/cash-drawers/shifts": {
      "get": {
        "tags": [
          "CashDrawers"
        ],
        "summary": "ListCashDrawerShifts",
        "operationId": "ListCashDrawerShifts",
        "description": "Provides the details for all of the cash drawer shifts for a location\nin a date range.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CASH_DRAWER_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CASH_DRAWER_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to query for a list of cash drawer shifts.",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "sort_order",
            "description": "The order in which cash drawer shifts are listed in the response,\nbased on their opened_at field. Default value: ASC",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "begin_time",
            "description": "The inclusive start time of the query on opened_at, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The exclusive end date of the query on opened_at, in ISO 8601 format.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "Number of cash drawer shift events in a page of results (200 by\ndefault, 1000 max).",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "Opaque cursor for fetching the next page of results.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCashDrawerShiftsResponse"
            }
          }
        }
      }
    },
    "/v2/cash-drawers/shifts/{shift_id}": {
      "get": {
        "tags": [
          "CashDrawers"
        ],
        "summary": "RetrieveCashDrawerShift",
        "operationId": "RetrieveCashDrawerShift",
        "description": "Provides the summary details for a single cash drawer shift. See\nRetrieveCashDrawerShiftEvents for a list of cash drawer shift events.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CASH_DRAWER_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CASH_DRAWER_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to retrieve cash drawer shifts from.",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "shift_id",
            "description": "The shift ID.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCashDrawerShiftResponse"
            }
          }
        }
      }
    },
    "/v2/cash-drawers/shifts/{shift_id}/events": {
      "get": {
        "tags": [
          "CashDrawers"
        ],
        "summary": "ListCashDrawerShiftEvents",
        "operationId": "ListCashDrawerShiftEvents",
        "description": "Provides a paginated list of events for a single cash drawer shift.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CASH_DRAWER_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CASH_DRAWER_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list cash drawer shifts for.",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "shift_id",
            "description": "The shift ID.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "description": "Number of resources to be returned in a page of results (200 by\ndefault, 1000 max).",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "Opaque cursor for fetching the next page of results.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCashDrawerShiftEventsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/batch-delete": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchDeleteCatalogObjects",
        "operationId": "BatchDeleteCatalogObjects",
        "description": "Deletes a set of [CatalogItem](#type-catalogitem)s based on the\nprovided list of target IDs and returns a set of successfully deleted IDs in\nthe response. Deletion is a cascading event such that all children of the\ntargeted object are also deleted. For example, deleting a CatalogItem will\nalso delete all of its [CatalogItemVariation](#type-catalogitemvariation)\nchildren.\n\n`BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted\nIDs can be deleted. The response will only include IDs that were\nactually deleted.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchDeleteCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeleteCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/batch-retrieve": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchRetrieveCatalogObjects",
        "operationId": "BatchRetrieveCatalogObjects",
        "description": "Returns a set of objects based on the provided ID.\nEach [CatalogItem](#type-catalogitem) returned in the set includes all of its\nchild information including: all of its\n[CatalogItemVariation](#type-catalogitemvariation) objects, references to\nits [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/batch-upsert": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchUpsertCatalogObjects",
        "operationId": "BatchUpsertCatalogObjects",
        "description": "Creates or updates up to 10,000 target objects based on the provided\nlist of objects. The target objects are grouped into batches and each batch is\ninserted/updated in an all-or-nothing manner. If an object within a batch is\nmalformed in some way, or violates a database constraint, the entire batch\ncontaining that item will be disregarded. However, other batches in the same\nrequest may still succeed. Each batch may contain up to 1,000 objects, and\nbatches will be processed in order as long as the total object count for the\nrequest (items, variations, modifier lists, discounts, and taxes) is no more\nthan 10,000.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchUpsertCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchUpsertCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/info": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "CatalogInfo",
        "operationId": "CatalogInfo",
        "description": "Retrieves information about the Square Catalog API, such as batch size\nlimits that can be used by the `BatchUpsertCatalogObjects` endpoint.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CatalogInfoResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/list": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "ListCatalog",
        "operationId": "ListCatalog",
        "description": "Returns a list of [CatalogObject](#type-catalogobject)s that includes\nall objects of a set of desired types (for example, all [CatalogItem](#type-catalogitem)\nand [CatalogTax](#type-catalogtax) objects) in the catalog. The `types` parameter\nis specified as a comma-separated list of valid [CatalogObject](#type-catalogobject) types:\n`ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`, `IMAGE`.\n\n__Important:__ ListCatalog does not return deleted catalog items. To retrieve\ndeleted catalog items, use SearchCatalogObjects and set `include_deleted_objects`\nto `true`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "types",
            "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.\n\nThe legal values are taken from the CatalogObjectType enum:\n`ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`,\n`MODIFIER`, `MODIFIER_LIST`, or `IMAGE`.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCatalogResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/object": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpsertCatalogObject",
        "operationId": "UpsertCatalogObject",
        "description": "Creates or updates the target [CatalogObject](#type-catalogobject).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpsertCatalogObjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpsertCatalogObjectResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/object/{object_id}": {
      "delete": {
        "tags": [
          "Catalog"
        ],
        "summary": "DeleteCatalogObject",
        "operationId": "DeleteCatalogObject",
        "description": "Deletes a single [CatalogObject](#type-catalogobject) based on the\nprovided ID and returns the set of successfully deleted IDs in the response.\nDeletion is a cascading event such that all children of the targeted object\nare also deleted. For example, deleting a [CatalogItem](#type-catalogitem)\nwill also delete all of its\n[CatalogItemVariation](#type-catalogitemvariation) children.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "object_id",
            "description": "The ID of the catalog object to be deleted. When an object is deleted, other\nobjects in the graph that depend on that object will be deleted as well (for example, deleting a\ncatalog item will delete its catalog item variations).",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCatalogObjectResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "RetrieveCatalogObject",
        "operationId": "RetrieveCatalogObject",
        "description": "Returns a single [CatalogItem](#type-catalogitem) as a\n[CatalogObject](#type-catalogobject) based on the provided ID. The returned\nobject includes all of the relevant [CatalogItem](#type-catalogitem)\ninformation including: [CatalogItemVariation](#type-catalogitemvariation)\nchildren, references to its\n[CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "object_id",
            "description": "The object ID of any type of catalog objects to be retrieved.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "include_related_objects",
            "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a CatalogItem,\nits associated CatalogCategory, CatalogTax objects,\nCatalogImages and CatalogModifierLists\nwill be returned in the `related_objects` field of the response. If the `object`\nfield of the response contains a CatalogItemVariation,\nits parent CatalogItem will be returned in the `related_objects` field of\nthe response.\n\nDefault value: `false`",
            "type": "boolean",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCatalogObjectResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/search": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "SearchCatalogObjects",
        "operationId": "SearchCatalogObjects",
        "description": "Searches for [CatalogObject](#type-CatalogObject) of any types against supported search attribute values, \nexcluding custom attribute values on items or item variations, against one or more of the specified query expressions, \n\nThis (`SearchCatalogObjects`) endpoint differs from the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems)\nendpoint in the following aspects:\n\n- `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects.\n- `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not.\n- `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does.\n- The both endpoints have different call conventions, including the query filter formats.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchCatalogObjectsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/search-catalog-items": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "SearchCatalogItems",
        "operationId": "SearchCatalogItems",
        "description": "Searches for catalog items or item variations by matching supported search attribute values, including\ncustom attribute values, against one or more of the specified query expressions, \n\nThis (`SearchCatalogItems`) endpoint differs from the [SearchCatalogObjects](#endpoint-Catalog-SearchCatalogObjects)\nendpoint in the following aspects:\n\n- `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects.\n- `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not.\n- `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does.\n- The both endpoints use different call conventions, including the query filter formats.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchCatalogItemsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchCatalogItemsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/update-item-modifier-lists": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpdateItemModifierLists",
        "operationId": "UpdateItemModifierLists",
        "description": "Updates the [CatalogModifierList](#type-catalogmodifierlist) objects\nthat apply to the targeted [CatalogItem](#type-catalogitem) without having\nto perform an upsert on the entire item.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateItemModifierListsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateItemModifierListsResponse"
            }
          }
        }
      }
    },
    "/v2/catalog/update-item-taxes": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpdateItemTaxes",
        "operationId": "UpdateItemTaxes",
        "description": "Updates the [CatalogTax](#type-catalogtax) objects that apply to the\ntargeted [CatalogItem](#type-catalogitem) without having to perform an\nupsert on the entire item.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateItemTaxesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateItemTaxesResponse"
            }
          }
        }
      }
    },
    "/v2/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "ListCustomers",
        "operationId": "ListCustomers",
        "description": "Lists customer profiles associated with a Square account.\n\nUnder normal operating conditions, newly created or updated customer profiles become available \nfor the listing operation in well under 30 seconds. Occasionally, propagation of the new or updated \nprofiles can take closer to one minute or longer, espeically during network incidents and outages.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_field",
            "description": "Indicates how Customers should be sorted.\n\nDefault: `DEFAULT`.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "Indicates whether Customers should be sorted in ascending (`ASC`) or\ndescending (`DESC`) order.\n\nDefault: `ASC`.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCustomersResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "CreateCustomer",
        "operationId": "CreateCustomer",
        "description": "Creates a new customer for a business, which can have associated cards on file.\n\nYou must provide __at least one__ of the following values in your request to this\nendpoint:\n\n- `given_name`\n- `family_name`\n- `company_name`\n- `email_address`\n- `phone_number`",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomerResponse"
            }
          }
        }
      }
    },
    "/v2/customers/groups": {
      "get": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "ListCustomerGroups",
        "operationId": "ListCustomerGroups",
        "description": "Retrieves the list of customer groups of a business.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCustomerGroupsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "CreateCustomerGroup",
        "operationId": "CreateCustomerGroup",
        "description": "Creates a new customer group for a business. \n\nThe request must include the `name` value of the group.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCustomerGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomerGroupResponse"
            }
          }
        }
      }
    },
    "/v2/customers/groups/{group_id}": {
      "delete": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "DeleteCustomerGroup",
        "operationId": "DeleteCustomerGroup",
        "description": "Deletes a customer group as identified by the `group_id` value.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "description": "The ID of the customer group to delete.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomerGroupResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "RetrieveCustomerGroup",
        "operationId": "RetrieveCustomerGroup",
        "description": "Retrieves a specific customer group as identified by the `group_id` value.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "description": "The ID of the customer group to retrieve.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCustomerGroupResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "UpdateCustomerGroup",
        "operationId": "UpdateCustomerGroup",
        "description": "Updates a customer group as identified by the `group_id` value.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE",
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE",
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "description": "The ID of the customer group to update.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerGroupResponse"
            }
          }
        }
      }
    },
    "/v2/customers/search": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "SearchCustomers",
        "operationId": "SearchCustomers",
        "description": "Searches the customer profiles associated with a Square account using \none or more supported query filters. \n\nCalling `SearchCustomers` without any explicit query filter returns all\ncustomer profiles ordered alphabetically based on `given_name` and\n`family_name`.\n\nUnder normal operating conditions, newly created or updated customer profiles become available \nfor the search operation in well under 30 seconds. Occasionally, propagation of the new or updated \nprofiles can take closer to one minute or longer, espeically during network incidents and outages.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchCustomersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchCustomersResponse"
            }
          }
        }
      }
    },
    "/v2/customers/segments": {
      "get": {
        "tags": [
          "CustomerSegments"
        ],
        "summary": "ListCustomerSegments",
        "operationId": "ListCustomerSegments",
        "description": "Retrieves the list of customer segments of a business.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "A pagination cursor returned by previous calls to __ListCustomerSegments__.\nUsed to retrieve the next set of query results.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/docs/working-with-apis/pagination) for more information.",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCustomerSegmentsResponse"
            }
          }
        }
      }
    },
    "/v2/customers/segments/{segment_id}": {
      "get": {
        "tags": [
          "CustomerSegments"
        ],
        "summary": "RetrieveCustomerSegment",
        "operationId": "RetrieveCustomerSegment",
        "description": "Retrieves a specific customer segment as identified by the `segment_id` value.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "segment_id",
            "description": "The Square-issued ID of the customer segment.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCustomerSegmentResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "DeleteCustomer",
        "operationId": "DeleteCustomer",
        "description": "Deletes a customer from a business, along with any linked cards on file. When two profiles\nare merged into a single profile, that profile is assigned a new `customer_id`. You must use the\nnew `customer_id` to delete merged profiles.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomerResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "RetrieveCustomer",
        "operationId": "RetrieveCustomer",
        "description": "Returns details for a single customer.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCustomerResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "UpdateCustomer",
        "operationId": "UpdateCustomer",
        "description": "Updates the details of an existing customer. When two profiles are merged\ninto a single profile, that profile is assigned a new `customer_id`. You must use\nthe new `customer_id` to update merged profiles.\n\nYou cannot edit a customer\u0027s cards on file with this endpoint. To make changes\nto a card on file, you must delete the existing card on file with the\n[DeleteCustomerCard](#endpoint-deletecustomercard) endpoint, then create a new one with the\n[CreateCustomerCard](#endpoint-createcustomercard) endpoint.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to update.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}/cards": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "CreateCustomerCard",
        "operationId": "CreateCustomerCard",
        "description": "Adds a card on file to an existing customer.\n\nAs with charges, calls to `CreateCustomerCard` are idempotent. Multiple\ncalls with the same card nonce return the same card record that was created\nwith the provided nonce during the _first_ call.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The Square ID of the customer profile the card is linked to.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCustomerCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomerCardResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}/cards/{card_id}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "DeleteCustomerCard",
        "operationId": "DeleteCustomerCard",
        "description": "Removes a card on file from a customer.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer that the card on file belongs to.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "card_id",
            "description": "The ID of the card on file to delete.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomerCardResponse"
            }
          }
        }
      }
    },
    "/v2/customers/{customer_id}/groups/{group_id}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "RemoveGroupFromCustomer",
        "operationId": "RemoveGroupFromCustomer",
        "description": "Removes a group membership from a customer. \n\nThe customer is identified by the `customer_id` value \nand the customer group is identified by the `group_id` value.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to remove from the group.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "group_id",
            "description": "The ID of the customer group to remove the customer from.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveGroupFromCustomerResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "AddGroupToCustomer",
        "operationId": "AddGroupToCustomer",
        "description": "Adds a group membership to a customer. \n\nThe customer is identified by the `customer_id` value \nand the customer group is identified by the `group_id` value.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "description": "The ID of the customer to add to a group.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "group_id",
            "description": "The ID of the customer group to add the customer to.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddGroupToCustomerResponse"
            }
          }
        }
      }
    },
    "/v2/devices/codes": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "ListDeviceCodes",
        "operationId": "ListDeviceCodes",
        "description": "Lists all DeviceCodes associated with the merchant.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "DEVICE_CREDENTIAL_MANAGEMENT"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "DEVICE_CREDENTIAL_MANAGEMENT"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "location_id",
            "description": "If specified, only returns DeviceCodes of the specified location.\nReturns DeviceCodes of all locations if empty.",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "product_type",
            "description": "If specified, only returns DeviceCodes targeting the specified product type.\nReturns DeviceCodes of all product types if empty.",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDeviceCodesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "CreateDeviceCode",
        "operationId": "CreateDeviceCode",
        "description": "Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected\nterminal mode.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "DEVICE_CREDENTIAL_MANAGEMENT"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "DEVICE_CREDENTIAL_MANAGEMENT"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateDeviceCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDeviceCodeResponse"
            }
          }
        }
      }
    },
    "/v2/devices/codes/{id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "GetDeviceCode",
        "operationId": "GetDeviceCode",
        "description": "Retrieves DeviceCode with the associated ID.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "DEVICE_CREDENTIAL_MANAGEMENT"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "DEVICE_CREDENTIAL_MANAGEMENT"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The unique identifier for the device code.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDeviceCodeResponse"
            }
          }
        }
      }
    },
    "/v2/disputes": {
      "get": {
        "tags": [
          "Disputes"
        ],
        "summary": "ListDisputes",
        "operationId": "ListDisputes",
        "description": "Returns a list of disputes associated\nwith a particular account.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\nFor more information, see [Paginating](https://developer.squareup.com/docs/basics/api101/pagination).",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "states",
            "description": "The dispute states to filter the result.\nIf not specified, the endpoint\nreturns all open disputes (dispute status is not\n`INQUIRY_CLOSED`, `WON`, or `LOST`).",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "location_id",
            "description": "The ID of the location for which to return \na list of disputes. If not specified,\nthe endpoint returns all open disputes\n(dispute status is not `INQUIRY_CLOSED`, `WON`, or \n`LOST`) associated with all locations.",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDisputesResponse"
            }
          }
        }
      }
    },
    "/v2/disputes/{dispute_id}": {
      "get": {
        "tags": [
          "Disputes"
        ],
        "summary": "RetrieveDispute",
        "operationId": "RetrieveDispute",
        "description": "Returns details of a specific dispute.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dispute_id",
            "description": "The ID of the dispute you want more details about.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveDisputeResponse"
            }
          }
        }
      }
    },
    "/v2/disputes/{dispute_id}/accept": {
      "post": {
        "tags": [
          "Disputes"
        ],
        "summary": "AcceptDispute",
        "operationId": "AcceptDispute",
        "description": "Accepts loss on a dispute. Square returns\nthe disputed amount to the cardholder and updates the\ndispute state to ACCEPTED.\n\nSquare debits the disputed amount from the seller’s Square\naccount. If the Square account balance does not have\nsufficient funds, Square debits the associated bank account.\nFor an overview of the Disputes API, see [Overview](/docs/disputes-api/overview).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dispute_id",
            "description": "ID of the dispute you want to accept.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AcceptDisputeResponse"
            }
          }
        }
      }
    },
    "/v2/disputes/{dispute_id}/evidence": {
      "get": {
        "tags": [
          "Disputes"
        ],
        "summary": "ListDisputeEvidence",
        "operationId": "ListDisputeEvidence",
        "description": "Returns a list of evidence associated with a dispute.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dispute_id",
            "description": "The ID of the dispute.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDisputeEvidenceResponse"
            }
          }
        }
      }
    },
    "/v2/disputes/{dispute_id}/evidence/{evidence_id}": {
      "delete": {
        "tags": [
          "Disputes"
        ],
        "summary": "RemoveDisputeEvidence",
        "operationId": "RemoveDisputeEvidence",
        "description": "Removes specified evidence from a dispute.\n\nSquare does not send the bank any evidence that\nis removed. Also, you cannot remove evidence after\nsubmitting it to the bank using [SubmitEvidence](/reference/square/disputes-api/submit-evidence).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dispute_id",
            "description": "The ID of the dispute you want to remove evidence from.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "evidence_id",
            "description": "The ID of the evidence you want to remove.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveDisputeEvidenceResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Disputes"
        ],
        "summary": "RetrieveDisputeEvidence",
        "operationId": "RetrieveDisputeEvidence",
        "description": "Returns the specific evidence metadata associated with a specific dispute.\n\nYou must maintain a copy of the evidence you upload if you want to\nreference it later. You cannot download the evidence\nafter you upload it.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dispute_id",
            "description": "The ID of the dispute that you want to retrieve evidence from.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "evidence_id",
            "description": "The ID of the evidence to retrieve.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveDisputeEvidenceResponse"
            }
          }
        }
      }
    },
    "/v2/disputes/{dispute_id}/evidence_text": {
      "post": {
        "tags": [
          "Disputes"
        ],
        "summary": "CreateDisputeEvidenceText",
        "operationId": "CreateDisputeEvidenceText",
        "description": "Uploads text to use as evidence for a dispute challenge. For more information, see\n[Challenge a Dispute](/docs/disputes-api/process-disputes#challenge-a-dispute).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dispute_id",
            "description": "The ID of the dispute you want to upload evidence for.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateDisputeEvidenceTextRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDisputeEvidenceTextResponse"
            }
          }
        }
      }
    },
    "/v2/disputes/{dispute_id}/submit-evidence": {
      "post": {
        "tags": [
          "Disputes"
        ],
        "summary": "SubmitEvidence",
        "operationId": "SubmitEvidence",
        "description": "Submits evidence to the cardholder\u0027s bank.\n\nBefore submitting evidence, Square compiles all available evidence. This includes\nevidence uploaded using the\n[CreateDisputeEvidenceFile](/reference/square/disputes-api/create-dispute-evidence-file) and\n[CreateDisputeEvidenceText](/reference/square/disputes-api/create-dispute-evidence-text) endpoints,\nand evidence automatically provided by Square, when\navailable. For more information, see\n[Challenge a Dispute](/docs/disputes-api/process-disputes#challenge-a-dispute).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dispute_id",
            "description": "The ID of the dispute you want to submit evidence for.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubmitEvidenceResponse"
            }
          }
        }
      }
    },
    "/v2/employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "ListEmployees",
        "operationId": "ListEmployees",
        "description": "",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "Filter employees returned to only those that are associated with the specified location.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "status",
            "description": "Specifies the EmployeeStatus to filter the employee by.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The number of employees to be returned on each page.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "The token required to retrieve the specified page of results.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListEmployeesResponse"
            }
          }
        }
      }
    },
    "/v2/employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "RetrieveEmployee",
        "operationId": "RetrieveEmployee",
        "description": "",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the employee that was requested.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveEmployeeResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/adjustment/{adjustment_id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryAdjustment",
        "operationId": "RetrieveInventoryAdjustment",
        "description": "Returns the [InventoryAdjustment](#type-inventoryadjustment) object\nwith the provided `adjustment_id`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "adjustment_id",
            "description": "ID of the `InventoryAdjustment` to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveInventoryAdjustmentResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/batch-change": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchChangeInventory",
        "operationId": "BatchChangeInventory",
        "description": "Applies adjustments and counts to the provided item quantities.\n\nOn success: returns the current calculated counts for all objects\nreferenced in the request.\nOn failure: returns a list of related errors.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVENTORY_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchChangeInventoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchChangeInventoryResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/batch-retrieve-changes": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchRetrieveInventoryChanges",
        "operationId": "BatchRetrieveInventoryChanges",
        "description": "Returns historical physical counts and adjustments based on the\nprovided filter criteria.\n\nResults are paginated and sorted in ascending order according their\n`occurred_at` timestamp (oldest first).\n\nBatchRetrieveInventoryChanges is a catch-all query endpoint for queries\nthat cannot be handled by other, simpler endpoints.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveInventoryChangesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveInventoryChangesResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/batch-retrieve-counts": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchRetrieveInventoryCounts",
        "operationId": "BatchRetrieveInventoryCounts",
        "description": "Returns current counts for the provided\n[CatalogObject](#type-catalogobject)s at the requested\n[Location](#type-location)s.\n\nResults are paginated and sorted in descending order according to their\n`calculated_at` timestamp (newest first).\n\nWhen `updated_after` is specified, only counts that have changed since that\ntime (based on the server timestamp for the most recent change) are\nreturned. This allows clients to perform a \"sync\" operation, for example\nin response to receiving a Webhook notification.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveInventoryCountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveInventoryCountsResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/physical-count/{physical_count_id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryPhysicalCount",
        "operationId": "RetrieveInventoryPhysicalCount",
        "description": "Returns the [InventoryPhysicalCount](#type-inventoryphysicalcount)\nobject with the provided `physical_count_id`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "physical_count_id",
            "description": "ID of the\n`InventoryPhysicalCount` to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveInventoryPhysicalCountResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/{catalog_object_id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryCount",
        "operationId": "RetrieveInventoryCount",
        "description": "Retrieves the current calculated stock count for a given\n[CatalogObject](#type-catalogobject) at a given set of\n[Location](#type-location)s. Responses are paginated and unsorted.\nFor more sophisticated queries, use a batch endpoint.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "catalog_object_id",
            "description": "ID of the `CatalogObject` to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_ids",
            "description": "The `Location` IDs to look up as a comma-separated\nlist. An empty list queries all locations.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveInventoryCountResponse"
            }
          }
        }
      }
    },
    "/v2/inventory/{catalog_object_id}/changes": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryChanges",
        "operationId": "RetrieveInventoryChanges",
        "description": "Returns a set of physical counts and inventory adjustments for the\nprovided [CatalogObject](#type-catalogobject) at the requested\n[Location](#type-location)s.\n\nResults are paginated and sorted in descending order according to their\n`occurred_at` timestamp (newest first).\n\nThere are no limits on how far back the caller can page. This endpoint is\nuseful when displaying recent changes for a specific item. For more\nsophisticated queries, use a batch endpoint.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "catalog_object_id",
            "description": "ID of the `CatalogObject` to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_ids",
            "description": "The `Location` IDs to look up as a comma-separated\nlist. An empty list queries all locations.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveInventoryChangesResponse"
            }
          }
        }
      }
    },
    "/v2/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "ListInvoices",
        "operationId": "ListInvoices",
        "description": "Returns a list of invoices for a given location. The response \nis paginated. If truncated, the response includes a `cursor` that you    \nuse in a subsequent request to fetch the next set of invoices.\nFor more information about retrieving invoices, see [Retrieve invoices](/docs/invoices-api/overview#retrieve-invoices).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "INVOICES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVOICES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location for which to list invoices.",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint. \nProvide this cursor to retrieve the next set of results for your original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination).",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The maximum number of invoices to return (200 is the maximum `limit`). \nIf not provided, the server \nuses a default limit of 100 invoices.",
            "x-is-beta": true,
            "type": "integer",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListInvoicesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "CreateInvoice",
        "operationId": "CreateInvoice",
        "description": "Creates a draft [invoice](#type-invoice) \nfor an order created using the Orders API.\n\nA draft invoice remains in your account and no action is taken. \nYou must publish the invoice before Square can process it (send it to the customer\u0027s email address or charge the customer’s card on file). \nFor more information, see [Manage Invoices Using the Invoices API](/docs/invoices-api/overview).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateInvoiceResponse"
            }
          }
        }
      }
    },
    "/v2/invoices/search": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "SearchInvoices",
        "operationId": "SearchInvoices",
        "description": "Searches for invoices from a location specified in \nthe filter. You can optionally specify customers in the filter for whom to \nretrieve invoices. In the current implementation, you can only specify one location and \noptionally one customer.\n\nThe response is paginated. If truncated, the response includes a `cursor` \nthat you use in a subsequent request to fetch the next set of invoices. \nFor more information about retrieving invoices, see [Retrieve invoices](/docs/invoices-api/overview#retrieve-invoices).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "INVOICES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVOICES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchInvoicesResponse"
            }
          }
        }
      }
    },
    "/v2/invoices/{invoice_id}": {
      "delete": {
        "tags": [
          "Invoices"
        ],
        "summary": "DeleteInvoice",
        "operationId": "DeleteInvoice",
        "description": "Deletes the specified invoice. When an invoice is deleted, the \nassociated Order status changes to CANCELED. You can only delete a draft \ninvoice (you cannot delete an invoice scheduled for publication, or a \npublished invoice).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "description": "The ID of the invoice to delete.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "version",
            "description": "The version of the `invoice` to delete.\nIf you do not know the version, you can call `GetInvoice` or \n`ListInvoices`.",
            "x-is-beta": true,
            "type": "integer",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteInvoiceResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "GetInvoice",
        "operationId": "GetInvoice",
        "description": "Retrieves an invoice by invoice ID.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "INVOICES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "INVOICES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "description": "The id of the invoice to retrieve.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetInvoiceResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "UpdateInvoice",
        "operationId": "UpdateInvoice",
        "description": "Updates an invoice by modifying field values, clearing field values, or both \nas specified in the request. \nThere are no restrictions to updating an invoice in a draft state. \nHowever, there are guidelines for updating a published invoice. \nFor more information, see [Update an invoice](/docs/invoices-api/overview#update-an-invoice).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "description": "The id of the invoice to update.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateInvoiceResponse"
            }
          }
        }
      }
    },
    "/v2/invoices/{invoice_id}/cancel": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "CancelInvoice",
        "operationId": "CancelInvoice",
        "description": "Cancels an invoice. The seller cannot collect payments for \nthe canceled invoice.\n\nYou cannot cancel an invoice in a terminal state: `PAID`, `REFUNDED`, `CANCELED`, or `FAILED`.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "description": "The ID of the `invoice` to cancel.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CancelInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelInvoiceResponse"
            }
          }
        }
      }
    },
    "/v2/invoices/{invoice_id}/publish": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "PublishInvoice",
        "operationId": "PublishInvoice",
        "description": "Publishes the specified draft invoice. \n\nAfter an invoice is published, Square \nfollows up based on the invoice configuration. For example, Square \nsends the invoice to the customer\u0027s email address, charges the customer\u0027s card on file, or does \nnothing. Square also makes the invoice available on a Square-hosted invoice page. \n\nThe invoice `status` also changes from `DRAFT` to a status \nbased on the invoice configuration. For example, the status changes to `UNPAID` if \nSquare emails the invoice or `PARTIALLY_PAID` if Square charge a card on file for a portion of the \ninvoice amount).\n\nFor more information, see \n[Create and publish an invoice](/docs/invoices-api/overview#create-and-publish-an-invoice).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "description": "The id of the invoice to publish.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/PublishInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PublishInvoiceResponse"
            }
          }
        }
      }
    },
    "/v2/labor/break-types": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListBreakTypes",
        "operationId": "ListBreakTypes",
        "description": "Returns a paginated list of `BreakType` instances for a business.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "Filter Break Types returned to only those that are associated with the\nspecified location.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "Maximum number of Break Types to return per page. Can range between 1\nand 200. The default is the maximum at 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "Pointer to the next page of Break Type results to fetch.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListBreakTypesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Labor"
        ],
        "summary": "CreateBreakType",
        "operationId": "CreateBreakType",
        "description": "Creates a new `BreakType`. \n\nA `BreakType` is a template for creating `Break` objects. \nYou must provide the following values in your request to this\nendpoint:\n\n- `location_id`\n- `break_name`\n- `expected_duration`\n- `is_paid`\n\nYou can only have 3 `BreakType` instances per location. If you attempt to add a 4th\n`BreakType` for a location, an `INVALID_REQUEST_ERROR` \"Exceeded limit of 3 breaks per location.\"\nis returned.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateBreakTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBreakTypeResponse"
            }
          }
        }
      }
    },
    "/v2/labor/break-types/{id}": {
      "delete": {
        "tags": [
          "Labor"
        ],
        "summary": "DeleteBreakType",
        "operationId": "DeleteBreakType",
        "description": "Deletes an existing `BreakType`. \n\nA `BreakType` can be deleted even if it is referenced from a `Shift`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `BreakType` being deleted.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBreakTypeResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetBreakType",
        "operationId": "GetBreakType",
        "description": "Returns a single `BreakType` specified by id.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `BreakType` being retrieved.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBreakTypeResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Labor"
        ],
        "summary": "UpdateBreakType",
        "operationId": "UpdateBreakType",
        "description": "Updates an existing `BreakType`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE",
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE",
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `BreakType` being updated.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateBreakTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBreakTypeResponse"
            }
          }
        }
      }
    },
    "/v2/labor/employee-wages": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListEmployeeWages",
        "operationId": "ListEmployeeWages",
        "description": "Returns a paginated list of `EmployeeWage` instances for a business.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "employee_id",
            "description": "Filter wages returned to only those that are associated with the\nspecified employee.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "Maximum number of Employee Wages to return per page. Can range between\n1 and 200. The default is the maximum at 200.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "Pointer to the next page of Employee Wage results to fetch.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListEmployeeWagesResponse"
            }
          }
        }
      }
    },
    "/v2/labor/employee-wages/{id}": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetEmployeeWage",
        "operationId": "GetEmployeeWage",
        "description": "Returns a single `EmployeeWage` specified by id.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `EmployeeWage` being retrieved.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetEmployeeWageResponse"
            }
          }
        }
      }
    },
    "/v2/labor/shifts": {
      "post": {
        "tags": [
          "Labor"
        ],
        "summary": "CreateShift",
        "operationId": "CreateShift",
        "description": "Creates a new `Shift`. \n\nA `Shift` represents a complete work day for a single employee. \nYou must provide the following values in your request to this\nendpoint:\n\n- `location_id`\n- `employee_id`\n- `start_at`\n\nAn attempt to create a new `Shift` can result in a `BAD_REQUEST` error when:\n- The `status` of the new `Shift` is `OPEN` and the employee has another \nshift with an `OPEN` status. \n- The `start_at` date is in the future\n- the `start_at` or `end_at` overlaps another shift for the same employee\n- If `Break`s are set in the request, a break `start_at`\nmust not be before the `Shift.start_at`. A break `end_at` must not be after\nthe `Shift.end_at`",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateShiftRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateShiftResponse"
            }
          }
        }
      }
    },
    "/v2/labor/shifts/search": {
      "post": {
        "tags": [
          "Labor"
        ],
        "summary": "SearchShifts",
        "operationId": "SearchShifts",
        "description": "Returns a paginated list of `Shift` records for a business. \nThe list to be returned can be filtered by:\n- Location IDs **and**\n- employee IDs **and**\n- shift status (`OPEN`, `CLOSED`) **and**\n- shift start **and**\n- shift end **and**\n- work day details\n\nThe list can be sorted by:\n- `start_at`\n- `end_at`\n- `created_at`\n- `updated_at`",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchShiftsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchShiftsResponse"
            }
          }
        }
      }
    },
    "/v2/labor/shifts/{id}": {
      "delete": {
        "tags": [
          "Labor"
        ],
        "summary": "DeleteShift",
        "operationId": "DeleteShift",
        "description": "Deletes a `Shift`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `Shift` being deleted.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteShiftResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetShift",
        "operationId": "GetShift",
        "description": "Returns a single `Shift` specified by id.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `Shift` being retrieved.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetShiftResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Labor"
        ],
        "summary": "UpdateShift",
        "operationId": "UpdateShift",
        "description": "Updates an existing `Shift`. \n\nWhen adding a `Break` to a `Shift`, any earlier `Breaks` in the `Shift` have \nthe `end_at` property set to a valid RFC-3339 datetime string. \n\nWhen closing a `Shift`, all `Break` instances in the shift must be complete with `end_at`\nset on each `Break`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE",
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE",
              "TIMECARDS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "ID of the object being updated.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateShiftRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateShiftResponse"
            }
          }
        }
      }
    },
    "/v2/labor/workweek-configs": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListWorkweekConfigs",
        "operationId": "ListWorkweekConfigs",
        "description": "Returns a list of `WorkweekConfig` instances for a business.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "description": "Maximum number of Workweek Configs to return per page.",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "Pointer to the next page of Workweek Config results to fetch.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListWorkweekConfigsResponse"
            }
          }
        }
      }
    },
    "/v2/labor/workweek-configs/{id}": {
      "put": {
        "tags": [
          "Labor"
        ],
        "summary": "UpdateWorkweekConfig",
        "operationId": "UpdateWorkweekConfig",
        "description": "Updates a `WorkweekConfig`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE",
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE",
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "UUID for the `WorkweekConfig` object being updated.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateWorkweekConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateWorkweekConfigResponse"
            }
          }
        }
      }
    },
    "/v2/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "ListLocations",
        "operationId": "ListLocations",
        "description": "Provides information of all locations of a business.\n\nMost other Connect API endpoints have a required `location_id` path parameter.\nThe `id` field of the [`Location`](#type-location) objects returned by this\nendpoint correspond to that `location_id` parameter.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListLocationsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "CreateLocation",
        "operationId": "CreateLocation",
        "description": "Creates a location.\nFor more information about locations, see [Locations API Overview](/locations-api).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateLocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateLocationResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "RetrieveLocation",
        "operationId": "RetrieveLocation",
        "description": "Retrieves details of a location. You can specify \"main\" \nas the location ID to retrieve details of the \nmain location. For more information, \nsee [Locations API Overview](/docs/locations-api).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to retrieve. If you specify the string \"main\",\nthen the endpoint returns the main location.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveLocationResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "UpdateLocation",
        "operationId": "UpdateLocation",
        "description": "Updates a location.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to update.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateLocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateLocationResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/additional-recipient-receivable-refunds": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "ListAdditionalRecipientReceivableRefunds",
        "operationId": "ListAdditionalRecipientReceivableRefunds",
        "description": "Returns a list of refunded transactions (across all possible originating locations) relating to monies\ncredited to the provided location ID by another Square account using the `additional_recipients` field in a transaction.\n\nMax results per [page](#paginatingresults): 50",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list AdditionalRecipientReceivableRefunds for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAdditionalRecipientReceivableRefundsResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/additional-recipient-receivables": {
      "get": {
        "tags": [
          "Reporting"
        ],
        "summary": "ListAdditionalRecipientReceivables",
        "operationId": "ListAdditionalRecipientReceivables",
        "description": "Returns a list of receivables (across all possible sending locations) representing monies credited\nto the provided location ID by another Square account using the `additional_recipients` field in a transaction.\n\nMax results per [page](#paginatingresults): 50",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list AdditionalRecipientReceivables for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAdditionalRecipientReceivablesResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/checkouts": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "CreateCheckout",
        "operationId": "CreateCheckout",
        "description": "Links a `checkoutId` to a `checkout_page_url` that customers will\nbe directed to in order to provide their payment information using a\npayment processing workflow hosted on connect.squareup.com.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE",
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE",
              "ORDERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the business location to associate the checkout with.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateCheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCheckoutResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CreateOrder",
        "operationId": "CreateOrder",
        "description": "Creates a new [Order](#type-order) which can include information on products for\npurchase and settings to apply to the purchase.\n\nTo pay for a created order, please refer to the [Pay for Orders](/orders-api/pay-for-orders)\nguide.\n\nYou can modify open orders using the [UpdateOrder](#endpoint-orders-updateorder) endpoint.\n\nTo learn more about the Orders API, see the\n[Orders API Overview](/orders-api/what-it-does).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the business location to associate the order with.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateOrderResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/orders/batch-retrieve": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "BatchRetrieveOrders",
        "operationId": "BatchRetrieveOrders",
        "description": "Retrieves a set of [Order](#type-order)s by their IDs.\n\nIf a given Order ID does not exist, the ID is ignored instead of generating an error.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the orders\u0027 associated location.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveOrdersResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/orders/{order_id}": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "UpdateOrder",
        "operationId": "UpdateOrder",
        "description": "Updates an open [Order](#type-order) by adding, replacing, or deleting\nfields. Orders with a `COMPLETED` or `CANCELED` state cannot be updated.\n\nAn UpdateOrder request requires the following:\n\n- The `order_id` in the endpoint path, identifying the order to update.\n- The latest `version` of the order to update.\n- The [sparse order](/orders-api/manage-orders#sparse-order-objects)\ncontaining only the fields to update and the version the update is\nbeing applied to.\n- If deleting fields, the [dot notation paths](/orders-api/manage-orders#on-dot-notation)\nidentifying fields to clear.\n\nTo pay for an order, please refer to the [Pay for Orders](/orders-api/pay-for-orders) guide.\n\nTo learn more about the Orders API, see the\n[Orders API Overview](/orders-api/what-it-does).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the order\u0027s associated location.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "order_id",
            "description": "The ID of the order to update.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateOrderResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/refunds": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "ListRefunds",
        "operationId": "ListRefunds",
        "description": "Lists refunds for one of a business\u0027s locations.\n\nIn addition to full or partial tender refunds processed through Square APIs,\nrefunds may result from itemized returns or exchanges through Square\u0027s\nPoint of Sale applications.\n\nRefunds with a `status` of `PENDING` are not currently included in this\nendpoint\u0027s response.\n\nMax results per [page](#paginatingresults): 50",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list refunds for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRefundsResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "ListTransactions",
        "operationId": "ListTransactions",
        "description": "Lists transactions for a particular location.\n\nTransactions include payment information from sales and exchanges and refund\ninformation from returns and exchanges.\n\nMax results per [page](#paginatingresults): 50",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to list transactions for.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "begin_time",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTransactionsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Charge",
        "operationId": "Charge",
        "description": "Charges a card represented by a card nonce or a customer\u0027s card on file.\n\nYour request to this endpoint must include _either_:\n\n- A value for the `card_nonce` parameter (to charge a card nonce generated\nwith the `SqPaymentForm`)\n- Values for the `customer_card_id` and `customer_id` parameters (to charge\na customer\u0027s card on file)\n\nIn order for an eCommerce payment to potentially qualify for\n[Square chargeback protection](https://squareup.com/help/article/5394), you\n_must_ provide values for the following parameters in your request:\n\n- `buyer_email_address`\n- At least one of `billing_address` or `shipping_address`\n\nWhen this response is returned, the amount of Square\u0027s processing fee might not yet be\ncalculated. To obtain the processing fee, wait about ten seconds and call\n[RetrieveTransaction](#endpoint-retrievetransaction). See the `processing_fee_money`\nfield of each [Tender included](#type-tender) in the transaction.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the location to associate the created transaction with.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/ChargeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ChargeResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "RetrieveTransaction",
        "operationId": "RetrieveTransaction",
        "description": "Retrieves details for a single transaction.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the transaction\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "The ID of the transaction to retrieve.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveTransactionResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/capture": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "CaptureTransaction",
        "operationId": "CaptureTransaction",
        "description": "Captures a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\n\nSee [Delayed capture transactions](/payments/transactions/overview#delayed-capture)\nfor more information.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CaptureTransactionResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/refund": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "CreateRefund",
        "operationId": "CreateRefund",
        "description": "Initiates a refund for a previously charged tender.\n\nYou must issue a refund within 120 days of the associated payment. See\n[this article](https://squareup.com/help/us/en/article/5060) for more information\non refund behavior.\n\nNOTE: Card-present transactions with Interac credit cards **cannot be\nrefunded using the Connect API**. Interac transactions must refunded\nin-person (e.g., dipping the card using POS app).",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "The ID of the original transaction\u0027s associated location.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "The ID of the original transaction that includes the tender to refund.",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRefundResponse"
            }
          }
        }
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/void": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "VoidTransaction",
        "operationId": "VoidTransaction",
        "description": "Cancels a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\n\nSee [Delayed capture transactions](/payments/transactions/overview#delayed-capture)\nfor more information.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "description": "",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "transaction_id",
            "description": "",
            "x-is-deprecated": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VoidTransactionResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/accounts": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "CreateLoyaltyAccount",
        "operationId": "CreateLoyaltyAccount",
        "description": "Creates a loyalty account. For more information, see \n[Create a loyalty account](/docs/loyalty-api/overview/#loyalty-overview-create-account).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateLoyaltyAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateLoyaltyAccountResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/accounts/search": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "SearchLoyaltyAccounts",
        "operationId": "SearchLoyaltyAccounts",
        "description": "Searches for loyalty accounts. \nIn the current implementation, you can search for a loyalty account using the phone number associated with the account. \nIf no phone number is provided, all loyalty accounts are returned.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchLoyaltyAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchLoyaltyAccountsResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/accounts/{account_id}": {
      "get": {
        "tags": [
          "Loyalty"
        ],
        "summary": "RetrieveLoyaltyAccount",
        "operationId": "RetrieveLoyaltyAccount",
        "description": "Retrieves a loyalty account.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "description": "The ID of the `loyalty account` to retrieve.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveLoyaltyAccountResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/accounts/{account_id}/accumulate": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "AccumulateLoyaltyPoints",
        "operationId": "AccumulateLoyaltyPoints",
        "description": "Adds points to a loyalty account.\n\n- If you are using the Orders API to manage orders, you only provide the `order_id`. \nThe endpoint reads the order to compute points to add to the buyer\u0027s account.\n- If you are not using the Orders API to manage orders, \nyou first perform a client-side computation to compute the points.  \nFor spend-based and visit-based programs, you can call \n`CalculateLoyaltyPoints` to compute the points. For more information, \nsee [Loyalty Program Overview](/docs/loyalty/overview). \nYou then provide the points in a request to this endpoint. \n\nFor more information, see [Accumulate points](/docs/loyalty-api/overview/#accumulate-points).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "description": "The `loyalty account` ID to which to add the points.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/AccumulateLoyaltyPointsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccumulateLoyaltyPointsResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/accounts/{account_id}/adjust": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "AdjustLoyaltyPoints",
        "operationId": "AdjustLoyaltyPoints",
        "description": "Adds points to or subtracts points from a buyer\u0027s account. \n\nUse this endpoint only when you need to manually adjust points. Otherwise, in your application flow, you call \n[AccumulateLoyaltyPoints](/reference/square/loyalty-api/accumulate-loyalty-points) \nto add points when a buyer pays for the purchase.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "description": "The ID of the `loyalty account` in which to adjust the points.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/AdjustLoyaltyPointsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdjustLoyaltyPointsResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/events/search": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "SearchLoyaltyEvents",
        "operationId": "SearchLoyaltyEvents",
        "description": "Searches for loyalty events.\n\nA Square loyalty program maintains a ledger of events that occur during the lifetime of a \nbuyer\u0027s loyalty account. Each change in the point balance \n(for example, points earned, points redeemed, and points expired) is \nrecorded in the ledger. Using this endpoint, you can search the ledger for events. \nFor more information, see \n[Loyalty events](/docs/loyalty-api/overview/#loyalty-events).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchLoyaltyEventsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchLoyaltyEventsResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/programs": {
      "get": {
        "tags": [
          "Loyalty"
        ],
        "summary": "ListLoyaltyPrograms",
        "operationId": "ListLoyaltyPrograms",
        "description": "Returns a list of loyalty programs in the seller\u0027s account.\nCurrently, a seller can only have one loyalty program. For more information, see \n[Loyalty Overview](/docs/loyalty/overview).\n.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListLoyaltyProgramsResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/programs/{program_id}/calculate": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "CalculateLoyaltyPoints",
        "operationId": "CalculateLoyaltyPoints",
        "description": "Calculates the points a purchase earns.\n\n- If you are using the Orders API to manage orders, you provide `order_id` in the request. The \nendpoint calculates the points by reading the order.\n- If you are not using the Orders API to manage orders, you provide the purchase amount in \nthe request for the endpoint to calculate the points.\n\nAn application might call this endpoint to show the points that a buyer can earn with the \nspecific purchase.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "program_id",
            "description": "The `loyalty program` ID, which defines the rules for accruing points.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CalculateLoyaltyPointsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CalculateLoyaltyPointsResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/rewards": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "CreateLoyaltyReward",
        "operationId": "CreateLoyaltyReward",
        "description": "Creates a loyalty reward. In the process, the endpoint does following:\n\n- Uses the `reward_tier_id` in the request to determine the number of points \nto lock for this reward. \n- If the request includes `order_id`, it adds the reward and related discount to the order. \n\nAfter a reward is created, the points are locked and \nnot available for the buyer to redeem another reward. \nFor more information, see \n[Loyalty rewards](/docs/loyalty-api/overview/#loyalty-overview-loyalty-rewards).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateLoyaltyRewardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateLoyaltyRewardResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/rewards/search": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "SearchLoyaltyRewards",
        "operationId": "SearchLoyaltyRewards",
        "description": "Searches for loyalty rewards in a loyalty account. \n\nIn the current implementation, the endpoint supports search by the reward `status`.\n\nIf you know a reward ID, use the \n[RetrieveLoyaltyReward](/reference/square/loyalty-api/retrieve-loyalty-reward) endpoint.\n\nFor more information about loyalty rewards, see \n[Loyalty Rewards](/docs/loyalty-api/overview/#loyalty-rewards).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchLoyaltyRewardsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchLoyaltyRewardsResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/rewards/{reward_id}": {
      "delete": {
        "tags": [
          "Loyalty"
        ],
        "summary": "DeleteLoyaltyReward",
        "operationId": "DeleteLoyaltyReward",
        "description": "Deletes a loyalty reward by doing the following:\n\n- Returns the loyalty points back to the loyalty account.\n- If an order ID was specified when the reward was created \n(see [CreateLoyaltyReward](/reference/square/loyalty-api/create-loyalty-reward)), \nit updates the order by removing the reward and related \ndiscounts.\n\nYou cannot delete a reward that has reached the terminal state (REDEEMED). \nFor more information, see \n[Loyalty rewards](/docs/loyalty-api/overview/#loyalty-overview-loyalty-rewards).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "reward_id",
            "description": "The ID of the `loyalty reward` to delete.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteLoyaltyRewardResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Loyalty"
        ],
        "summary": "RetrieveLoyaltyReward",
        "operationId": "RetrieveLoyaltyReward",
        "description": "Retrieves a loyalty reward.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "reward_id",
            "description": "The ID of the `loyalty reward` to retrieve.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveLoyaltyRewardResponse"
            }
          }
        }
      }
    },
    "/v2/loyalty/rewards/{reward_id}/redeem": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "RedeemLoyaltyReward",
        "operationId": "RedeemLoyaltyReward",
        "description": "Redeems a loyalty reward.\n\nThe endpoint sets the reward to the terminal state (`REDEEMED`). \n\nIf you are using your own order processing system (not using the \nOrders API), you call this endpoint after the buyer paid for the \npurchase.\n\nAfter the reward reaches the terminal state, it cannot be deleted. \nIn other words, points used for the reward cannot be returned \nto the account.\n\nFor more information, see \n[Loyalty rewards](/docs/loyalty-api/overview/#loyalty-overview-loyalty-rewards).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "reward_id",
            "description": "The ID of the `loyalty reward` to redeem.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/RedeemLoyaltyRewardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RedeemLoyaltyRewardResponse"
            }
          }
        }
      }
    },
    "/v2/merchants": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "ListMerchants",
        "operationId": "ListMerchants",
        "description": "Returns `Merchant` information for a given access token.\n\nIf you don\u0027t know a `Merchant` ID, you can use this endpoint to retrieve the merchant ID for an access token.\nYou can specify your personal access token to get your own merchant information or specify an OAuth token\nto get the information for the  merchant that granted you access.\n\nIf you know the merchant ID, you can also use the [RetrieveMerchant](#endpoint-merchants-retrievemerchant)\nendpoint to get the merchant information.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "description": "The cursor generated by the previous response.",
            "type": "integer",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListMerchantsResponse"
            }
          }
        }
      }
    },
    "/v2/merchants/{merchant_id}": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "RetrieveMerchant",
        "operationId": "RetrieveMerchant",
        "description": "Retrieve a `Merchant` object for the given `merchant_id`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "merchant_id",
            "description": "The ID of the merchant to retrieve. If the string \"me\" is supplied as the ID,\nthen retrieve the merchant that is currently accessible to this call.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveMerchantResponse"
            }
          }
        }
      }
    },
    "/v2/orders/calculate": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CalculateOrder",
        "operationId": "CalculateOrder",
        "description": "Calculates an [Order](#type-order).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CalculateOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CalculateOrderResponse"
            }
          }
        }
      }
    },
    "/v2/orders/search": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SearchOrders",
        "operationId": "SearchOrders",
        "description": "Search all orders for one or more locations. Orders include all sales,\nreturns, and exchanges regardless of how or when they entered the Square\nEcosystem (e.g. Point of Sale, Invoices, Connect APIs, etc).\n\nSearchOrders requests need to specify which locations to search and define a\n[`SearchOrdersQuery`](#type-searchordersquery) object which controls\nhow to sort or filter the results. Your SearchOrdersQuery can:\n\n  Set filter criteria.\n  Set sort order.\n  Determine whether to return results as complete Order objects, or as\n[OrderEntry](#type-orderentry) objects.\n\nNote that details for orders processed with Square Point of Sale while in\noffline mode may not be transmitted to Square for up to 72 hours. Offline\norders have a `created_at` value that reflects the time the order was created,\nnot the time it was subsequently transmitted to Square.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchOrdersResponse"
            }
          }
        }
      }
    },
    "/v2/orders/{order_id}/pay": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "PayOrder",
        "operationId": "PayOrder",
        "description": "Pay for an [order](#type-order) using one or more approved [payments](#type-payment),\nor settle an order with a total of `0`.\n\nThe total of the `payment_ids` listed in the request must be equal to the order\ntotal. Orders with a total amount of `0` can be marked as paid by specifying an empty\narray of `payment_ids` in the request.\n\nTo be used with PayOrder, a payment must:\n\n- Reference the order by specifying the `order_id` when [creating the payment](#endpoint-payments-createpayment).\nAny approved payments that reference the same `order_id` not specified in the\n`payment_ids` will be canceled.\n- Be approved with [delayed capture](/payments-api/take-payments#delayed-capture).\nUsing a delayed capture payment with PayOrder will complete the approved payment.\n\nLearn how to [pay for orders with a single payment using the Payments API](/orders-api/pay-for-orders).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE",
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE",
              "ORDERS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "description": "The ID of the order being paid.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/PayOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PayOrderResponse"
            }
          }
        }
      }
    },
    "/v2/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "ListPayments",
        "operationId": "ListPayments",
        "description": "Retrieves a list of payments taken by the account making the request.\n\nMax results per page: 100",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "begin_time",
            "description": "Timestamp for the beginning of the reporting period, in RFC 3339 format.\nInclusive. Default: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "Timestamp for the end of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed.\n- `ASC` - oldest to newest\n- `DESC` - newest to oldest (default).",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "location_id",
            "description": "Limit results to the location supplied. By default, results are returned\nfor all locations associated with the merchant.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "total",
            "description": "The exact amount in the total_money for a `Payment`.",
            "type": "integer",
            "format": "int64",
            "in": "query",
            "required": false
          },
          {
            "name": "last_4",
            "description": "The last 4 digits of `Payment` card.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "card_brand",
            "description": "The brand of `Payment` card. For example, `VISA`",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPaymentsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "CreatePayment",
        "operationId": "CreatePayment",
        "description": "Charges a payment source, for example, a card \nrepresented by customer\u0027s card on file or a card nonce. In addition \nto the payment source, the request must also include the \namount to accept for the payment.\n\nThere are several optional parameters that you can include in the request. \nFor example, tip money, whether to autocomplete the payment, or a reference ID\nto correlate this payment with another system. \nFor more information about these \npayment options, see [Take Payments](/payments-api/take-payments).\n\nThe `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission is required\nto enable application fees.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreatePaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreatePaymentResponse"
            }
          }
        }
      }
    },
    "/v2/payments/cancel": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "CancelPaymentByIdempotencyKey",
        "operationId": "CancelPaymentByIdempotencyKey",
        "description": "Cancels (voids) a payment identified by the idempotency key that is specified in the\nrequest.\n\nUse this method when status of a CreatePayment request is unknown. For example, after you send a\nCreatePayment request a network error occurs and you don\u0027t get a response. In this case, you can\ndirect Square to cancel the payment using this endpoint. In the request, you provide the same\nidempotency key that you provided in your CreatePayment request you want  to cancel. After\ncancelling the payment, you can submit your CreatePayment request again.\n\nNote that if no payment with the specified idempotency key is found, no action is taken, the end\npoint returns successfully.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CancelPaymentByIdempotencyKeyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelPaymentByIdempotencyKeyResponse"
            }
          }
        }
      }
    },
    "/v2/payments/{payment_id}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "GetPayment",
        "operationId": "GetPayment",
        "description": "Retrieves details for a specific Payment.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "payment_id",
            "description": "Unique ID for the desired `Payment`.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetPaymentResponse"
            }
          }
        }
      }
    },
    "/v2/payments/{payment_id}/cancel": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "CancelPayment",
        "operationId": "CancelPayment",
        "description": "Cancels (voids) a payment. If you set `autocomplete` to false when creating a payment, \nyou can cancel the payment using this endpoint. For more information, see \n[Delayed Payments](/payments-api/take-payments#delayed-payments).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "payment_id",
            "description": "`payment_id` identifying the payment to be canceled.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelPaymentResponse"
            }
          }
        }
      }
    },
    "/v2/payments/{payment_id}/complete": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "CompletePayment",
        "operationId": "CompletePayment",
        "description": "Completes (captures) a payment.\n\nBy default, payments are set to complete immediately after they are created. \nIf you set autocomplete to false when creating a payment, you can complete (capture) \nthe payment using this endpoint. For more information, see\n[Delayed Payments](/payments-api/take-payments#delayed-payments).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "payment_id",
            "description": "Unique ID identifying the payment to be completed.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompletePaymentResponse"
            }
          }
        }
      }
    },
    "/v2/refunds": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "summary": "ListPaymentRefunds",
        "operationId": "ListPaymentRefunds",
        "description": "Retrieves a list of refunds for the account making the request.\n\nMax results per page: 100",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "begin_time",
            "description": "Timestamp for the beginning of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time minus one year.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "end_time",
            "description": "Timestamp for the end of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "sort_order",
            "description": "The order in which results are listed.\n- `ASC` - oldest to newest\n- `DESC` - newest to oldest (default).",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "location_id",
            "description": "Limit results to the location supplied. By default, results are returned\nfor all locations associated with the merchant.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "status",
            "description": "If provided, only refunds with the given status are returned.\nFor a list of refund status values, see `PaymentRefund`.\n\nDefault: If omitted refunds are returned regardless of status.",
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "source_type",
            "description": "If provided, only refunds with the given source type are returned.\n- `CARD` - List refunds only for payments where card was specified as payment\nsource.\n\nDefault: If omitted refunds are returned regardless of source type.",
            "type": "string",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPaymentRefundsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Refunds"
        ],
        "summary": "RefundPayment",
        "operationId": "RefundPayment",
        "description": "Refunds a payment. You can refund the entire payment amount or a \nportion of it. For more information, see \n[Payments and Refunds Overview](/payments-api/overview).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/RefundPaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RefundPaymentResponse"
            }
          }
        }
      }
    },
    "/v2/refunds/{refund_id}": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "summary": "GetPaymentRefund",
        "operationId": "GetPaymentRefund",
        "description": "Retrieves a specific `Refund` using the `refund_id`.",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "refund_id",
            "description": "Unique ID for the desired `PaymentRefund`.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetPaymentRefundResponse"
            }
          }
        }
      }
    },
    "/v2/subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "CreateSubscription",
        "operationId": "CreateSubscription",
        "description": "Creates a subscription for a customer to a subscription plan.\n\nIf you provide a card on file in the request, Square charges the card for \nthe subscription. Otherwise, Square bills an invoice to the customer\u0027s email \naddress. The subscription starts immediately, unless the request includes \nthe optional `start_date`. Each individual subscription is associated with a particular location. \n\nFor more information, \nsee [Subscription API Overview](/docs/subscriptions-api/overview).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_READ",
          "PAYMENTS_WRITE",
          "SUBSCRIPTIONS_WRITE",
          "ITEMS_READ",
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ",
              "PAYMENTS_WRITE",
              "SUBSCRIPTIONS_WRITE",
              "ITEMS_READ",
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v2/subscriptions/search": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "SearchSubscriptions",
        "operationId": "SearchSubscriptions",
        "description": "Searches for subscriptions. \nResults are ordered chronologically by subscription creation date. If\nthe request specifies more than one location ID, \nthe endpoint orders the result \nby location ID, and then by creation date within each location. If no locations are given\nin the query, all locations are searched.\n\nYou can also optionally specify `customer_ids` to search by customer. \nIf left unset, all customers \nassociated with the specified locations are returned. \nIf the request specifies customer IDs, the endpoint orders results \nfirst by location, within location by customer ID, and within \ncustomer by subscription creation date.\n\nFor more information, see \n[Retrieve subscriptions](/docs/subscriptions-api/overview#retrieve-subscriptions).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "SUBSCRIPTIONS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "SUBSCRIPTIONS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchSubscriptionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchSubscriptionsResponse"
            }
          }
        }
      }
    },
    "/v2/subscriptions/{subscription_id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "RetrieveSubscription",
        "operationId": "RetrieveSubscription",
        "description": "Retrieves a subscription.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "SUBSCRIPTIONS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "SUBSCRIPTIONS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "description": "The ID of the subscription to retrieve.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveSubscriptionResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "UpdateSubscription",
        "operationId": "UpdateSubscription",
        "description": "Updates a subscription. You can set, modify, and clear the \n`subscription` field values. For more information and examples, see \n[Update subscriptions](/docs/subscriptions-api/overview#update-subscriptions).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_READ",
          "PAYMENTS_WRITE",
          "SUBSCRIPTIONS_WRITE",
          "ITEMS_READ",
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ",
              "PAYMENTS_WRITE",
              "SUBSCRIPTIONS_WRITE",
              "ITEMS_READ",
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "description": "The ID for the subscription to update.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateSubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v2/subscriptions/{subscription_id}/cancel": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "CancelSubscription",
        "operationId": "CancelSubscription",
        "description": "Cancels a subscription immediately and sets the subscription\n`status` to `CANCELED`. You can also use the `UpdateSubscription`\nendpoint to cancel a subscription at a future date. For more\ninformation, see\n[CancelSubscriptions](/docs/subscriptions-api/overview#cancel-subscriptions).",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "SUBSCRIPTIONS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "SUBSCRIPTIONS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "description": "The ID of the subscription to cancel.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v2/subscriptions/{subscription_id}/events": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "ListSubscriptionEvents",
        "operationId": "ListSubscriptionEvents",
        "description": "Lists all events for a specific subscription.\nIn the current implementation, only `START_SUBSCRIPTION` and `STOP_SUBSCRIPTION` (when the subscription was canceled) events are returned.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "SUBSCRIPTIONS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "SUBSCRIPTIONS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "description": "The ID of the subscription to retrieve the events for.",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "cursor",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination).",
            "x-is-beta": true,
            "type": "string",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "description": "The upper limit on the number of subscription events to return \nin the response. \n\nDefault: `200`",
            "x-is-beta": true,
            "type": "integer",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSubscriptionEventsResponse"
            }
          }
        }
      }
    },
    "/v2/team-members": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "CreateTeamMember",
        "operationId": "CreateTeamMember",
        "description": "Creates a single `TeamMember` object. The `TeamMember` will be returned on successful creates.\nYou must provide the following values in your request to this endpoint:\n- `first_name`\n- `last_name`\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#createteammember).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateTeamMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateTeamMemberResponse"
            }
          }
        }
      }
    },
    "/v2/team-members/bulk-create": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "BulkCreateTeamMembers",
        "operationId": "BulkCreateTeamMembers",
        "description": "Creates multiple `TeamMember` objects. The created `TeamMember` objects will be returned on successful creates.\nThis process is non-transactional and will process as much of the request as is possible. If one of the creates in\nthe request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response\nwill contain explicit error information for this particular create.\n\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#bulkcreateteammembers).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BulkCreateTeamMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BulkCreateTeamMembersResponse"
            }
          }
        }
      }
    },
    "/v2/team-members/bulk-update": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "BulkUpdateTeamMembers",
        "operationId": "BulkUpdateTeamMembers",
        "description": "Updates multiple `TeamMember` objects. The updated `TeamMember` objects will be returned on successful updates.\nThis process is non-transactional and will process as much of the request as is possible. If one of the updates in\nthe request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response\nwill contain explicit error information for this particular update.\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#bulkupdateteammembers).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/BulkUpdateTeamMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BulkUpdateTeamMembersResponse"
            }
          }
        }
      }
    },
    "/v2/team-members/search": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "SearchTeamMembers",
        "operationId": "SearchTeamMembers",
        "description": "Returns a paginated list of `TeamMember` objects for a business.\nThe list to be returned can be filtered by:\n- location IDs **and**\n- `is_active`",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchTeamMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchTeamMembersResponse"
            }
          }
        }
      }
    },
    "/v2/team-members/{team_member_id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "RetrieveTeamMember",
        "operationId": "RetrieveTeamMember",
        "description": "Retrieve a `TeamMember` object for the given `TeamMember.id`\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#retrieveteammember).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "team_member_id",
            "description": "The ID of the team member to retrieve.",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveTeamMemberResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "UpdateTeamMember",
        "operationId": "UpdateTeamMember",
        "description": "Updates a single `TeamMember` object. The `TeamMember` will be returned on successful updates.\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#updateteammember).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "team_member_id",
            "description": "The ID of the team member to update.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateTeamMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateTeamMemberResponse"
            }
          }
        }
      }
    },
    "/v2/team-members/{team_member_id}/wage-setting": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "RetrieveWageSetting",
        "operationId": "RetrieveWageSetting",
        "description": "Retrieve a `WageSetting` object for a team member specified\nby `TeamMember.id`.\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#retrievewagesetting).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "team_member_id",
            "description": "The ID of the team member to retrieve wage setting for",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveWageSettingResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "UpdateWageSetting",
        "operationId": "UpdateWageSetting",
        "description": "Creates or updates a `WageSetting` object. The object is created if a\n`WageSetting` with the specified `team_member_id` does not exist. Otherwise,\nit fully replaces the `WageSetting` object for the team member.\nThe `WageSetting` will be returned upon successful update.\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#updatewagesetting).",
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "team_member_id",
            "description": "The ID of the team member to update the `WageSetting` object for.",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/UpdateWageSettingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateWageSettingResponse"
            }
          }
        }
      }
    },
    "/v2/terminals/checkouts": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "CreateTerminalCheckout",
        "operationId": "CreateTerminalCheckout",
        "description": "Creates a new Terminal checkout request and sends it to the specified device to take a payment for the requested amount.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/CreateTerminalCheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateTerminalCheckoutResponse"
            }
          }
        }
      }
    },
    "/v2/terminals/checkouts/search": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "SearchTerminalCheckouts",
        "operationId": "SearchTerminalCheckouts",
        "description": "Retrieves a filtered list of Terminal checkout requests created by the account making the request.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "schema": {
              "$ref": "#/definitions/SearchTerminalCheckoutsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchTerminalCheckoutsResponse"
            }
          }
        }
      }
    },
    "/v2/terminals/checkouts/{checkout_id}": {
      "get": {
        "tags": [
          "Terminal"
        ],
        "summary": "GetTerminalCheckout",
        "operationId": "GetTerminalCheckout",
        "description": "Retrieves a Terminal checkout request by checkout_id.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "parameters": [
          {
            "name": "checkout_id",
            "description": "Unique ID for the desired `TerminalCheckout`",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTerminalCheckoutResponse"
            }
          }
        }
      }
    },
    "/v2/terminals/checkouts/{checkout_id}/cancel": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "CancelTerminalCheckout",
        "operationId": "CancelTerminalCheckout",
        "description": "Cancels a Terminal checkout request, if the status of the request permits it.",
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2020-08-12",
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "parameters": [
          {
            "name": "checkout_id",
            "description": "Unique ID for the desired `TerminalCheckout`",
            "x-is-beta": true,
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelTerminalCheckoutResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActionCancelReason": {
      "type": "string",
      "enum": [
        "BUYER_CANCELED",
        "SELLER_CANCELED",
        "TIMED_OUT"
      ],
      "x-enum-elements": [
        {
          "name": "BUYER_CANCELED",
          "description": "A person canceled the `TerminalCheckout` from a Square device."
        },
        {
          "name": "SELLER_CANCELED",
          "description": "A client canceled the `TerminalCheckout` using the API."
        },
        {
          "name": "TIMED_OUT",
          "description": "The `TerminalCheckout` timed out (see `deadline_duration` on the `TerminalCheckout`)."
        }
      ],
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "BankAccountStatus": {
      "type": "string",
      "enum": [
        "VERIFICATION_IN_PROGRESS",
        "VERIFIED",
        "DISABLED"
      ],
      "x-enum-elements": [
        {
          "name": "VERIFICATION_IN_PROGRESS",
          "description": "Indicates that the verification process has started. Some features\n(for example, creditable or debitable) may be provisionally enabled on the bank\naccount."
        },
        {
          "name": "VERIFIED",
          "description": "Indicates that the bank account was successfully verified."
        },
        {
          "name": "DISABLED",
          "description": "Indicates that the bank account is disabled and is permanently unusable\nfor funds transfer. A bank account can be disabled because of a failed verification\nattempt or a failed deposit attempt."
        }
      ],
      "description": "Indicates the current verification status of a `BankAccount` object.",
      "x-release-status": "PUBLIC"
    },
    "BankAccountType": {
      "type": "string",
      "enum": [
        "CHECKING",
        "SAVINGS",
        "INVESTMENT",
        "OTHER",
        "BUSINESS_CHECKING"
      ],
      "x-enum-elements": [
        {
          "name": "CHECKING",
          "description": "An account at a financial institution against which checks can be\ndrawn by the account depositor."
        },
        {
          "name": "SAVINGS",
          "description": "An account at a financial institution that pays interest but cannot be\nused directly as money in the narrow sense of a medium of exchange."
        },
        {
          "name": "INVESTMENT",
          "description": "An account at a financial institution that contains a deposit of funds\nand/or securities."
        },
        {
          "name": "OTHER",
          "description": "An account at a financial institution which cannot be described by the\nother types."
        },
        {
          "name": "BUSINESS_CHECKING",
          "description": "An account at a financial institution against which checks can be\ndrawn specifically for business purposes (non-personal use)."
        }
      ],
      "description": "Indicates the financial purpose of the bank account.",
      "x-release-status": "PUBLIC"
    },
    "CardBrand": {
      "type": "string",
      "enum": [
        "OTHER_BRAND",
        "VISA",
        "MASTERCARD",
        "AMERICAN_EXPRESS",
        "DISCOVER",
        "DISCOVER_DINERS",
        "JCB",
        "CHINA_UNIONPAY",
        "SQUARE_GIFT_CARD",
        "SQUARE_CAPITAL_CARD",
        "INTERAC",
        "EFTPOS",
        "FELICA"
      ],
      "x-enum-elements": [
        {
          "name": "OTHER_BRAND",
          "description": ""
        },
        {
          "name": "VISA",
          "description": ""
        },
        {
          "name": "MASTERCARD",
          "description": ""
        },
        {
          "name": "AMERICAN_EXPRESS",
          "description": ""
        },
        {
          "name": "DISCOVER",
          "description": ""
        },
        {
          "name": "DISCOVER_DINERS",
          "description": ""
        },
        {
          "name": "JCB",
          "description": ""
        },
        {
          "name": "CHINA_UNIONPAY",
          "description": ""
        },
        {
          "name": "SQUARE_GIFT_CARD",
          "description": ""
        },
        {
          "name": "SQUARE_CAPITAL_CARD",
          "description": ""
        },
        {
          "name": "INTERAC",
          "description": ""
        },
        {
          "name": "EFTPOS",
          "description": ""
        },
        {
          "name": "FELICA",
          "description": ""
        }
      ],
      "description": "Indicates a card\u0027s brand, such as `VISA` or `MASTERCARD`.",
      "x-release-status": "PUBLIC"
    },
    "CardPrepaidType": {
      "type": "string",
      "enum": [
        "UNKNOWN_PREPAID_TYPE",
        "NOT_PREPAID",
        "PREPAID"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN_PREPAID_TYPE",
          "description": ""
        },
        {
          "name": "NOT_PREPAID",
          "description": ""
        },
        {
          "name": "PREPAID",
          "description": ""
        }
      ],
      "description": "Indicates a card\u0027s prepaid type, such as `NOT_PREPAID` or `PREPAID`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CardType": {
      "type": "string",
      "enum": [
        "UNKNOWN_CARD_TYPE",
        "CREDIT",
        "DEBIT"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN_CARD_TYPE",
          "description": ""
        },
        {
          "name": "CREDIT",
          "description": ""
        },
        {
          "name": "DEBIT",
          "description": ""
        }
      ],
      "description": "Indicates a card\u0027s type, such as `CREDIT` or `DEBIT`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CashDrawerEventType": {
      "type": "string",
      "enum": [
        "NO_SALE",
        "CASH_TENDER_PAYMENT",
        "OTHER_TENDER_PAYMENT",
        "CASH_TENDER_CANCELLED_PAYMENT",
        "OTHER_TENDER_CANCELLED_PAYMENT",
        "CASH_TENDER_REFUND",
        "OTHER_TENDER_REFUND",
        "PAID_IN",
        "PAID_OUT"
      ],
      "x-enum-elements": [
        {
          "name": "NO_SALE",
          "description": "Triggered when a no sale occurs on a cash drawer.\nA CashDrawerEvent of this type must have a zero money amount."
        },
        {
          "name": "CASH_TENDER_PAYMENT",
          "description": "Triggered when a cash tender payment occurs on a cash drawer.\nA CashDrawerEvent of this type can must not have a negative amount."
        },
        {
          "name": "OTHER_TENDER_PAYMENT",
          "description": "Triggered when a check, gift card, or other non-cash payment occurs\non a cash drawer.\nA CashDrawerEvent of this type must have a zero money amount."
        },
        {
          "name": "CASH_TENDER_CANCELLED_PAYMENT",
          "description": "Triggered when a split tender bill is cancelled after cash has been\ntendered.\nA CASH_TENDER_CANCELLED_PAYMENT should have a corresponding CASH_TENDER_PAYMENT.\nA CashDrawerEvent of this type must not have a negative amount."
        },
        {
          "name": "OTHER_TENDER_CANCELLED_PAYMENT",
          "description": "Triggered when a split tender bill is cancelled after a non-cash tender\nhas been tendered. An OTHER_TENDER_CANCELLED_PAYMENT should have a corresponding\nOTHER_TENDER_PAYMENT. A CashDrawerEvent of this type must have a zero money\namount."
        },
        {
          "name": "CASH_TENDER_REFUND",
          "description": "Triggered when a cash tender refund occurs.\nA CashDrawerEvent of this type must not have a negative amount."
        },
        {
          "name": "OTHER_TENDER_REFUND",
          "description": "Triggered when an other tender refund occurs.\nA CashDrawerEvent of this type must have a zero money amount."
        },
        {
          "name": "PAID_IN",
          "description": "Triggered when money unrelated to a payment is added to the cash drawer.\nFor example, an employee adds coins to the drawer.\nA CashDrawerEvent of this type must not have a negative amount."
        },
        {
          "name": "PAID_OUT",
          "description": "Triggered when money is removed from the drawer for other reasons\nthan making change.\nFor example, an employee pays a delivery person with cash from the cash drawer.\nA CashDrawerEvent of this type must not have a negative amount."
        }
      ],
      "description": "The types of events on a CashDrawerShift.\nEach event type represents an employee action on the actual cash drawer\nrepresented by a CashDrawerShift.",
      "x-release-status": "PUBLIC"
    },
    "CashDrawerShiftState": {
      "type": "string",
      "enum": [
        "OPEN",
        "ENDED",
        "CLOSED"
      ],
      "x-enum-elements": [
        {
          "name": "OPEN",
          "description": "An open cash drawer shift."
        },
        {
          "name": "ENDED",
          "description": "A cash drawer shift that is ended but has not yet had an employee content audit."
        },
        {
          "name": "CLOSED",
          "description": "An ended cash drawer shift that is closed with a completed employee\ncontent audit and recorded result."
        }
      ],
      "description": "The current state of a cash drawer shift.",
      "x-release-status": "PUBLIC"
    },
    "CatalogCustomAttributeDefinitionAppVisibility": {
      "type": "string",
      "enum": [
        "APP_VISIBILITY_HIDDEN",
        "APP_VISIBILITY_READ_ONLY",
        "APP_VISIBILITY_READ_WRITE_VALUES"
      ],
      "x-enum-elements": [
        {
          "name": "APP_VISIBILITY_HIDDEN",
          "description": "Other applications cannot read this custom attribute."
        },
        {
          "name": "APP_VISIBILITY_READ_ONLY",
          "description": "Other applications can read this custom attribute definition and\nvalues."
        },
        {
          "name": "APP_VISIBILITY_READ_WRITE_VALUES",
          "description": "Other applications can read and write custom attribute values on objects.\nThey can read but cannot edit the custom attribute definition."
        }
      ],
      "description": "Defines the visibility of a custom attribute to applications other than their\ncreating application.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogCustomAttributeDefinitionSellerVisibility": {
      "type": "string",
      "enum": [
        "SELLER_VISIBILITY_HIDDEN",
        "SELLER_VISIBILITY_READ_WRITE_VALUES"
      ],
      "x-enum-elements": [
        {
          "name": "SELLER_VISIBILITY_HIDDEN",
          "description": "Sellers cannot read this custom attribute in Square client\napplications or Square APIs."
        },
        {
          "name": "SELLER_VISIBILITY_READ_WRITE_VALUES",
          "description": "Sellers can read and write this custom attribute value in catalog objects,\nbut cannot edit the custom attribute definition."
        }
      ],
      "description": "Defines the visibility of a custom attribute to sellers in Square\nclient applications, Square APIs or in Square UIs (including Square Point\nof Sale applications and Square Dashboard).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogCustomAttributeDefinitionType": {
      "type": "string",
      "enum": [
        "STRING",
        "BOOLEAN",
        "NUMBER",
        "SELECTION"
      ],
      "x-enum-elements": [
        {
          "name": "STRING",
          "description": "A free-form string containing up to 255 characters."
        },
        {
          "name": "BOOLEAN",
          "description": "A `true` or `false` value."
        },
        {
          "name": "NUMBER",
          "description": "A decimal string representation of a number. Can support up to 5 digits after the decimal point."
        },
        {
          "name": "SELECTION",
          "description": "One or more choices from `allowed_selections`."
        }
      ],
      "description": "Defines the possible types for a custom attribute.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogDiscountModifyTaxBasis": {
      "type": "string",
      "enum": [
        "MODIFY_TAX_BASIS",
        "DO_NOT_MODIFY_TAX_BASIS"
      ],
      "x-enum-elements": [
        {
          "name": "MODIFY_TAX_BASIS",
          "description": "Application of the discount will modify the tax basis."
        },
        {
          "name": "DO_NOT_MODIFY_TAX_BASIS",
          "description": "Application of the discount will not modify the tax basis."
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogDiscountType": {
      "type": "string",
      "enum": [
        "FIXED_PERCENTAGE",
        "FIXED_AMOUNT",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "x-enum-elements": [
        {
          "name": "FIXED_PERCENTAGE",
          "description": "Apply the discount as a fixed percentage (e.g., 5%) off the item price."
        },
        {
          "name": "FIXED_AMOUNT",
          "description": "Apply the discount as a fixed amount (e.g., $1.00) off the item price."
        },
        {
          "name": "VARIABLE_PERCENTAGE",
          "description": "Apply the discount as a variable percentage off the item price. The percentage will be specified at the time of sale."
        },
        {
          "name": "VARIABLE_AMOUNT",
          "description": "Apply the discount as a variable amount off the item price. The amount will be specified at the time of sale."
        }
      ],
      "description": "How to apply a CatalogDiscount to a CatalogItem.",
      "x-release-status": "PUBLIC"
    },
    "CatalogItemProductType": {
      "type": "string",
      "enum": [
        "REGULAR",
        "GIFT_CARD",
        "APPOINTMENTS_SERVICE"
      ],
      "x-enum-elements": [
        {
          "name": "REGULAR",
          "description": "An ordinary item."
        },
        {
          "name": "GIFT_CARD",
          "description": "A Square gift card."
        },
        {
          "name": "APPOINTMENTS_SERVICE",
          "description": "A service that can be booked using the Square Appointments app."
        }
      ],
      "description": "The type of a CatalogItem. Connect V2 only allows the creation of `REGULAR` or `APPOINTMENTS_SERVICE` items.",
      "x-release-status": "PUBLIC"
    },
    "CatalogModifierListSelectionType": {
      "type": "string",
      "enum": [
        "SINGLE",
        "MULTIPLE"
      ],
      "x-enum-elements": [
        {
          "name": "SINGLE",
          "description": "Indicates that a CatalogModifierList allows only a\nsingle CatalogModifier to be selected."
        },
        {
          "name": "MULTIPLE",
          "description": "Indicates that a CatalogModifierList allows multiple\nCatalogModifier to be selected."
        }
      ],
      "description": "Indicates whether a CatalogModifierList supports multiple selections.",
      "x-release-status": "PUBLIC"
    },
    "CatalogObjectType": {
      "type": "string",
      "enum": [
        "ITEM",
        "IMAGE",
        "CATEGORY",
        "ITEM_VARIATION",
        "TAX",
        "DISCOUNT",
        "MODIFIER_LIST",
        "MODIFIER",
        "PRICING_RULE",
        "PRODUCT_SET",
        "TIME_PERIOD",
        "MEASUREMENT_UNIT",
        "SUBSCRIPTION_PLAN",
        "ITEM_OPTION",
        "ITEM_OPTION_VAL",
        "CUSTOM_ATTRIBUTE_DEFINITION",
        "QUICK_AMOUNTS_SETTINGS"
      ],
      "x-enum-elements": [
        {
          "name": "ITEM",
          "description": "An item, corresponding to `CatalogItem`. The item-specific data\nwill be stored in the `item_data` field."
        },
        {
          "name": "IMAGE",
          "description": "An image, corresponding to `CatalogImage`. The image-specific data\nwill be stored in the `image_data` field."
        },
        {
          "name": "CATEGORY",
          "description": "A category, corresponding to `CatalogCategory`. The category-specific data\nwill be stored in the `category_data` field."
        },
        {
          "name": "ITEM_VARIATION",
          "description": "An item variation, corresponding to `CatalogItemVariation`. The\nitem variation-specific data will be stored in the `item_variation_data` field."
        },
        {
          "name": "TAX",
          "description": "A tax, corresponding to `CatalogTax`. The tax-specific data\nwill be stored in the `tax_data` field."
        },
        {
          "name": "DISCOUNT",
          "description": "A discount, corresponding to `CatalogDiscount`. The discount-specific data\nwill be stored in the `discount_data` field."
        },
        {
          "name": "MODIFIER_LIST",
          "description": "A modifier list, corresponding to `CatalogModifierList`.\nThe modifier list-specific data will be stored in the `modifier_list_data` field."
        },
        {
          "name": "MODIFIER",
          "description": "A modifier, corresponding to `CatalogModifier`. The modifier-specific data\nwill be stored in the `modifier_data` field."
        },
        {
          "name": "PRICING_RULE",
          "description": "A pricing rule, corresponding to `CatalogPricingRule`. The pricing-rule-specific data\nwill be stored in the `pricing_rule_data` field."
        },
        {
          "name": "PRODUCT_SET",
          "description": "A product set, corresponding to `CatalogProductSet`.\nThe product-set-specific data will be stored in the `product_set_data` field."
        },
        {
          "name": "TIME_PERIOD",
          "description": "A time period, corresponding to `CatalogTimePeriod`.\nThe time-period-specific data will be stored in the `time_period_data` field."
        },
        {
          "name": "MEASUREMENT_UNIT",
          "description": "A measurement unit, corresponding to `CatalogMeasurementUnit`. The unit of\nmeasure and precision in which an item variation should be sold."
        },
        {
          "name": "SUBSCRIPTION_PLAN",
          "description": "A subscription plan, corresponding to \n`CatalogSubscriptionPlan`.\n\nThe subscription plan data is stored in the `subscription_plan_data` field of the \n`CatalogObject`."
        },
        {
          "name": "ITEM_OPTION",
          "description": "Represents a list of item option values that can be assigned to item\nvariations. For example, a color option or size option for a t-shirt."
        },
        {
          "name": "ITEM_OPTION_VAL",
          "description": "Represents an option value associated with one or more item options.\nFor example, an item option of \"Size\" may have item option values such as\n“Small\" or \"Medium\"."
        },
        {
          "name": "CUSTOM_ATTRIBUTE_DEFINITION",
          "description": "Represents the definition of a custom attribute"
        },
        {
          "name": "QUICK_AMOUNTS_SETTINGS",
          "description": "Represents a set of Quick Amounts and their settings at each location.\nFor example, a location may have a list of both AUTO and MANUAL quick amounts that are set to DISABLED."
        }
      ],
      "description": "Possible types of CatalogObjects returned from the Catalog, each\ncontaining type-specific properties in the `*_data` field corresponding to the object type.",
      "x-release-status": "PUBLIC"
    },
    "CatalogPricingType": {
      "type": "string",
      "enum": [
        "FIXED_PRICING",
        "VARIABLE_PRICING"
      ],
      "x-enum-elements": [
        {
          "name": "FIXED_PRICING",
          "description": "The catalog item variation\u0027s price is fixed."
        },
        {
          "name": "VARIABLE_PRICING",
          "description": "The catalog item variation\u0027s price is entered at the time of sale."
        }
      ],
      "description": "Indicates whether the price of a CatalogItemVariation should be entered manually at the time of sale.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQuickAmountType": {
      "type": "string",
      "enum": [
        "QUICK_AMOUNT_TYPE_MANUAL",
        "QUICK_AMOUNT_TYPE_AUTO"
      ],
      "x-enum-elements": [
        {
          "name": "QUICK_AMOUNT_TYPE_MANUAL",
          "description": "Quick Amount is created manually by the seller."
        },
        {
          "name": "QUICK_AMOUNT_TYPE_AUTO",
          "description": "Quick Amount is generated automatically by machine learning algorithms."
        }
      ],
      "description": "Determines the type of a specific Quick Amount.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogQuickAmountsSettingsOption": {
      "type": "string",
      "enum": [
        "DISABLED",
        "MANUAL",
        "AUTO"
      ],
      "x-enum-elements": [
        {
          "name": "DISABLED",
          "description": "Option for seller to disable Quick Amounts."
        },
        {
          "name": "MANUAL",
          "description": "Option for seller to choose manually created Quick Amounts."
        },
        {
          "name": "AUTO",
          "description": "Option for seller to choose automatically created Quick Amounts."
        }
      ],
      "description": "Determines a seller\u0027s option on Quick Amounts feature.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "Country": {
      "type": "string",
      "enum": [
        "ZZ",
        "AD",
        "AE",
        "AF",
        "AG",
        "AI",
        "AL",
        "AM",
        "AO",
        "AQ",
        "AR",
        "AS",
        "AT",
        "AU",
        "AW",
        "AX",
        "AZ",
        "BA",
        "BB",
        "BD",
        "BE",
        "BF",
        "BG",
        "BH",
        "BI",
        "BJ",
        "BL",
        "BM",
        "BN",
        "BO",
        "BQ",
        "BR",
        "BS",
        "BT",
        "BV",
        "BW",
        "BY",
        "BZ",
        "CA",
        "CC",
        "CD",
        "CF",
        "CG",
        "CH",
        "CI",
        "CK",
        "CL",
        "CM",
        "CN",
        "CO",
        "CR",
        "CU",
        "CV",
        "CW",
        "CX",
        "CY",
        "CZ",
        "DE",
        "DJ",
        "DK",
        "DM",
        "DO",
        "DZ",
        "EC",
        "EE",
        "EG",
        "EH",
        "ER",
        "ES",
        "ET",
        "FI",
        "FJ",
        "FK",
        "FM",
        "FO",
        "FR",
        "GA",
        "GB",
        "GD",
        "GE",
        "GF",
        "GG",
        "GH",
        "GI",
        "GL",
        "GM",
        "GN",
        "GP",
        "GQ",
        "GR",
        "GS",
        "GT",
        "GU",
        "GW",
        "GY",
        "HK",
        "HM",
        "HN",
        "HR",
        "HT",
        "HU",
        "ID",
        "IE",
        "IL",
        "IM",
        "IN",
        "IO",
        "IQ",
        "IR",
        "IS",
        "IT",
        "JE",
        "JM",
        "JO",
        "JP",
        "KE",
        "KG",
        "KH",
        "KI",
        "KM",
        "KN",
        "KP",
        "KR",
        "KW",
        "KY",
        "KZ",
        "LA",
        "LB",
        "LC",
        "LI",
        "LK",
        "LR",
        "LS",
        "LT",
        "LU",
        "LV",
        "LY",
        "MA",
        "MC",
        "MD",
        "ME",
        "MF",
        "MG",
        "MH",
        "MK",
        "ML",
        "MM",
        "MN",
        "MO",
        "MP",
        "MQ",
        "MR",
        "MS",
        "MT",
        "MU",
        "MV",
        "MW",
        "MX",
        "MY",
        "MZ",
        "NA",
        "NC",
        "NE",
        "NF",
        "NG",
        "NI",
        "NL",
        "NO",
        "NP",
        "NR",
        "NU",
        "NZ",
        "OM",
        "PA",
        "PE",
        "PF",
        "PG",
        "PH",
        "PK",
        "PL",
        "PM",
        "PN",
        "PR",
        "PS",
        "PT",
        "PW",
        "PY",
        "QA",
        "RE",
        "RO",
        "RS",
        "RU",
        "RW",
        "SA",
        "SB",
        "SC",
        "SD",
        "SE",
        "SG",
        "SH",
        "SI",
        "SJ",
        "SK",
        "SL",
        "SM",
        "SN",
        "SO",
        "SR",
        "SS",
        "ST",
        "SV",
        "SX",
        "SY",
        "SZ",
        "TC",
        "TD",
        "TF",
        "TG",
        "TH",
        "TJ",
        "TK",
        "TL",
        "TM",
        "TN",
        "TO",
        "TR",
        "TT",
        "TV",
        "TW",
        "TZ",
        "UA",
        "UG",
        "UM",
        "US",
        "UY",
        "UZ",
        "VA",
        "VC",
        "VE",
        "VG",
        "VI",
        "VN",
        "VU",
        "WF",
        "WS",
        "YE",
        "YT",
        "ZA",
        "ZM",
        "ZW"
      ],
      "x-enum-elements": [
        {
          "name": "ZZ",
          "description": "Unknown"
        },
        {
          "name": "AD",
          "description": "Andorra"
        },
        {
          "name": "AE",
          "description": "United Arab Emirates"
        },
        {
          "name": "AF",
          "description": "Afghanistan"
        },
        {
          "name": "AG",
          "description": "Antigua and Barbuda"
        },
        {
          "name": "AI",
          "description": "Anguilla"
        },
        {
          "name": "AL",
          "description": "Albania"
        },
        {
          "name": "AM",
          "description": "Armenia"
        },
        {
          "name": "AO",
          "description": "Angola"
        },
        {
          "name": "AQ",
          "description": "Antartica"
        },
        {
          "name": "AR",
          "description": "Argentina"
        },
        {
          "name": "AS",
          "description": "American Samoa"
        },
        {
          "name": "AT",
          "description": "Austria"
        },
        {
          "name": "AU",
          "description": "Australia"
        },
        {
          "name": "AW",
          "description": "Aruba"
        },
        {
          "name": "AX",
          "description": "Åland Islands"
        },
        {
          "name": "AZ",
          "description": "Azerbaijan"
        },
        {
          "name": "BA",
          "description": "Bosnia and Herzegovina"
        },
        {
          "name": "BB",
          "description": "Barbados"
        },
        {
          "name": "BD",
          "description": "Bangladesh"
        },
        {
          "name": "BE",
          "description": "Belgium"
        },
        {
          "name": "BF",
          "description": "Burkina Faso"
        },
        {
          "name": "BG",
          "description": "Bulgaria"
        },
        {
          "name": "BH",
          "description": "Bahrain"
        },
        {
          "name": "BI",
          "description": "Burundi"
        },
        {
          "name": "BJ",
          "description": "Benin"
        },
        {
          "name": "BL",
          "description": "Saint Barthélemy"
        },
        {
          "name": "BM",
          "description": "Bermuda"
        },
        {
          "name": "BN",
          "description": "Brunei"
        },
        {
          "name": "BO",
          "description": "Bolivia"
        },
        {
          "name": "BQ",
          "description": "Bonaire"
        },
        {
          "name": "BR",
          "description": "Brazil"
        },
        {
          "name": "BS",
          "description": "Bahamas"
        },
        {
          "name": "BT",
          "description": "Bhutan"
        },
        {
          "name": "BV",
          "description": "Bouvet Island"
        },
        {
          "name": "BW",
          "description": "Botswana"
        },
        {
          "name": "BY",
          "description": "Belarus"
        },
        {
          "name": "BZ",
          "description": "Belize"
        },
        {
          "name": "CA",
          "description": "Canada"
        },
        {
          "name": "CC",
          "description": "Cocos Islands"
        },
        {
          "name": "CD",
          "description": "Democratic Republic of the Congo"
        },
        {
          "name": "CF",
          "description": "Central African Republic"
        },
        {
          "name": "CG",
          "description": "Congo"
        },
        {
          "name": "CH",
          "description": "Switzerland"
        },
        {
          "name": "CI",
          "description": "Ivory Coast"
        },
        {
          "name": "CK",
          "description": "Cook Islands"
        },
        {
          "name": "CL",
          "description": "Chile"
        },
        {
          "name": "CM",
          "description": "Cameroon"
        },
        {
          "name": "CN",
          "description": "China"
        },
        {
          "name": "CO",
          "description": "Colombia"
        },
        {
          "name": "CR",
          "description": "Costa Rica"
        },
        {
          "name": "CU",
          "description": "Cuba"
        },
        {
          "name": "CV",
          "description": "Cabo Verde"
        },
        {
          "name": "CW",
          "description": "Curaçao"
        },
        {
          "name": "CX",
          "description": "Christmas Island"
        },
        {
          "name": "CY",
          "description": "Cyprus"
        },
        {
          "name": "CZ",
          "description": "Czechia"
        },
        {
          "name": "DE",
          "description": "Germany"
        },
        {
          "name": "DJ",
          "description": "Djibouti"
        },
        {
          "name": "DK",
          "description": "Denmark"
        },
        {
          "name": "DM",
          "description": "Dominica"
        },
        {
          "name": "DO",
          "description": "Dominican Republic"
        },
        {
          "name": "DZ",
          "description": "Algeria"
        },
        {
          "name": "EC",
          "description": "Ecuador"
        },
        {
          "name": "EE",
          "description": "Estonia"
        },
        {
          "name": "EG",
          "description": "Egypt"
        },
        {
          "name": "EH",
          "description": "Western Sahara"
        },
        {
          "name": "ER",
          "description": "Eritrea"
        },
        {
          "name": "ES",
          "description": "Spain"
        },
        {
          "name": "ET",
          "description": "Ethiopia"
        },
        {
          "name": "FI",
          "description": "Finland"
        },
        {
          "name": "FJ",
          "description": "Fiji"
        },
        {
          "name": "FK",
          "description": "Falkland Islands"
        },
        {
          "name": "FM",
          "description": "Federated States of Micronesia"
        },
        {
          "name": "FO",
          "description": "Faroe Islands"
        },
        {
          "name": "FR",
          "description": "France"
        },
        {
          "name": "GA",
          "description": "Gabon"
        },
        {
          "name": "GB",
          "description": "United Kingdom"
        },
        {
          "name": "GD",
          "description": "Grenada"
        },
        {
          "name": "GE",
          "description": "Georgia"
        },
        {
          "name": "GF",
          "description": "French Guiana"
        },
        {
          "name": "GG",
          "description": "Guernsey"
        },
        {
          "name": "GH",
          "description": "Ghana"
        },
        {
          "name": "GI",
          "description": "Gibraltar"
        },
        {
          "name": "GL",
          "description": "Greenland"
        },
        {
          "name": "GM",
          "description": "Gambia"
        },
        {
          "name": "GN",
          "description": "Guinea"
        },
        {
          "name": "GP",
          "description": "Guadeloupe"
        },
        {
          "name": "GQ",
          "description": "Equatorial Guinea"
        },
        {
          "name": "GR",
          "description": "Greece"
        },
        {
          "name": "GS",
          "description": "South Georgia and the South Sandwich Islands"
        },
        {
          "name": "GT",
          "description": "Guatemala"
        },
        {
          "name": "GU",
          "description": "Guam"
        },
        {
          "name": "GW",
          "description": "Guinea-Bissau"
        },
        {
          "name": "GY",
          "description": "Guyana"
        },
        {
          "name": "HK",
          "description": "Hong Kong"
        },
        {
          "name": "HM",
          "description": "Heard Island and McDonald Islands"
        },
        {
          "name": "HN",
          "description": "Honduras"
        },
        {
          "name": "HR",
          "description": "Croatia"
        },
        {
          "name": "HT",
          "description": "Haiti"
        },
        {
          "name": "HU",
          "description": "Hungary"
        },
        {
          "name": "ID",
          "description": "Indonesia"
        },
        {
          "name": "IE",
          "description": "Ireland"
        },
        {
          "name": "IL",
          "description": "Israel"
        },
        {
          "name": "IM",
          "description": "Isle of Man"
        },
        {
          "name": "IN",
          "description": "India"
        },
        {
          "name": "IO",
          "description": "British Indian Ocean Territory"
        },
        {
          "name": "IQ",
          "description": "Iraq"
        },
        {
          "name": "IR",
          "description": "Iran"
        },
        {
          "name": "IS",
          "description": "Iceland"
        },
        {
          "name": "IT",
          "description": "Italy"
        },
        {
          "name": "JE",
          "description": "Jersey"
        },
        {
          "name": "JM",
          "description": "Jamaica"
        },
        {
          "name": "JO",
          "description": "Jordan"
        },
        {
          "name": "JP",
          "description": "Japan"
        },
        {
          "name": "KE",
          "description": "Kenya"
        },
        {
          "name": "KG",
          "description": "Kyrgyzstan"
        },
        {
          "name": "KH",
          "description": "Cambodia"
        },
        {
          "name": "KI",
          "description": "Kiribati"
        },
        {
          "name": "KM",
          "description": "Comoros"
        },
        {
          "name": "KN",
          "description": "Saint Kitts and Nevis"
        },
        {
          "name": "KP",
          "description": "Democratic People\u0027s Republic of Korea"
        },
        {
          "name": "KR",
          "description": "Republic of Korea"
        },
        {
          "name": "KW",
          "description": "Kuwait"
        },
        {
          "name": "KY",
          "description": "Cayman Islands"
        },
        {
          "name": "KZ",
          "description": "Kazakhstan"
        },
        {
          "name": "LA",
          "description": "Lao People\u0027s Democratic Republic"
        },
        {
          "name": "LB",
          "description": "Lebanon"
        },
        {
          "name": "LC",
          "description": "Saint Lucia"
        },
        {
          "name": "LI",
          "description": "Liechtenstein"
        },
        {
          "name": "LK",
          "description": "Sri Lanka"
        },
        {
          "name": "LR",
          "description": "Liberia"
        },
        {
          "name": "LS",
          "description": "Lesotho"
        },
        {
          "name": "LT",
          "description": "Lithuania"
        },
        {
          "name": "LU",
          "description": "Luxembourg"
        },
        {
          "name": "LV",
          "description": "Latvia"
        },
        {
          "name": "LY",
          "description": "Libya"
        },
        {
          "name": "MA",
          "description": "Morocco"
        },
        {
          "name": "MC",
          "description": "Monaco"
        },
        {
          "name": "MD",
          "description": "Moldova"
        },
        {
          "name": "ME",
          "description": "Montenegro"
        },
        {
          "name": "MF",
          "description": "Saint Martin"
        },
        {
          "name": "MG",
          "description": "Madagascar"
        },
        {
          "name": "MH",
          "description": "Marshall Islands"
        },
        {
          "name": "MK",
          "description": "North Macedonia"
        },
        {
          "name": "ML",
          "description": "Mali"
        },
        {
          "name": "MM",
          "description": "Myanmar"
        },
        {
          "name": "MN",
          "description": "Mongolia"
        },
        {
          "name": "MO",
          "description": "Macao"
        },
        {
          "name": "MP",
          "description": "Northern Mariana Islands"
        },
        {
          "name": "MQ",
          "description": "Martinique"
        },
        {
          "name": "MR",
          "description": "Mauritania"
        },
        {
          "name": "MS",
          "description": "Montserrat"
        },
        {
          "name": "MT",
          "description": "Malta"
        },
        {
          "name": "MU",
          "description": "Mauritius"
        },
        {
          "name": "MV",
          "description": "Maldives"
        },
        {
          "name": "MW",
          "description": "Malawi"
        },
        {
          "name": "MX",
          "description": "Mexico"
        },
        {
          "name": "MY",
          "description": "Malaysia"
        },
        {
          "name": "MZ",
          "description": "Mozambique"
        },
        {
          "name": "NA",
          "description": "Namibia"
        },
        {
          "name": "NC",
          "description": "New Caledonia"
        },
        {
          "name": "NE",
          "description": "Niger"
        },
        {
          "name": "NF",
          "description": "Norfolk Island"
        },
        {
          "name": "NG",
          "description": "Nigeria"
        },
        {
          "name": "NI",
          "description": "Nicaragua"
        },
        {
          "name": "NL",
          "description": "Netherlands"
        },
        {
          "name": "NO",
          "description": "Norway"
        },
        {
          "name": "NP",
          "description": "Nepal"
        },
        {
          "name": "NR",
          "description": "Nauru"
        },
        {
          "name": "NU",
          "description": "Niue"
        },
        {
          "name": "NZ",
          "description": "New Zealand"
        },
        {
          "name": "OM",
          "description": "Oman"
        },
        {
          "name": "PA",
          "description": "Panama"
        },
        {
          "name": "PE",
          "description": "Peru"
        },
        {
          "name": "PF",
          "description": "French Polynesia"
        },
        {
          "name": "PG",
          "description": "Papua New Guinea"
        },
        {
          "name": "PH",
          "description": "Philippines"
        },
        {
          "name": "PK",
          "description": "Pakistan"
        },
        {
          "name": "PL",
          "description": "Poland"
        },
        {
          "name": "PM",
          "description": "Saint Pierre and Miquelon"
        },
        {
          "name": "PN",
          "description": "Pitcairn"
        },
        {
          "name": "PR",
          "description": "Puerto Rico"
        },
        {
          "name": "PS",
          "description": "Palestine"
        },
        {
          "name": "PT",
          "description": "Portugal"
        },
        {
          "name": "PW",
          "description": "Palau"
        },
        {
          "name": "PY",
          "description": "Paraguay"
        },
        {
          "name": "QA",
          "description": "Qatar"
        },
        {
          "name": "RE",
          "description": "Réunion"
        },
        {
          "name": "RO",
          "description": "Romania"
        },
        {
          "name": "RS",
          "description": "Serbia"
        },
        {
          "name": "RU",
          "description": "Russia"
        },
        {
          "name": "RW",
          "description": "Rwanda"
        },
        {
          "name": "SA",
          "description": "Saudi Arabia"
        },
        {
          "name": "SB",
          "description": "Solomon Islands"
        },
        {
          "name": "SC",
          "description": "Seychelles"
        },
        {
          "name": "SD",
          "description": "Sudan"
        },
        {
          "name": "SE",
          "description": "Sweden"
        },
        {
          "name": "SG",
          "description": "Singapore"
        },
        {
          "name": "SH",
          "description": "Saint Helena, Ascension and Tristan da Cunha"
        },
        {
          "name": "SI",
          "description": "Slovenia"
        },
        {
          "name": "SJ",
          "description": "Svalbard and Jan Mayen"
        },
        {
          "name": "SK",
          "description": "Slovakia"
        },
        {
          "name": "SL",
          "description": "Sierra Leone"
        },
        {
          "name": "SM",
          "description": "San Marino"
        },
        {
          "name": "SN",
          "description": "Senegal"
        },
        {
          "name": "SO",
          "description": "Somalia"
        },
        {
          "name": "SR",
          "description": "Suriname"
        },
        {
          "name": "SS",
          "description": "South Sudan"
        },
        {
          "name": "ST",
          "description": "Sao Tome and Principe"
        },
        {
          "name": "SV",
          "description": "El Salvador"
        },
        {
          "name": "SX",
          "description": "Sint Maarten"
        },
        {
          "name": "SY",
          "description": "Syrian Arab Republic"
        },
        {
          "name": "SZ",
          "description": "Eswatini"
        },
        {
          "name": "TC",
          "description": "Turks and Caicos Islands"
        },
        {
          "name": "TD",
          "description": "Chad"
        },
        {
          "name": "TF",
          "description": "French Southern Territories"
        },
        {
          "name": "TG",
          "description": "Togo"
        },
        {
          "name": "TH",
          "description": "Thailand"
        },
        {
          "name": "TJ",
          "description": "Tajikistan"
        },
        {
          "name": "TK",
          "description": "Tokelau"
        },
        {
          "name": "TL",
          "description": "Timor-Leste"
        },
        {
          "name": "TM",
          "description": "Turkmenistan"
        },
        {
          "name": "TN",
          "description": "Tunisia"
        },
        {
          "name": "TO",
          "description": "Tonga"
        },
        {
          "name": "TR",
          "description": "Turkey"
        },
        {
          "name": "TT",
          "description": "Trinidad and Tobago"
        },
        {
          "name": "TV",
          "description": "Tuvalu"
        },
        {
          "name": "TW",
          "description": "Taiwan"
        },
        {
          "name": "TZ",
          "description": "Tanzania"
        },
        {
          "name": "UA",
          "description": "Ukraine"
        },
        {
          "name": "UG",
          "description": "Uganda"
        },
        {
          "name": "UM",
          "description": "United States Minor Outlying Islands"
        },
        {
          "name": "US",
          "description": "United States of America"
        },
        {
          "name": "UY",
          "description": "Uruguay"
        },
        {
          "name": "UZ",
          "description": "Uzbekistan"
        },
        {
          "name": "VA",
          "description": "Vatican City"
        },
        {
          "name": "VC",
          "description": "Saint Vincent and the Grenadines"
        },
        {
          "name": "VE",
          "description": "Venezuela"
        },
        {
          "name": "VG",
          "description": "British Virgin Islands"
        },
        {
          "name": "VI",
          "description": "U.S. Virgin Islands"
        },
        {
          "name": "VN",
          "description": "Vietnam"
        },
        {
          "name": "VU",
          "description": "Vanuatu"
        },
        {
          "name": "WF",
          "description": "Wallis and Futuna"
        },
        {
          "name": "WS",
          "description": "Samoa"
        },
        {
          "name": "YE",
          "description": "Yemen"
        },
        {
          "name": "YT",
          "description": "Mayotte"
        },
        {
          "name": "ZA",
          "description": "South Africa"
        },
        {
          "name": "ZM",
          "description": "Zambia"
        },
        {
          "name": "ZW",
          "description": "Zimbabwe"
        }
      ],
      "description": "Indicates the country associated with another entity, such as a business.\nValues are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).",
      "x-release-status": "PUBLIC"
    },
    "Currency": {
      "type": "string",
      "enum": [
        "UNKNOWN_CURRENCY",
        "AED",
        "AFN",
        "ALL",
        "AMD",
        "ANG",
        "AOA",
        "ARS",
        "AUD",
        "AWG",
        "AZN",
        "BAM",
        "BBD",
        "BDT",
        "BGN",
        "BHD",
        "BIF",
        "BMD",
        "BND",
        "BOB",
        "BOV",
        "BRL",
        "BSD",
        "BTN",
        "BWP",
        "BYR",
        "BZD",
        "CAD",
        "CDF",
        "CHE",
        "CHF",
        "CHW",
        "CLF",
        "CLP",
        "CNY",
        "COP",
        "COU",
        "CRC",
        "CUC",
        "CUP",
        "CVE",
        "CZK",
        "DJF",
        "DKK",
        "DOP",
        "DZD",
        "EGP",
        "ERN",
        "ETB",
        "EUR",
        "FJD",
        "FKP",
        "GBP",
        "GEL",
        "GHS",
        "GIP",
        "GMD",
        "GNF",
        "GTQ",
        "GYD",
        "HKD",
        "HNL",
        "HRK",
        "HTG",
        "HUF",
        "IDR",
        "ILS",
        "INR",
        "IQD",
        "IRR",
        "ISK",
        "JMD",
        "JOD",
        "JPY",
        "KES",
        "KGS",
        "KHR",
        "KMF",
        "KPW",
        "KRW",
        "KWD",
        "KYD",
        "KZT",
        "LAK",
        "LBP",
        "LKR",
        "LRD",
        "LSL",
        "LTL",
        "LVL",
        "LYD",
        "MAD",
        "MDL",
        "MGA",
        "MKD",
        "MMK",
        "MNT",
        "MOP",
        "MRO",
        "MUR",
        "MVR",
        "MWK",
        "MXN",
        "MXV",
        "MYR",
        "MZN",
        "NAD",
        "NGN",
        "NIO",
        "NOK",
        "NPR",
        "NZD",
        "OMR",
        "PAB",
        "PEN",
        "PGK",
        "PHP",
        "PKR",
        "PLN",
        "PYG",
        "QAR",
        "RON",
        "RSD",
        "RUB",
        "RWF",
        "SAR",
        "SBD",
        "SCR",
        "SDG",
        "SEK",
        "SGD",
        "SHP",
        "SLL",
        "SOS",
        "SRD",
        "SSP",
        "STD",
        "SVC",
        "SYP",
        "SZL",
        "THB",
        "TJS",
        "TMT",
        "TND",
        "TOP",
        "TRY",
        "TTD",
        "TWD",
        "TZS",
        "UAH",
        "UGX",
        "USD",
        "USN",
        "USS",
        "UYI",
        "UYU",
        "UZS",
        "VEF",
        "VND",
        "VUV",
        "WST",
        "XAF",
        "XAG",
        "XAU",
        "XBA",
        "XBB",
        "XBC",
        "XBD",
        "XCD",
        "XDR",
        "XOF",
        "XPD",
        "XPF",
        "XPT",
        "XTS",
        "XXX",
        "YER",
        "ZAR",
        "ZMK",
        "ZMW",
        "BTC"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN_CURRENCY",
          "description": "Unknown currency"
        },
        {
          "name": "AED",
          "description": "United Arab Emirates dirham"
        },
        {
          "name": "AFN",
          "description": "Afghan afghani"
        },
        {
          "name": "ALL",
          "description": "Albanian lek"
        },
        {
          "name": "AMD",
          "description": "Armenian dram"
        },
        {
          "name": "ANG",
          "description": "Netherlands Antillean guilder"
        },
        {
          "name": "AOA",
          "description": "Angolan kwanza"
        },
        {
          "name": "ARS",
          "description": "Argentine peso"
        },
        {
          "name": "AUD",
          "description": "Australian dollar"
        },
        {
          "name": "AWG",
          "description": "Aruban florin"
        },
        {
          "name": "AZN",
          "description": "Azerbaijani manat"
        },
        {
          "name": "BAM",
          "description": "Bosnia and Herzegovina convertible mark"
        },
        {
          "name": "BBD",
          "description": "Barbados dollar"
        },
        {
          "name": "BDT",
          "description": "Bangladeshi taka"
        },
        {
          "name": "BGN",
          "description": "Bulgarian lev"
        },
        {
          "name": "BHD",
          "description": "Bahraini dinar"
        },
        {
          "name": "BIF",
          "description": "Burundian franc"
        },
        {
          "name": "BMD",
          "description": "Bermudian dollar"
        },
        {
          "name": "BND",
          "description": "Brunei dollar"
        },
        {
          "name": "BOB",
          "description": "Boliviano"
        },
        {
          "name": "BOV",
          "description": "Bolivian Mvdol"
        },
        {
          "name": "BRL",
          "description": "Brazilian real"
        },
        {
          "name": "BSD",
          "description": "Bahamian dollar"
        },
        {
          "name": "BTN",
          "description": "Bhutanese ngultrum"
        },
        {
          "name": "BWP",
          "description": "Botswana pula"
        },
        {
          "name": "BYR",
          "description": "Belarusian ruble"
        },
        {
          "name": "BZD",
          "description": "Belize dollar"
        },
        {
          "name": "CAD",
          "description": "Canadian dollar"
        },
        {
          "name": "CDF",
          "description": "Congolese franc"
        },
        {
          "name": "CHE",
          "description": "WIR Euro"
        },
        {
          "name": "CHF",
          "description": "Swiss franc"
        },
        {
          "name": "CHW",
          "description": "WIR Franc"
        },
        {
          "name": "CLF",
          "description": "Unidad de Fomento"
        },
        {
          "name": "CLP",
          "description": "Chilean peso"
        },
        {
          "name": "CNY",
          "description": "Chinese yuan"
        },
        {
          "name": "COP",
          "description": "Colombian peso"
        },
        {
          "name": "COU",
          "description": "Unidad de Valor Real"
        },
        {
          "name": "CRC",
          "description": "Costa Rican colon"
        },
        {
          "name": "CUC",
          "description": "Cuban convertible peso"
        },
        {
          "name": "CUP",
          "description": "Cuban peso"
        },
        {
          "name": "CVE",
          "description": "Cape Verdean escudo"
        },
        {
          "name": "CZK",
          "description": "Czech koruna"
        },
        {
          "name": "DJF",
          "description": "Djiboutian franc"
        },
        {
          "name": "DKK",
          "description": "Danish krone"
        },
        {
          "name": "DOP",
          "description": "Dominican peso"
        },
        {
          "name": "DZD",
          "description": "Algerian dinar"
        },
        {
          "name": "EGP",
          "description": "Egyptian pound"
        },
        {
          "name": "ERN",
          "description": "Eritrean nakfa"
        },
        {
          "name": "ETB",
          "description": "Ethiopian birr"
        },
        {
          "name": "EUR",
          "description": "Euro"
        },
        {
          "name": "FJD",
          "description": "Fiji dollar"
        },
        {
          "name": "FKP",
          "description": "Falkland Islands pound"
        },
        {
          "name": "GBP",
          "description": "Pound sterling"
        },
        {
          "name": "GEL",
          "description": "Georgian lari"
        },
        {
          "name": "GHS",
          "description": "Ghanaian cedi"
        },
        {
          "name": "GIP",
          "description": "Gibraltar pound"
        },
        {
          "name": "GMD",
          "description": "Gambian dalasi"
        },
        {
          "name": "GNF",
          "description": "Guinean franc"
        },
        {
          "name": "GTQ",
          "description": "Guatemalan quetzal"
        },
        {
          "name": "GYD",
          "description": "Guyanese dollar"
        },
        {
          "name": "HKD",
          "description": "Hong Kong dollar"
        },
        {
          "name": "HNL",
          "description": "Honduran lempira"
        },
        {
          "name": "HRK",
          "description": "Croatian kuna"
        },
        {
          "name": "HTG",
          "description": "Haitian gourde"
        },
        {
          "name": "HUF",
          "description": "Hungarian forint"
        },
        {
          "name": "IDR",
          "description": "Indonesian rupiah"
        },
        {
          "name": "ILS",
          "description": "Israeli new shekel"
        },
        {
          "name": "INR",
          "description": "Indian rupee"
        },
        {
          "name": "IQD",
          "description": "Iraqi dinar"
        },
        {
          "name": "IRR",
          "description": "Iranian rial"
        },
        {
          "name": "ISK",
          "description": "Icelandic króna"
        },
        {
          "name": "JMD",
          "description": "Jamaican dollar"
        },
        {
          "name": "JOD",
          "description": "Jordanian dinar"
        },
        {
          "name": "JPY",
          "description": "Japanese yen"
        },
        {
          "name": "KES",
          "description": "Kenyan shilling"
        },
        {
          "name": "KGS",
          "description": "Kyrgyzstani som"
        },
        {
          "name": "KHR",
          "description": "Cambodian riel"
        },
        {
          "name": "KMF",
          "description": "Comoro franc"
        },
        {
          "name": "KPW",
          "description": "North Korean won"
        },
        {
          "name": "KRW",
          "description": "South Korean won"
        },
        {
          "name": "KWD",
          "description": "Kuwaiti dinar"
        },
        {
          "name": "KYD",
          "description": "Cayman Islands dollar"
        },
        {
          "name": "KZT",
          "description": "Kazakhstani tenge"
        },
        {
          "name": "LAK",
          "description": "Lao kip"
        },
        {
          "name": "LBP",
          "description": "Lebanese pound"
        },
        {
          "name": "LKR",
          "description": "Sri Lankan rupee"
        },
        {
          "name": "LRD",
          "description": "Liberian dollar"
        },
        {
          "name": "LSL",
          "description": "Lesotho loti"
        },
        {
          "name": "LTL",
          "description": "Lithuanian litas"
        },
        {
          "name": "LVL",
          "description": "Latvian lats"
        },
        {
          "name": "LYD",
          "description": "Libyan dinar"
        },
        {
          "name": "MAD",
          "description": "Moroccan dirham"
        },
        {
          "name": "MDL",
          "description": "Moldovan leu"
        },
        {
          "name": "MGA",
          "description": "Malagasy ariary"
        },
        {
          "name": "MKD",
          "description": "Macedonian denar"
        },
        {
          "name": "MMK",
          "description": "Myanmar kyat"
        },
        {
          "name": "MNT",
          "description": "Mongolian tögrög"
        },
        {
          "name": "MOP",
          "description": "Macanese pataca"
        },
        {
          "name": "MRO",
          "description": "Mauritanian ouguiya"
        },
        {
          "name": "MUR",
          "description": "Mauritian rupee"
        },
        {
          "name": "MVR",
          "description": "Maldivian rufiyaa"
        },
        {
          "name": "MWK",
          "description": "Malawian kwacha"
        },
        {
          "name": "MXN",
          "description": "Mexican peso"
        },
        {
          "name": "MXV",
          "description": "Mexican Unidad de Inversion"
        },
        {
          "name": "MYR",
          "description": "Malaysian ringgit"
        },
        {
          "name": "MZN",
          "description": "Mozambican metical"
        },
        {
          "name": "NAD",
          "description": "Namibian dollar"
        },
        {
          "name": "NGN",
          "description": "Nigerian naira"
        },
        {
          "name": "NIO",
          "description": "Nicaraguan córdoba"
        },
        {
          "name": "NOK",
          "description": "Norwegian krone"
        },
        {
          "name": "NPR",
          "description": "Nepalese rupee"
        },
        {
          "name": "NZD",
          "description": "New Zealand dollar"
        },
        {
          "name": "OMR",
          "description": "Omani rial"
        },
        {
          "name": "PAB",
          "description": "Panamanian balboa"
        },
        {
          "name": "PEN",
          "description": "Peruvian sol"
        },
        {
          "name": "PGK",
          "description": "Papua New Guinean kina"
        },
        {
          "name": "PHP",
          "description": "Philippine peso"
        },
        {
          "name": "PKR",
          "description": "Pakistani rupee"
        },
        {
          "name": "PLN",
          "description": "Polish złoty"
        },
        {
          "name": "PYG",
          "description": "Paraguayan guaraní"
        },
        {
          "name": "QAR",
          "description": "Qatari riyal"
        },
        {
          "name": "RON",
          "description": "Romanian leu"
        },
        {
          "name": "RSD",
          "description": "Serbian dinar"
        },
        {
          "name": "RUB",
          "description": "Russian ruble"
        },
        {
          "name": "RWF",
          "description": "Rwandan franc"
        },
        {
          "name": "SAR",
          "description": "Saudi riyal"
        },
        {
          "name": "SBD",
          "description": "Solomon Islands dollar"
        },
        {
          "name": "SCR",
          "description": "Seychelles rupee"
        },
        {
          "name": "SDG",
          "description": "Sudanese pound"
        },
        {
          "name": "SEK",
          "description": "Swedish krona"
        },
        {
          "name": "SGD",
          "description": "Singapore dollar"
        },
        {
          "name": "SHP",
          "description": "Saint Helena pound"
        },
        {
          "name": "SLL",
          "description": "Sierra Leonean leone"
        },
        {
          "name": "SOS",
          "description": "Somali shilling"
        },
        {
          "name": "SRD",
          "description": "Surinamese dollar"
        },
        {
          "name": "SSP",
          "description": "South Sudanese pound"
        },
        {
          "name": "STD",
          "description": "São Tomé and Príncipe dobra"
        },
        {
          "name": "SVC",
          "description": "Salvadoran colón"
        },
        {
          "name": "SYP",
          "description": "Syrian pound"
        },
        {
          "name": "SZL",
          "description": "Swazi lilangeni"
        },
        {
          "name": "THB",
          "description": "Thai baht"
        },
        {
          "name": "TJS",
          "description": "Tajikstani somoni"
        },
        {
          "name": "TMT",
          "description": "Turkmenistan manat"
        },
        {
          "name": "TND",
          "description": "Tunisian dinar"
        },
        {
          "name": "TOP",
          "description": "Tongan pa\u0027anga"
        },
        {
          "name": "TRY",
          "description": "Turkish lira"
        },
        {
          "name": "TTD",
          "description": "Trinidad and Tobago dollar"
        },
        {
          "name": "TWD",
          "description": "New Taiwan dollar"
        },
        {
          "name": "TZS",
          "description": "Tanzanian shilling"
        },
        {
          "name": "UAH",
          "description": "Ukrainian hryvnia"
        },
        {
          "name": "UGX",
          "description": "Ugandan shilling"
        },
        {
          "name": "USD",
          "description": "United States dollar"
        },
        {
          "name": "USN",
          "description": "United States dollar (next day)"
        },
        {
          "name": "USS",
          "description": "United States dollar (same day)"
        },
        {
          "name": "UYI",
          "description": "Uruguay Peso en Unidedades Indexadas"
        },
        {
          "name": "UYU",
          "description": "Uruguyan peso"
        },
        {
          "name": "UZS",
          "description": "Uzbekistan som"
        },
        {
          "name": "VEF",
          "description": "Venezuelan bolívar soberano"
        },
        {
          "name": "VND",
          "description": "Vietnamese đồng"
        },
        {
          "name": "VUV",
          "description": "Vanuatu vatu"
        },
        {
          "name": "WST",
          "description": "Samoan tala"
        },
        {
          "name": "XAF",
          "description": "CFA franc BEAC"
        },
        {
          "name": "XAG",
          "description": "Silver"
        },
        {
          "name": "XAU",
          "description": "Gold"
        },
        {
          "name": "XBA",
          "description": "European Composite Unit"
        },
        {
          "name": "XBB",
          "description": "European Monetary Unit"
        },
        {
          "name": "XBC",
          "description": "European Unit of Account 9"
        },
        {
          "name": "XBD",
          "description": "European Unit of Account 17"
        },
        {
          "name": "XCD",
          "description": "East Caribbean dollar"
        },
        {
          "name": "XDR",
          "description": "Special drawing rights (International Monetary Fund)"
        },
        {
          "name": "XOF",
          "description": "CFA franc BCEAO"
        },
        {
          "name": "XPD",
          "description": "Palladium"
        },
        {
          "name": "XPF",
          "description": "CFP franc"
        },
        {
          "name": "XPT",
          "description": "Platinum"
        },
        {
          "name": "XTS",
          "description": "Code reserved for testing"
        },
        {
          "name": "XXX",
          "description": "No currency"
        },
        {
          "name": "YER",
          "description": "Yemeni rial"
        },
        {
          "name": "ZAR",
          "description": "South African rand"
        },
        {
          "name": "ZMK",
          "description": "Zambian kwacha"
        },
        {
          "name": "ZMW",
          "description": "Zambian kwacha"
        },
        {
          "name": "BTC",
          "description": "Bitcoin"
        }
      ],
      "description": "Indicates the associated currency for an amount of money. Values correspond\nto [ISO 4217](https://wikipedia.org/wiki/ISO_4217).",
      "x-release-status": "PUBLIC"
    },
    "CustomerCreationSource": {
      "type": "string",
      "enum": [
        "OTHER",
        "APPOINTMENTS",
        "COUPON",
        "DELETION_RECOVERY",
        "DIRECTORY",
        "EGIFTING",
        "EMAIL_COLLECTION",
        "FEEDBACK",
        "IMPORT",
        "INVOICES",
        "LOYALTY",
        "MARKETING",
        "MERGE",
        "ONLINE_STORE",
        "INSTANT_PROFILE",
        "TERMINAL",
        "THIRD_PARTY",
        "THIRD_PARTY_IMPORT",
        "UNMERGE_RECOVERY"
      ],
      "x-enum-elements": [
        {
          "name": "OTHER",
          "description": "Default creation source. Typically used for backward/future\ncompatibility when the original source of a customer profile is\nunrecognized. For example, when older clients do not support newer\nsource types."
        },
        {
          "name": "APPOINTMENTS",
          "description": "Customer profile created automatically when an appointment\nwas scheduled."
        },
        {
          "name": "COUPON",
          "description": "Customer profile created automatically when a coupon was issued\nusing Square Point of Sale."
        },
        {
          "name": "DELETION_RECOVERY",
          "description": "Customer profile restored through Square\u0027s deletion recovery\nprocess."
        },
        {
          "name": "DIRECTORY",
          "description": "Customer profile created manually through Square Dashboard or\nPoint of Sale application."
        },
        {
          "name": "EGIFTING",
          "description": "Customer profile created automatically when a gift card was\nissued using Square Point of Sale. Customer profiles are created for\nboth the purchaser and the recipient of the gift card."
        },
        {
          "name": "EMAIL_COLLECTION",
          "description": "Customer profile created through Square Point of Sale when\nsigning up for marketing emails during checkout."
        },
        {
          "name": "FEEDBACK",
          "description": "Customer profile created automatically when providing feedback\nthrough a digital receipt."
        },
        {
          "name": "IMPORT",
          "description": "Customer profile created automatically when importing customer\ndata through Square Dashboard."
        },
        {
          "name": "INVOICES",
          "description": "Customer profile created automatically during an invoice payment."
        },
        {
          "name": "LOYALTY",
          "description": "Customer profile created automatically when customers provide a\nphone number for loyalty reward programs during checkout."
        },
        {
          "name": "MARKETING",
          "description": "Customer profile created as the result of a campaign managed\nthrough Square’s Facebook integration."
        },
        {
          "name": "MERGE",
          "description": "Customer profile created as the result of explicitly merging\nmultiple customer profiles through the Square Dashboard or Point of\nSale application."
        },
        {
          "name": "ONLINE_STORE",
          "description": "Customer profile created through Square\u0027s Online Store solution\n(legacy service)."
        },
        {
          "name": "INSTANT_PROFILE",
          "description": "Customer profile created automatically as the result of a successful\ntransaction that did not explicitly link to an existing customer profile."
        },
        {
          "name": "TERMINAL",
          "description": "Customer profile created through Square\u0027s Virtual Terminal."
        },
        {
          "name": "THIRD_PARTY",
          "description": "Customer profile created through a Square API call."
        },
        {
          "name": "THIRD_PARTY_IMPORT",
          "description": "Customer profile created by a third-party product and imported\nthrough an official integration."
        },
        {
          "name": "UNMERGE_RECOVERY",
          "description": "Customer profile restored through Square\u0027s unmerge recovery\nprocess."
        }
      ],
      "description": "Indicates the method used to create the customer profile.",
      "x-release-status": "PUBLIC"
    },
    "CustomerInclusionExclusion": {
      "type": "string",
      "enum": [
        "INCLUDE",
        "EXCLUDE"
      ],
      "x-enum-elements": [
        {
          "name": "INCLUDE",
          "description": "Customers should be included in the result set when they match the\nfiltering criteria."
        },
        {
          "name": "EXCLUDE",
          "description": "Customers should be excluded from the result set when they match\nthe filtering criteria."
        }
      ],
      "description": "Indicates whether customers should be included in, or excluded from,\nthe result set when they match the filtering criteria.",
      "x-release-status": "PUBLIC"
    },
    "CustomerSortField": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "CREATED_AT"
      ],
      "x-enum-elements": [
        {
          "name": "DEFAULT",
          "description": "Use the default sort key. By default, customers are sorted\nalphanumerically by concatenating their `given_name` and `family_name`. If\nneither name field is set, string comparison is performed using one of the\nremaining fields in the following order: `company_name`, `email`,\n`phone_number`."
        },
        {
          "name": "CREATED_AT",
          "description": "Use the creation date attribute (`created_at`) of customer profiles as the sort key."
        }
      ],
      "description": "Specifies customer attributes as the sort key to customer profiles returned from a search.",
      "x-release-status": "PUBLIC"
    },
    "DayOfWeek": {
      "type": "string",
      "enum": [
        "SUN",
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT"
      ],
      "x-enum-elements": [
        {
          "name": "SUN",
          "description": "Sunday"
        },
        {
          "name": "MON",
          "description": "Monday"
        },
        {
          "name": "TUE",
          "description": "Tuesday"
        },
        {
          "name": "WED",
          "description": "Wednesday"
        },
        {
          "name": "THU",
          "description": "Thursday"
        },
        {
          "name": "FRI",
          "description": "Friday"
        },
        {
          "name": "SAT",
          "description": "Saturday"
        }
      ],
      "description": "Indicates the specific day  of the week.",
      "x-release-status": "PUBLIC"
    },
    "DeviceCodeStatus": {
      "type": "string",
      "enum": [
        "UNPAIRED",
        "PAIRED"
      ],
      "x-enum-elements": [
        {
          "name": "UNPAIRED",
          "description": "The device code is just created and unpaired."
        },
        {
          "name": "PAIRED",
          "description": "The device code has been signed in and paired to a device."
        }
      ],
      "description": "DeviceCode.Status enum.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DisputeEvidenceType": {
      "type": "string",
      "enum": [
        "GENERIC_EVIDENCE",
        "ONLINE_OR_APP_ACCESS_LOG",
        "AUTHORIZATION_DOCUMENTATION",
        "CANCELLATION_OR_REFUND_DOCUMENTATION",
        "CARDHOLDER_COMMUNICATION",
        "CARDHOLDER_INFORMATION",
        "PURCHASE_ACKNOWLEDGEMENT",
        "DUPLICATE_CHARGE_DOCUMENTATION",
        "PRODUCT_OR_SERVICE_DESCRIPTION",
        "RECEIPT",
        "SERVICE_RECEIVED_DOCUMENTATION",
        "PROOF_OF_DELIVERY_DOCUMENTATION",
        "RELATED_TRANSACTION_DOCUMENTATION",
        "REBUTTAL_EXPLANATION",
        "TRACKING_NUMBER"
      ],
      "x-enum-elements": [
        {
          "name": "GENERIC_EVIDENCE",
          "description": "Square assumes this evidence type if you don\u0027t provide a type when uploading evidence.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "ONLINE_OR_APP_ACCESS_LOG",
          "description": "Server or activity logs that show proof of the cardholder’s identity and that the cardholder successfully ordered and received the goods (digitally or otherwise).\nExample evidence: IP addresses, corresponding timestamps/dates, cardholder’s name/email address linked to a cardholder profile held by Merchant, proof the same device and card (used in dispute) were previously used in prior undisputed transaction, any related detailed activity.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "AUTHORIZATION_DOCUMENTATION",
          "description": "Evidence that the cardholder did provide authorization of the charge.\nExample evidence: a signed credit card authorization.\n\nUse when uploading evidence as: file"
        },
        {
          "name": "CANCELLATION_OR_REFUND_DOCUMENTATION",
          "description": "Evidence that the cardholder acknowledged your refund or cancellation policy.\nExample evidence: a signature or checkbox showing the cardholder’s acknowledgement of your refund or cancellation policy.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "CARDHOLDER_COMMUNICATION",
          "description": "Evidence that shows relevant communication with the cardholder.\nExample evidence: emails or texts that show the cardholder received goods/services or demonstrate cardholder satisfaction.\n\nUse when uploading evidence as: file"
        },
        {
          "name": "CARDHOLDER_INFORMATION",
          "description": "Evidence that validates customer identity.\nExample evidence: personally identifiable details such as name, email address, purchaser IP address, copy of cardholder ID.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "PURCHASE_ACKNOWLEDGEMENT",
          "description": "Evidence that shows proof of the sale/transaction.\nExample evidence: an invoice, contract, etc. showing the customer’s acknowledgement of the purchase and your terms.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "DUPLICATE_CHARGE_DOCUMENTATION",
          "description": "Evidence that shows the charge(s) in question are valid and distinct from one another.\nExample evidence: receipts, shipping labels, and invoices along with their distinct payment IDs.\n\nUse when uploading evidence as: file"
        },
        {
          "name": "PRODUCT_OR_SERVICE_DESCRIPTION",
          "description": "A description of the product or service sold.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "RECEIPT",
          "description": "A receipt or message sent to the cardholder detailing the charge.\nNote: You don’t need to upload the Square receipt; Square submits the receipt on your behalf.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "SERVICE_RECEIVED_DOCUMENTATION",
          "description": "Evidence that the service was provided to the cardholder or the expected date that services will be rendered.\nExample evidence: signed delivery form, work order, expected delivery date, or other written agreement.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "PROOF_OF_DELIVERY_DOCUMENTATION",
          "description": "Evidence that shows the product was provided to the cardholder or the expected date of delivery.\nExample evidence: signed delivery form, or written agreement acknowledging receipt of goods or services.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "RELATED_TRANSACTION_DOCUMENTATION",
          "description": "Evidence that shows the cardholder previously processed transactions on the same card and did not dispute them.\nNote: Square will automatically provide up to 5 distinct Square receipts for related transactions, when available.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "REBUTTAL_EXPLANATION",
          "description": "An explanation of why the cardholder’s claim is invalid.\nExample evidence: explanation of why each distinct charge is a legitimate purchase why the cardholder’s claim for credit owed due to their attempt to cancel, return,\nor refund is invalid per your stated policy and cardholder agreement,\nor an explanation of how the cardholder did not attempt to remedy the issue with you first in order to receive credit.\n\nUse when uploading evidence as: file or string"
        },
        {
          "name": "TRACKING_NUMBER",
          "description": "The tracking number for the order provided by the shipping carrier. If you have multiple numbers, they will need to be submitted individually as separate pieces of evidence.\n\nUse when uploading evidence as: string"
        }
      ],
      "description": "Type of the dispute evidence.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DisputeReason": {
      "type": "string",
      "enum": [
        "AMOUNT_DIFFERS",
        "CANCELLED",
        "DUPLICATE",
        "NO_KNOWLEDGE",
        "NOT_AS_DESCRIBED",
        "NOT_RECEIVED",
        "PAID_BY_OTHER_MEANS",
        "CUSTOMER_REQUESTS_CREDIT",
        "EMV_LIABILITY_SHIFT"
      ],
      "x-enum-elements": [
        {
          "name": "AMOUNT_DIFFERS",
          "description": "The cardholder claims that they were charged the wrong amount for the purchase.\nTo challenge this dispute, provide specific and concrete evidence that the cardholder agreed to the amount charged."
        },
        {
          "name": "CANCELLED",
          "description": "The cardholder claims that they attempted to return the goods or cancel the service.\nTo challenge this dispute, provide specific and concrete evidence to prove that the cardholder is not due a refund, and that the cardholder acknowledged your cancellation policy."
        },
        {
          "name": "DUPLICATE",
          "description": "The cardholder claims that they were charged twice for the same purchase.\nTo challenge this dispute, provide specific and concrete evidence that shows both charges are legitimate and independent of one another."
        },
        {
          "name": "NO_KNOWLEDGE",
          "description": "The cardholder claims that they did not make this purchase nor authorized the charge.\nTo challenge this dispute, provide specific and concrete evidence that proves that the cardholder identity was verified at the time of purchase and that the purchase was authorized."
        },
        {
          "name": "NOT_AS_DESCRIBED",
          "description": "The cardholder claims the product or service was provided but the quality of the deliverable did not align with the expectations of the cardholder based on the description.\nTo challenge this dispute, provide specific and concrete evidence that shows the cardholder is in possession of the product as described, or received the service as described (agreed) upon."
        },
        {
          "name": "NOT_RECEIVED",
          "description": "The cardholder claims the product or service was not received by the cardholder within the stated time frame.\nTo challenge this dispute, provide specific and concrete evidence to prove that the cardholder is in possession of or received the product or service sold."
        },
        {
          "name": "PAID_BY_OTHER_MEANS",
          "description": "The cardholder claims that they previously paid for this purchase.\nTo challenge this dispute, provide specific and concrete evidence that shows both charges are legitimate and independent of one another or proof that you already provided a credit for the charge."
        },
        {
          "name": "CUSTOMER_REQUESTS_CREDIT",
          "description": "The cardholder claims that the purchase was either cancelled or returned but they have not yet received the credit.\nTo challenge this dispute, provide specific and concrete evidence to prove that the cardholder is not due a refund, and that they acknowledged your cancellation and/or refund policy."
        },
        {
          "name": "EMV_LIABILITY_SHIFT",
          "description": "A chip-enabled card was not processed through a compliant chip-card reader (e.g. it was swiped instead of dipped into a chip-card reader).\nYou cannot challenge this dispute because the payment didn’t comply with EMV security requirements. For more information, see [What Is EMV.](https://squareup.com/emv)"
        }
      ],
      "description": "List of possible reasons why a cardholder might initiate a\ndispute with their bank.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DisputeState": {
      "type": "string",
      "enum": [
        "UNKNOWN_STATE",
        "INQUIRY_EVIDENCE_REQUIRED",
        "INQUIRY_PROCESSING",
        "INQUIRY_CLOSED",
        "EVIDENCE_REQUIRED",
        "PROCESSING",
        "WON",
        "LOST",
        "ACCEPTED",
        "WAITING_THIRD_PARTY"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN_STATE",
          "description": ""
        },
        {
          "name": "INQUIRY_EVIDENCE_REQUIRED",
          "description": ""
        },
        {
          "name": "INQUIRY_PROCESSING",
          "description": ""
        },
        {
          "name": "INQUIRY_CLOSED",
          "description": ""
        },
        {
          "name": "EVIDENCE_REQUIRED",
          "description": ""
        },
        {
          "name": "PROCESSING",
          "description": ""
        },
        {
          "name": "WON",
          "description": ""
        },
        {
          "name": "LOST",
          "description": ""
        },
        {
          "name": "ACCEPTED",
          "description": ""
        },
        {
          "name": "WAITING_THIRD_PARTY",
          "description": ""
        }
      ],
      "description": "List of possible dispute states.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "EcomVisibility": {
      "type": "string",
      "enum": [
        "UNINDEXED",
        "UNAVAILABLE",
        "HIDDEN",
        "VISIBLE"
      ],
      "x-enum-elements": [
        {
          "name": "UNINDEXED",
          "description": "Item is not synced with Ecom (Weebly). This is the default state"
        },
        {
          "name": "UNAVAILABLE",
          "description": "Item is synced but is unavailable within Ecom (Weebly) and Online Checkout"
        },
        {
          "name": "HIDDEN",
          "description": "Option for seller to choose manually created Quick Amounts."
        },
        {
          "name": "VISIBLE",
          "description": "Item is synced but available within Ecom (Weebly) and Online Checkout but is hidden from Ecom Store."
        }
      ],
      "description": "Determines item visibility in Ecom (Online Store) and Online Checkout.",
      "x-release-status": "PUBLIC"
    },
    "EmployeeStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": "Specifies that the employee is in the Active state."
        },
        {
          "name": "INACTIVE",
          "description": "Specifies that the employee is in the Inactive state."
        }
      ],
      "description": "The status of the Employee being retrieved.",
      "x-release-status": "PUBLIC"
    },
    "ErrorCategory": {
      "type": "string",
      "enum": [
        "API_ERROR",
        "AUTHENTICATION_ERROR",
        "INVALID_REQUEST_ERROR",
        "RATE_LIMIT_ERROR",
        "PAYMENT_METHOD_ERROR",
        "REFUND_ERROR"
      ],
      "x-enum-elements": [
        {
          "name": "API_ERROR",
          "description": "An error occurred with the Connect API itself."
        },
        {
          "name": "AUTHENTICATION_ERROR",
          "description": "An authentication error occurred. Most commonly, the request had\na missing, malformed, or otherwise invalid `Authorization` header."
        },
        {
          "name": "INVALID_REQUEST_ERROR",
          "description": "The request was invalid. Most commonly, a required parameter was\nmissing, or a provided parameter had an invalid value."
        },
        {
          "name": "RATE_LIMIT_ERROR",
          "description": "Your application reached the Connect API rate limit. Retry your\nrequest after a while."
        },
        {
          "name": "PAYMENT_METHOD_ERROR",
          "description": "An error occurred while processing a payment method. Most commonly,\nthe details of the payment method were invalid (such as a card\u0027s CVV\nor expiration date)."
        },
        {
          "name": "REFUND_ERROR",
          "description": "An error occurred while attempting to process a refund."
        }
      ],
      "description": "Indicates which high-level category of error has occurred during a\nrequest to the Connect API.",
      "x-release-status": "PUBLIC"
    },
    "ErrorCode": {
      "type": "string",
      "enum": [
        "INTERNAL_SERVER_ERROR",
        "UNAUTHORIZED",
        "ACCESS_TOKEN_EXPIRED",
        "ACCESS_TOKEN_REVOKED",
        "CLIENT_DISABLED",
        "FORBIDDEN",
        "INSUFFICIENT_SCOPES",
        "APPLICATION_DISABLED",
        "V1_APPLICATION",
        "V1_ACCESS_TOKEN",
        "CARD_PROCESSING_NOT_ENABLED",
        "BAD_REQUEST",
        "MISSING_REQUIRED_PARAMETER",
        "INCORRECT_TYPE",
        "INVALID_TIME",
        "INVALID_TIME_RANGE",
        "INVALID_VALUE",
        "INVALID_CURSOR",
        "UNKNOWN_QUERY_PARAMETER",
        "CONFLICTING_PARAMETERS",
        "EXPECTED_JSON_BODY",
        "INVALID_SORT_ORDER",
        "VALUE_REGEX_MISMATCH",
        "VALUE_TOO_SHORT",
        "VALUE_TOO_LONG",
        "VALUE_TOO_LOW",
        "VALUE_TOO_HIGH",
        "VALUE_EMPTY",
        "ARRAY_LENGTH_TOO_LONG",
        "ARRAY_LENGTH_TOO_SHORT",
        "ARRAY_EMPTY",
        "EXPECTED_BOOLEAN",
        "EXPECTED_INTEGER",
        "EXPECTED_FLOAT",
        "EXPECTED_STRING",
        "EXPECTED_OBJECT",
        "EXPECTED_ARRAY",
        "EXPECTED_MAP",
        "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
        "INVALID_ARRAY_VALUE",
        "INVALID_ENUM_VALUE",
        "INVALID_CONTENT_TYPE",
        "INVALID_FORM_VALUE",
        "CUSTOMER_NOT_FOUND",
        "ONE_INSTRUMENT_EXPECTED",
        "NO_FIELDS_SET",
        "TOO_MANY_MAP_ENTRIES",
        "MAP_KEY_LENGTH_TOO_SHORT",
        "MAP_KEY_LENGTH_TOO_LONG",
        "CARD_EXPIRED",
        "INVALID_EXPIRATION",
        "INVALID_EXPIRATION_YEAR",
        "INVALID_EXPIRATION_DATE",
        "UNSUPPORTED_CARD_BRAND",
        "UNSUPPORTED_ENTRY_METHOD",
        "INVALID_ENCRYPTED_CARD",
        "INVALID_CARD",
        "GENERIC_DECLINE",
        "CVV_FAILURE",
        "ADDRESS_VERIFICATION_FAILURE",
        "INVALID_ACCOUNT",
        "CURRENCY_MISMATCH",
        "INSUFFICIENT_FUNDS",
        "INSUFFICIENT_PERMISSIONS",
        "CARDHOLDER_INSUFFICIENT_PERMISSIONS",
        "INVALID_LOCATION",
        "TRANSACTION_LIMIT",
        "VOICE_FAILURE",
        "PAN_FAILURE",
        "EXPIRATION_FAILURE",
        "CARD_NOT_SUPPORTED",
        "INVALID_PIN",
        "INVALID_POSTAL_CODE",
        "INVALID_FEES",
        "MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED",
        "PAYMENT_LIMIT_EXCEEDED",
        "GIFT_CARD_AVAILABLE_AMOUNT",
        "DELAYED_TRANSACTION_EXPIRED",
        "DELAYED_TRANSACTION_CANCELED",
        "DELAYED_TRANSACTION_CAPTURED",
        "DELAYED_TRANSACTION_FAILED",
        "CARD_TOKEN_EXPIRED",
        "CARD_TOKEN_USED",
        "AMOUNT_TOO_HIGH",
        "UNSUPPORTED_INSTRUMENT_TYPE",
        "REFUND_AMOUNT_INVALID",
        "REFUND_ALREADY_PENDING",
        "PAYMENT_NOT_REFUNDABLE",
        "INVALID_CARD_DATA",
        "LOCATION_MISMATCH",
        "IDEMPOTENCY_KEY_REUSED",
        "UNEXPECTED_VALUE",
        "SANDBOX_NOT_SUPPORTED",
        "INVALID_EMAIL_ADDRESS",
        "INVALID_PHONE_NUMBER",
        "CHECKOUT_EXPIRED",
        "BAD_CERTIFICATE",
        "INVALID_SQUARE_VERSION_FORMAT",
        "API_VERSION_INCOMPATIBLE",
        "CARD_DECLINED",
        "VERIFY_CVV_FAILURE",
        "VERIFY_AVS_FAILURE",
        "CARD_DECLINED_CALL_ISSUER",
        "CARD_DECLINED_VERIFICATION_REQUIRED",
        "BAD_EXPIRATION",
        "CHIP_INSERTION_REQUIRED",
        "ALLOWABLE_PIN_TRIES_EXCEEDED",
        "RESERVATION_DECLINED",
        "NOT_FOUND",
        "APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND",
        "METHOD_NOT_ALLOWED",
        "NOT_ACCEPTABLE",
        "REQUEST_TIMEOUT",
        "CONFLICT",
        "GONE",
        "REQUEST_ENTITY_TOO_LARGE",
        "UNSUPPORTED_MEDIA_TYPE",
        "UNPROCESSABLE_ENTITY",
        "RATE_LIMITED",
        "NOT_IMPLEMENTED",
        "BAD_GATEWAY",
        "SERVICE_UNAVAILABLE",
        "TEMPORARY_ERROR",
        "GATEWAY_TIMEOUT"
      ],
      "x-enum-elements": [
        {
          "name": "INTERNAL_SERVER_ERROR",
          "description": "500 Internal Server Error - a general server error occurred."
        },
        {
          "name": "UNAUTHORIZED",
          "description": "401 Unauthorized - a general authorization error occurred."
        },
        {
          "name": "ACCESS_TOKEN_EXPIRED",
          "description": "401 Unauthorized - the provided access token has expired."
        },
        {
          "name": "ACCESS_TOKEN_REVOKED",
          "description": "401 Unauthorized - the provided access token has been revoked."
        },
        {
          "name": "CLIENT_DISABLED",
          "description": "401 Unauthorized - the provided client has been disabled."
        },
        {
          "name": "FORBIDDEN",
          "description": "403 Forbidden - a general access error occurred."
        },
        {
          "name": "INSUFFICIENT_SCOPES",
          "description": "403 Forbidden - the provided access token does not have permission\nto execute the requested action."
        },
        {
          "name": "APPLICATION_DISABLED",
          "description": "403 Forbidden - the calling application was disabled."
        },
        {
          "name": "V1_APPLICATION",
          "description": "403 Forbidden - the calling application was created prior to\n2016-03-30 and is not compatible with v2 Square API calls."
        },
        {
          "name": "V1_ACCESS_TOKEN",
          "description": "403 Forbidden - the calling application is using an access token\ncreated prior to 2016-03-30 and is not compatible with v2 Square API\ncalls."
        },
        {
          "name": "CARD_PROCESSING_NOT_ENABLED",
          "description": "403 Forbidden - the location provided in the API call is not\nenabled for credit card processing."
        },
        {
          "name": "BAD_REQUEST",
          "description": "400 Bad Request - a general error occurred."
        },
        {
          "name": "MISSING_REQUIRED_PARAMETER",
          "description": "400 Bad Request - the request is missing a required path, query, or\nbody parameter."
        },
        {
          "name": "INCORRECT_TYPE",
          "description": "400 Bad Request - the value provided in the request is the wrong\ntype. For example, a string instead of an integer."
        },
        {
          "name": "INVALID_TIME",
          "description": "400 Bad Request - formatting for the provided time value is\nincorrect."
        },
        {
          "name": "INVALID_TIME_RANGE",
          "description": "400 Bad Request - the time range provided in the request is invalid.\nFor example, the end time is before the start time."
        },
        {
          "name": "INVALID_VALUE",
          "description": "400 Bad Request - the provided value is invalid. For example,\nincluding `%` in a phone number."
        },
        {
          "name": "INVALID_CURSOR",
          "description": "400 Bad Request - the pagination cursor included in the request is\ninvalid."
        },
        {
          "name": "UNKNOWN_QUERY_PARAMETER",
          "description": "400 Bad Request - the query parameters provided is invalid for the\nrequested endpoint."
        },
        {
          "name": "CONFLICTING_PARAMETERS",
          "description": "400 Bad Request - 1 or more of the request parameters conflict with\neach other."
        },
        {
          "name": "EXPECTED_JSON_BODY",
          "description": "400 Bad Request - the request body is not a JSON object."
        },
        {
          "name": "INVALID_SORT_ORDER",
          "description": "400 Bad Request - the provided sort order is not a valid key.\nCurrently, sort order must be `ASC` or `DESC`."
        },
        {
          "name": "VALUE_REGEX_MISMATCH",
          "description": "400 Bad Request - the provided value does not match an expected\nregular expression."
        },
        {
          "name": "VALUE_TOO_SHORT",
          "description": "400 Bad Request - the provided string value is shorter than the\nminimum length allowed."
        },
        {
          "name": "VALUE_TOO_LONG",
          "description": "400 Bad Request - the provided string value is longer than the\nmaximum length allowed."
        },
        {
          "name": "VALUE_TOO_LOW",
          "description": "400 Bad Request - the provided value is less than the supported\nminimum."
        },
        {
          "name": "VALUE_TOO_HIGH",
          "description": "400 Bad Request - the provided value is greater than the supported\nmaximum."
        },
        {
          "name": "VALUE_EMPTY",
          "description": "400 Bad Request - the provided value has a default (empty) value\nsuch as a blank string."
        },
        {
          "name": "ARRAY_LENGTH_TOO_LONG",
          "description": "400 Bad Request - the provided array has too many elements."
        },
        {
          "name": "ARRAY_LENGTH_TOO_SHORT",
          "description": "400 Bad Request - the provided array has too few elements."
        },
        {
          "name": "ARRAY_EMPTY",
          "description": "400 Bad Request - the provided array is empty."
        },
        {
          "name": "EXPECTED_BOOLEAN",
          "description": "400 Bad Request - the endpoint expected the provided value to be a\nboolean."
        },
        {
          "name": "EXPECTED_INTEGER",
          "description": "400 Bad Request - the endpoint expected the provided value to be an\ninteger."
        },
        {
          "name": "EXPECTED_FLOAT",
          "description": "400 Bad Request - the endpoint expected the provided value to be a\nfloat."
        },
        {
          "name": "EXPECTED_STRING",
          "description": "400 Bad Request - the endpoint expected the provided value to be a\nstring."
        },
        {
          "name": "EXPECTED_OBJECT",
          "description": "400 Bad Request - the endpoint expected the provided value to be a\nJSON object."
        },
        {
          "name": "EXPECTED_ARRAY",
          "description": "400 Bad Request - the endpoint expected the provided value to be an\narray or list."
        },
        {
          "name": "EXPECTED_MAP",
          "description": "400 Bad Request - the endpoint expected the provided value to be a\nmap or associative array."
        },
        {
          "name": "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
          "description": "400 Bad Request - the endpoint expected the provided value to be an\narray encoded in base64."
        },
        {
          "name": "INVALID_ARRAY_VALUE",
          "description": "400 Bad Request - 1 or more object in the array does not match the\narray type."
        },
        {
          "name": "INVALID_ENUM_VALUE",
          "description": "400 Bad Request - the provided static string is not valid for the\nfield."
        },
        {
          "name": "INVALID_CONTENT_TYPE",
          "description": "400 Bad Request - invalid content type header."
        },
        {
          "name": "INVALID_FORM_VALUE",
          "description": "400 Bad Request - Only relevant for applications created prior to\n2016-03-30. Indicates there was an error while parsing form values."
        },
        {
          "name": "CUSTOMER_NOT_FOUND",
          "description": "400 Bad Request - the provided customer id can\u0027t be found in the merchant\u0027s customers list."
        },
        {
          "name": "ONE_INSTRUMENT_EXPECTED",
          "description": "400 Bad Request - a general error occurred."
        },
        {
          "name": "NO_FIELDS_SET",
          "description": "400 Bad Request - a general error occurred."
        },
        {
          "name": "TOO_MANY_MAP_ENTRIES",
          "description": "400 Bad Request - too many entries in the map field."
        },
        {
          "name": "MAP_KEY_LENGTH_TOO_SHORT",
          "description": "400 Bad Request - the length of one of the provided keys in the map is too short."
        },
        {
          "name": "MAP_KEY_LENGTH_TOO_LONG",
          "description": "400 Bad Request - the length of one of the provided keys in the map is too long."
        },
        {
          "name": "CARD_EXPIRED",
          "description": "The card issuer declined the request because the card is expired."
        },
        {
          "name": "INVALID_EXPIRATION",
          "description": "The expiration date for the payment card is invalid. For example,\nit indicates a date in the past."
        },
        {
          "name": "INVALID_EXPIRATION_YEAR",
          "description": "The expiration year for the payment card is invalid. For example,\nit indicates a year in the past or contains invalid characters."
        },
        {
          "name": "INVALID_EXPIRATION_DATE",
          "description": "The expiration date for the payment card is invalid. For example,\nit contains invalid characters."
        },
        {
          "name": "UNSUPPORTED_CARD_BRAND",
          "description": "The credit card provided is not from a supported issuer."
        },
        {
          "name": "UNSUPPORTED_ENTRY_METHOD",
          "description": "The entry method for the credit card (swipe, dip, tap) is not supported."
        },
        {
          "name": "INVALID_ENCRYPTED_CARD",
          "description": "The encrypted card information is invalid."
        },
        {
          "name": "INVALID_CARD",
          "description": "The credit card cannot be validated based on the provided details."
        },
        {
          "name": "GENERIC_DECLINE",
          "description": "An unexpected error occurred."
        },
        {
          "name": "CVV_FAILURE",
          "description": "The card issuer declined the request because the CVV value is invalid."
        },
        {
          "name": "ADDRESS_VERIFICATION_FAILURE",
          "description": "The card issuer declined the request because the postal code is invalid."
        },
        {
          "name": "INVALID_ACCOUNT",
          "description": "The card issuer was not able to locate account on record."
        },
        {
          "name": "CURRENCY_MISMATCH",
          "description": "The currency associated with the payment is not valid for the provided\nfunding source. For example, a gift card funded in USD cannot be used to process\npayments in GBP."
        },
        {
          "name": "INSUFFICIENT_FUNDS",
          "description": "The funding source has insufficient funds to cover the payment."
        },
        {
          "name": "INSUFFICIENT_PERMISSIONS",
          "description": "The Square account does not have the permissions to accept\nthis payment. For example, Square may limit which merchants are\nallowed to receive gift card payments."
        },
        {
          "name": "CARDHOLDER_INSUFFICIENT_PERMISSIONS",
          "description": "The card issuer has declined the transaction due to restrictions on where the card can be used.\nFor example, a gift card is limited to a single merchant."
        },
        {
          "name": "INVALID_LOCATION",
          "description": "The Square account cannot take payments in the specified region.\nA Square account can take payments only from the region where the account was created."
        },
        {
          "name": "TRANSACTION_LIMIT",
          "description": "The card issuer has determined the payment amount is either too high or too low.\nThe API returns the error code mostly for credit cards (for example, the card reached\nthe credit limit). However, sometimes the issuer bank can indicate the error for debit\nor prepaid cards (for example, card has insufficient funds)."
        },
        {
          "name": "VOICE_FAILURE",
          "description": "The card issuer declined the request because the issuer requires voice authorization from the cardholder."
        },
        {
          "name": "PAN_FAILURE",
          "description": "The specified card number is invalid. For example, it is of\nincorrect length or is incorrectly formatted."
        },
        {
          "name": "EXPIRATION_FAILURE",
          "description": "The card expiration date is either invalid or indicates that the\ncard is expired."
        },
        {
          "name": "CARD_NOT_SUPPORTED",
          "description": "The card is not supported either in the geographic region or by\nthe MCC [merchant category code](https://developer.squareup.com/docs/docs/api/connect/v2#navsection-connectapibasics)"
        },
        {
          "name": "INVALID_PIN",
          "description": "The card issuer declined the request because the PIN is invalid."
        },
        {
          "name": "INVALID_POSTAL_CODE",
          "description": "The postal code is incorrectly formatted."
        },
        {
          "name": "INVALID_FEES",
          "description": "The app_fee_money on a payment is too high."
        },
        {
          "name": "MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED",
          "description": "The card must be swiped, tapped, or dipped. Payments attempted by manually entering the card number are declined."
        },
        {
          "name": "PAYMENT_LIMIT_EXCEEDED",
          "description": "Square declined the request because the payment amount exceeded the processing limit for this merchant."
        },
        {
          "name": "GIFT_CARD_AVAILABLE_AMOUNT",
          "description": "When using a gift card as a payment source in a `CreatePayment` request, you can allow\ntaking partial payment by adding the `accept_partial_authorization` parameter in the request.\nIf the gift card does not have sufficient balance to pay the entire `amount_money` specified\nin the request, the request will succeed (an APPROVED payment for the remaining balance will be\nreturned). For more information, see [Partial amount with Square gift cards](https://developer.squareup.com/docs/docs/payments-api/take-payments#partial-payment-gift-card).\\r\\n\\r\\n\nHowever, taking such a partial payment does not work if your request also includes `tip_money`,\n`app_fee_money`, or both. Square declines such payment and returns this error.\\r\\n* The error\ndetails provide the amount that was available on the gift card at the time of the request.\nThe amount is a string representation in the smallest denomination of the applicable currency.\nFor example, in USD the amount is specified in cents.\\r\\n* The error code appears in an array\nalong with the INSUFFICIENT_FUNDS error.\\r\\n\\r\\nThe following is an example set of\nerrors:\\r\\n```\\r\\n{\\r\\n  \\\"errors\\\": [\\r\\n    {\\r\\n  \\\"code\\\": \\\"INSUFFICIENT_FUNDS\\\",\\r\\n      \\\"detail\\\": \\\"Gift card does not have sufficient balance for requested amount and tip.\\\",\\r\\n      \\\"category\\\": \\\"PAYMENT_METHOD_ERROR\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"code\\\": \\\"GIFT_CARD_AVAILABLE_AMOUNT\\\",\\r\\n      \\\"detail\\\": \\\"4494\\\",\\r\\n      \\\"category\\\": \\\"PAYMENT_METHOD_ERROR\\\"\\r\\n    }\\r\\n  ]\\r\\n}\\r\\n```\\r\\n\\r\\n\nIn addition to the errors, it shows the gift card balance at 44.94 USD. You can review this amount and submit a new `CreatePayment` request with `tip_money` and `amount_money` that fit within the available balance."
        },
        {
          "name": "DELAYED_TRANSACTION_EXPIRED",
          "description": "The application tried to update a delayed-capture payment that has expired."
        },
        {
          "name": "DELAYED_TRANSACTION_CANCELED",
          "description": "The application tried to cancel a delayed-capture payment that was already cancelled."
        },
        {
          "name": "DELAYED_TRANSACTION_CAPTURED",
          "description": "The application tried to capture a delayed-capture payment that was already captured."
        },
        {
          "name": "DELAYED_TRANSACTION_FAILED",
          "description": "The application tried to update a delayed-capture payment that failed."
        },
        {
          "name": "CARD_TOKEN_EXPIRED",
          "description": "The provided card token (nonce) has expired."
        },
        {
          "name": "CARD_TOKEN_USED",
          "description": "The provided card token (nonce) was already used to process payment."
        },
        {
          "name": "AMOUNT_TOO_HIGH",
          "description": "The requested payment amount is too high for the provided payment source."
        },
        {
          "name": "UNSUPPORTED_INSTRUMENT_TYPE",
          "description": "The API request references an unsupported instrument type/"
        },
        {
          "name": "REFUND_AMOUNT_INVALID",
          "description": "The requested refund amount exceeds the amount available to refund."
        },
        {
          "name": "REFUND_ALREADY_PENDING",
          "description": "The payment already has a pending refund."
        },
        {
          "name": "PAYMENT_NOT_REFUNDABLE",
          "description": "The payment is not refundable. For example, a previous refund has\nalready been rejected and no new refunds can be accepted."
        },
        {
          "name": "INVALID_CARD_DATA",
          "description": "Generic error - the provided card data is invalid."
        },
        {
          "name": "LOCATION_MISMATCH",
          "description": "Generic error - the given location does not matching what is expected."
        },
        {
          "name": "IDEMPOTENCY_KEY_REUSED",
          "description": "The provided idempotency key has already been used."
        },
        {
          "name": "UNEXPECTED_VALUE",
          "description": "General error - the value provided was unexpected."
        },
        {
          "name": "SANDBOX_NOT_SUPPORTED",
          "description": "The API request is not supported in sandbox."
        },
        {
          "name": "INVALID_EMAIL_ADDRESS",
          "description": "The provided email address is invalid."
        },
        {
          "name": "INVALID_PHONE_NUMBER",
          "description": "The provided phone number is invalid."
        },
        {
          "name": "CHECKOUT_EXPIRED",
          "description": "The provided checkout URL has expired."
        },
        {
          "name": "BAD_CERTIFICATE",
          "description": "Bad certificate."
        },
        {
          "name": "INVALID_SQUARE_VERSION_FORMAT",
          "description": "The provided Square-Version is incorrectly formatted."
        },
        {
          "name": "API_VERSION_INCOMPATIBLE",
          "description": "The provided Square-Version is incompatible with the requested action."
        },
        {
          "name": "CARD_DECLINED",
          "description": "402 Request failed - the card was declined."
        },
        {
          "name": "VERIFY_CVV_FAILURE",
          "description": "402 Request failed - the CVV could not be verified."
        },
        {
          "name": "VERIFY_AVS_FAILURE",
          "description": "402 Request failed - the AVS could not be verified."
        },
        {
          "name": "CARD_DECLINED_CALL_ISSUER",
          "description": "402 Request failed - the payment card was declined with a request\nfor the card holder to call the issuer."
        },
        {
          "name": "CARD_DECLINED_VERIFICATION_REQUIRED",
          "description": "402 Request failed - the payment card was declined with a request\nfor additional verification."
        },
        {
          "name": "BAD_EXPIRATION",
          "description": "402 Request failed - the card expiration date is either missing or\nincorrectly formatted."
        },
        {
          "name": "CHIP_INSERTION_REQUIRED",
          "description": "402 Request failed - the card issuer requires that the card be read\nusing a chip reader."
        },
        {
          "name": "ALLOWABLE_PIN_TRIES_EXCEEDED",
          "description": "402 Request failed - the card has exhausted its available pin entry\nretries set by the card issuer. Resolving the error typically requires the\ncard holder to contact the card issuer."
        },
        {
          "name": "RESERVATION_DECLINED",
          "description": "402 Request failed - The card issuer declined the refund."
        },
        {
          "name": "NOT_FOUND",
          "description": "404 Not Found - a general error occurred."
        },
        {
          "name": "APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND",
          "description": "404 Not Found - Square could not find the associated Apple Pay certificate."
        },
        {
          "name": "METHOD_NOT_ALLOWED",
          "description": "405 Method Not Allowed - a general error occurred."
        },
        {
          "name": "NOT_ACCEPTABLE",
          "description": "406 Not Acceptable - a general error occurred."
        },
        {
          "name": "REQUEST_TIMEOUT",
          "description": "408 Request Timeout - a general error occurred."
        },
        {
          "name": "CONFLICT",
          "description": "409 Conflict - a general error occurred."
        },
        {
          "name": "GONE",
          "description": "410 Gone - the target resource is no longer available and this\ncondition is likely to be permanent.."
        },
        {
          "name": "REQUEST_ENTITY_TOO_LARGE",
          "description": "413 Request Entity Too Large - a general error occurred."
        },
        {
          "name": "UNSUPPORTED_MEDIA_TYPE",
          "description": "415 Unsupported Media Type - a general error occurred."
        },
        {
          "name": "UNPROCESSABLE_ENTITY",
          "description": "422 Unprocessable Entity - a general error occurred."
        },
        {
          "name": "RATE_LIMITED",
          "description": "429 Rate Limited - a general error occurred."
        },
        {
          "name": "NOT_IMPLEMENTED",
          "description": "501 Not Implemented - a general error occurred."
        },
        {
          "name": "BAD_GATEWAY",
          "description": "502 Bad Gateway - a general error occurred."
        },
        {
          "name": "SERVICE_UNAVAILABLE",
          "description": "503 Service Unavailable - a general error occurred."
        },
        {
          "name": "TEMPORARY_ERROR",
          "description": "A temporary internal error occurred. You can safely retry your call\nusing the same idempotency key."
        },
        {
          "name": "GATEWAY_TIMEOUT",
          "description": "504 Gateway Timeout - a general error occurred."
        }
      ],
      "description": "Indicates the specific error that occurred during a request to a\nSquare API.",
      "x-release-status": "PUBLIC"
    },
    "ExcludeStrategy": {
      "type": "string",
      "enum": [
        "LEAST_EXPENSIVE",
        "MOST_EXPENSIVE"
      ],
      "x-enum-elements": [
        {
          "name": "LEAST_EXPENSIVE",
          "description": "The least expensive matched products are excluded from the pricing. If\nthe pricing rule is set to exclude one product and multiple products in the\nmatch set qualify as least expensive, then one will be excluded at random.\n\nExcluding the least expensive product gives the best discount value to the buyer."
        },
        {
          "name": "MOST_EXPENSIVE",
          "description": "The most expensive matched product is excluded from the pricing rule.\nIf multiple products have the same price and all qualify as least expensive,\none will be excluded at random.\n\nThis guarantees that the most expensive product is purchased at full price."
        }
      ],
      "description": "Indicates which products matched by a CatalogPricingRule\nwill be excluded if the pricing rule uses an exclude set.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InventoryAlertType": {
      "type": "string",
      "enum": [
        "NONE",
        "LOW_QUANTITY"
      ],
      "x-enum-elements": [
        {
          "name": "NONE",
          "description": "The variation does not display an alert."
        },
        {
          "name": "LOW_QUANTITY",
          "description": "The variation generates an alert when its quantity is low."
        }
      ],
      "description": "Indicates whether Square should alert the merchant when the inventory quantity of a CatalogItemVariation is low.",
      "x-release-status": "PUBLIC"
    },
    "InventoryChangeType": {
      "type": "string",
      "enum": [
        "PHYSICAL_COUNT",
        "ADJUSTMENT",
        "TRANSFER"
      ],
      "x-enum-elements": [
        {
          "name": "PHYSICAL_COUNT",
          "description": "The change occurred as part of a physical count update."
        },
        {
          "name": "ADJUSTMENT",
          "description": "The change occurred as part of the normal lifecycle of goods\n(e.g., as an inventory adjustment)."
        },
        {
          "name": "TRANSFER",
          "description": "The change occurred as part of an inventory transfer."
        }
      ],
      "description": "Indicates how the inventory change was applied to a tracked quantity of items.",
      "x-release-status": "PUBLIC"
    },
    "InventoryState": {
      "type": "string",
      "enum": [
        "CUSTOM",
        "IN_STOCK",
        "SOLD",
        "RETURNED_BY_CUSTOMER",
        "RESERVED_FOR_SALE",
        "SOLD_ONLINE",
        "ORDERED_FROM_VENDOR",
        "RECEIVED_FROM_VENDOR",
        "IN_TRANSIT_TO",
        "NONE",
        "WASTE",
        "UNLINKED_RETURN"
      ],
      "x-enum-elements": [
        {
          "name": "CUSTOM",
          "description": "The related quantity of items are in a custom state. **READ-ONLY**:\nthe Inventory API cannot move quantities to or from this state."
        },
        {
          "name": "IN_STOCK",
          "description": "The related quantity of items are on hand and available for sale."
        },
        {
          "name": "SOLD",
          "description": "The related quantity of items were sold as part of an itemized\ntransaction. Quantities in the `SOLD` state are no longer tracked."
        },
        {
          "name": "RETURNED_BY_CUSTOMER",
          "description": "The related quantity of items were returned through the Square Point\nof Sale application, but are not yet available for sale. **READ-ONLY**:\nthe Inventory API cannot move quantities to or from this state."
        },
        {
          "name": "RESERVED_FOR_SALE",
          "description": "The related quantity of items are on hand, but not currently\navailable for sale. **READ-ONLY**: the Inventory API cannot move\nquantities to or from this state."
        },
        {
          "name": "SOLD_ONLINE",
          "description": "The related quantity of items were sold online. **READ-ONLY**: the\nInventory API cannot move quantities to or from this state."
        },
        {
          "name": "ORDERED_FROM_VENDOR",
          "description": "The related quantity of items were ordered from a vendor but not yet\nreceived. **READ-ONLY**: the Inventory API cannot move quantities to or\nfrom this state."
        },
        {
          "name": "RECEIVED_FROM_VENDOR",
          "description": "The related quantity of items were received from a vendor but are\nnot yet available for sale. **READ-ONLY**: the Inventory API cannot move\nquantities to or from this state."
        },
        {
          "name": "IN_TRANSIT_TO",
          "description": "The related quantity of items are in transit between locations.\n*READ-ONLY**: the Inventory API cannot move quantities to or from this\nstate."
        },
        {
          "name": "NONE",
          "description": "A placeholder indicating that the related quantity of items are not\ncurrently tracked in Square. Transferring quantities from the `NONE` state\nto a tracked state (e.g., `IN_STOCK`) introduces stock into the system."
        },
        {
          "name": "WASTE",
          "description": "The related quantity of items are lost or damaged and cannot be\nsold."
        },
        {
          "name": "UNLINKED_RETURN",
          "description": "The related quantity of items were returned but not linked to a\nprevious transaction. Unlinked returns are not tracked in Square.\nTransferring a quantity from `UNLINKED_RETURN` to a tracked state (e.g.,\n`IN_STOCK`) introduces new stock into the system."
        }
      ],
      "description": "Indicates the state of a tracked item quantity in the lifecycle of goods.",
      "x-release-status": "PUBLIC"
    },
    "InvoicePaymentReminderStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "NOT_APPLICABLE",
        "SENT"
      ],
      "x-enum-elements": [
        {
          "name": "PENDING",
          "description": "The reminder is to be sent on the `relative_scheduled_date` (if the invoice is published)."
        },
        {
          "name": "NOT_APPLICABLE",
          "description": "The reminder is not applicable and is not sent. The following are examples\nof when reminders are not applicable and are not sent:\n- You schedule a reminder to be sent before the invoice is published.\n- The invoice is configured with multiple payment requests and a payment request reminder\nis configured to be sent after the next payment request `due_date`.\n- Two reminders (for different payment requests) are configured to be sent on the\nsame date. Therefore, only one reminder is sent.\n- You configure a reminder to be sent on the date that the invoice is scheduled to be sent.\n- The payment request is already paid.\n- The invoice status is `CANCELED` or `FAILED`."
        },
        {
          "name": "SENT",
          "description": "The reminder is sent."
        }
      ],
      "description": "The status of a payment request reminder.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoiceRequestMethod": {
      "type": "string",
      "enum": [
        "EMAIL",
        "CHARGE_CARD_ON_FILE",
        "SHARE_MANUALLY"
      ],
      "x-enum-elements": [
        {
          "name": "EMAIL",
          "description": "Directs Square to email the invoice to the customer after the invoice is published \n(either immediately or at the `scheduled_at` time, if specified in the `invoice`."
        },
        {
          "name": "CHARGE_CARD_ON_FILE",
          "description": "Directs Square to charge the card on file, on the `due_date`, specified in the payment request \nafter the invoice is published."
        },
        {
          "name": "SHARE_MANUALLY",
          "description": "Directs Square to take no specific action on the invoice. In this case, the seller \n(or the application developer) follows up with the customer for payment. For example, \na seller might collect a payment in the Seller Dashboard or use the Point of Sale (POS) application. \nThe seller might also share the URL of the Square-hosted invoice page (`public_url`) with the customer requesting payment."
        }
      ],
      "description": "Specifies the action for Square to take for processing the invoice. For example, \nemail the invoice, charge a customer\u0027s card on file, or do nothing.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoiceRequestType": {
      "type": "string",
      "enum": [
        "BALANCE",
        "DEPOSIT",
        "INSTALLMENT"
      ],
      "x-enum-elements": [
        {
          "name": "BALANCE",
          "description": "Identifies that the payment request is for the balance amount, after accounting for any \nother payment requests in the invoice: \n\n- If the invoice specifies only a balance payment request, it refers to the \ntotal amount identified by the associated order. \n- If the invoice also specifies a deposit request, the balance payment request refers to \nthe remaining amount.\n- `INSTALLMENT` and `BALANCE` are not allowed together."
        },
        {
          "name": "DEPOSIT",
          "description": "Identifies that the payment request is for a deposit. You have the option of specifying \nan exact amount or a percentage of the total order amount. If you request a deposit, \nit must be due before any other payment requests."
        },
        {
          "name": "INSTALLMENT",
          "description": "Identifies that the payment request is for an installment. An invoice can request payments in installments. \nAlong with installments, you can request an optional deposit. All these payment requests must add to the total order amount."
        }
      ],
      "description": "Identifies the type of the payment request. For more information, \nsee [Payment request](TBD).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoiceSortField": {
      "type": "string",
      "enum": [
        "INVOICE_SORT_DATE"
      ],
      "x-enum-elements": [
        {
          "name": "INVOICE_SORT_DATE",
          "description": "The field works as follows:\n\n- If the invoice is a draft, it uses the invoice `created_at` date.\n- If the invoice is scheduled for publication, it uses the `scheduled_at` date.\n- If the invoice is published, it uses the invoice publication date."
        }
      ],
      "description": "Field to use for sorting.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoiceStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "UNPAID",
        "SCHEDULED",
        "PARTIALLY_PAID",
        "PAID",
        "PARTIALLY_REFUNDED",
        "REFUNDED",
        "CANCELED",
        "FAILED"
      ],
      "x-enum-elements": [
        {
          "name": "DRAFT",
          "description": "The invoice is a draft. You must publish a draft invoice before Square can process it.\nA draft invoice has no public_url, so it is not available to customers."
        },
        {
          "name": "UNPAID",
          "description": "The invoice is published but not yet paid."
        },
        {
          "name": "SCHEDULED",
          "description": "The invoice is scheduled to be processed. On scheduled date,\nSquare emails the invoice (if the `request_method` is EMAIL),\ncharge the customer\u0027s card (if `request_method` is CHARGE_CARD_ON_FILE),\nor take no action (if the `request_method` is SHARE_MANUALLY).\nThe invoice status then changes accordingly (`UNPAID`, `PAID`, or `PARTIALLY_PAID`)."
        },
        {
          "name": "PARTIALLY_PAID",
          "description": "A partial payment is received for the invoice."
        },
        {
          "name": "PAID",
          "description": "The customer paid the invoice in full."
        },
        {
          "name": "PARTIALLY_REFUNDED",
          "description": "The invoice is paid (or partially paid) and some but not all the amount paid is\nrefunded."
        },
        {
          "name": "REFUNDED",
          "description": "The full amount that the customer paid for the invoice is refunded."
        },
        {
          "name": "CANCELED",
          "description": "The invoice is canceled. Square no longer requests payments from the customer.\nThe `public_url` page remains and is accessible, but it displays the invoice\nas cancelled and does not accept payment."
        },
        {
          "name": "FAILED",
          "description": "Square canceled the invoice due to suspicious activity."
        }
      ],
      "description": "Indicates the status of an invoice.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "JobAssignmentPayType": {
      "type": "string",
      "enum": [
        "NONE",
        "HOURLY",
        "SALARY"
      ],
      "x-enum-elements": [
        {
          "name": "NONE",
          "description": "The job does not have a defined pay type."
        },
        {
          "name": "HOURLY",
          "description": "The job pays on an hourly basis."
        },
        {
          "name": "SALARY",
          "description": "The job pays an annual salary."
        }
      ],
      "description": "Enumerates the possible pay types that a job can be assigned.",
      "x-release-status": "PUBLIC"
    },
    "LocationCapability": {
      "type": "string",
      "enum": [
        "CREDIT_CARD_PROCESSING"
      ],
      "x-enum-elements": [
        {
          "name": "CREDIT_CARD_PROCESSING",
          "description": "The permission to process credit card transactions with Square.\n\nThe location can process credit cards if this value is present\nin the `capabilities` array of the `Location`."
        }
      ],
      "description": "The capabilities a location may have.",
      "x-release-status": "PUBLIC"
    },
    "LocationStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": "A location that is active for business."
        },
        {
          "name": "INACTIVE",
          "description": "A location that is not active for business. Inactive locations just provide historical\ninformation, so typically clients limit interaction with or hide these locations."
        }
      ],
      "description": "The status of the location, whether a location is active or inactive.",
      "x-release-status": "PUBLIC"
    },
    "LocationType": {
      "type": "string",
      "enum": [
        "PHYSICAL",
        "MOBILE"
      ],
      "x-enum-elements": [
        {
          "name": "PHYSICAL",
          "description": "A place of business with a physical location."
        },
        {
          "name": "MOBILE",
          "description": "A place of business that is mobile, such as a food truck or online store."
        }
      ],
      "description": "A location\u0027s physical or mobile type.",
      "x-release-status": "PUBLIC"
    },
    "LoyaltyAccountMappingType": {
      "type": "string",
      "enum": [
        "PHONE"
      ],
      "x-enum-elements": [
        {
          "name": "PHONE",
          "description": "The loyalty account is mapped by phone."
        }
      ],
      "description": "The type of mapping.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventSource": {
      "type": "string",
      "enum": [
        "SQUARE",
        "LOYALTY_API"
      ],
      "x-enum-elements": [
        {
          "name": "SQUARE",
          "description": "The event is generated by the Square Point of Sale (POS)."
        },
        {
          "name": "LOYALTY_API",
          "description": "The event is generated by something other than the Square Point of Sale that used the Loyalty API."
        }
      ],
      "description": "Defines whether the event was generated by the Square Point of Sale.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventType": {
      "type": "string",
      "enum": [
        "ACCUMULATE_POINTS",
        "CREATE_REWARD",
        "REDEEM_REWARD",
        "DELETE_REWARD",
        "ADJUST_POINTS",
        "EXPIRE_POINTS",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "ACCUMULATE_POINTS",
          "description": "Points are added to a loyalty account for a purchase."
        },
        {
          "name": "CREATE_REWARD",
          "description": "A loyalty reward is created. For more information, see  \n[Loyalty rewards](https://developer.squareup.com/docs/docs/loyalty-api/overview/#loyalty-overview-loyalty-rewards)."
        },
        {
          "name": "REDEEM_REWARD",
          "description": "A loyalty reward is redeemed."
        },
        {
          "name": "DELETE_REWARD",
          "description": "A loyalty reward is deleted."
        },
        {
          "name": "ADJUST_POINTS",
          "description": "Loyalty points are manually adjusted."
        },
        {
          "name": "EXPIRE_POINTS",
          "description": "Loyalty points are expired according to the \nexpiration policy of the loyalty program."
        },
        {
          "name": "OTHER",
          "description": "Some other loyalty event occurred."
        }
      ],
      "description": "The type of the loyalty event.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgramAccrualRuleType": {
      "type": "string",
      "enum": [
        "VISIT",
        "SPEND",
        "ITEM_VARIATION",
        "CATEGORY"
      ],
      "x-enum-elements": [
        {
          "name": "VISIT",
          "description": "A visit-based accrual rule. A buyer earns points for each visit. \nYou can specify the minimum purchase required."
        },
        {
          "name": "SPEND",
          "description": "A spend-based accrual rule. A buyer earns points based on the amount \nspent."
        },
        {
          "name": "ITEM_VARIATION",
          "description": "An accrual rule based on an item variation. For example, accrue \npoints for purchasing a coffee."
        },
        {
          "name": "CATEGORY",
          "description": "An accrual rule based on an item category. For example, accrue points \nfor purchasing any item in the \"hot drink\" category: coffee, tea, or hot cocoa."
        }
      ],
      "description": "The type of the accrual rule that defines how buyers can earn points.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgramRewardDefinitionScope": {
      "type": "string",
      "enum": [
        "ORDER",
        "ITEM_VARIATION",
        "CATEGORY"
      ],
      "x-enum-elements": [
        {
          "name": "ORDER",
          "description": "The discount applies to the entire order."
        },
        {
          "name": "ITEM_VARIATION",
          "description": "The discount applies only to specific item variations."
        },
        {
          "name": "CATEGORY",
          "description": "The discount applies only to items in the given categories."
        }
      ],
      "description": "Indicates the scope of the reward tier.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgramRewardDefinitionType": {
      "type": "string",
      "enum": [
        "FIXED_AMOUNT",
        "FIXED_PERCENTAGE"
      ],
      "x-enum-elements": [
        {
          "name": "FIXED_AMOUNT",
          "description": "The fixed amount discounted."
        },
        {
          "name": "FIXED_PERCENTAGE",
          "description": "The fixed percentage discounted."
        }
      ],
      "description": "The type of discount the reward tier offers.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgramStatus": {
      "type": "string",
      "enum": [
        "INACTIVE",
        "ACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "INACTIVE",
          "description": "The loyalty program does not have an active subscription. \nLoyalty API requests fail."
        },
        {
          "name": "ACTIVE",
          "description": "The program is fully functional. The program has an active subscription."
        }
      ],
      "description": "Whether the program is currently active.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyRewardStatus": {
      "type": "string",
      "enum": [
        "ISSUED",
        "REDEEMED",
        "DELETED"
      ],
      "x-enum-elements": [
        {
          "name": "ISSUED",
          "description": "The reward is issued."
        },
        {
          "name": "REDEEMED",
          "description": "The reward is redeemed."
        },
        {
          "name": "DELETED",
          "description": "The reward is deleted."
        }
      ],
      "description": "The status of the loyalty reward.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MeasurementUnitArea": {
      "type": "string",
      "enum": [
        "IMPERIAL_ACRE",
        "IMPERIAL_SQUARE_INCH",
        "IMPERIAL_SQUARE_FOOT",
        "IMPERIAL_SQUARE_YARD",
        "IMPERIAL_SQUARE_MILE",
        "METRIC_SQUARE_CENTIMETER",
        "METRIC_SQUARE_METER",
        "METRIC_SQUARE_KILOMETER"
      ],
      "x-enum-elements": [
        {
          "name": "IMPERIAL_ACRE",
          "description": "The area is measured in acres."
        },
        {
          "name": "IMPERIAL_SQUARE_INCH",
          "description": "The area is measured in square inches."
        },
        {
          "name": "IMPERIAL_SQUARE_FOOT",
          "description": "The area is measured in square feet."
        },
        {
          "name": "IMPERIAL_SQUARE_YARD",
          "description": "The area is measured in square yards."
        },
        {
          "name": "IMPERIAL_SQUARE_MILE",
          "description": "The area is measured in square miles."
        },
        {
          "name": "METRIC_SQUARE_CENTIMETER",
          "description": "The area is measured in square centimeters."
        },
        {
          "name": "METRIC_SQUARE_METER",
          "description": "The area is measured in square meters."
        },
        {
          "name": "METRIC_SQUARE_KILOMETER",
          "description": "The area is measured in square kilometers."
        }
      ],
      "description": "Unit of area used to measure a quantity.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MeasurementUnitGeneric": {
      "type": "string",
      "enum": [
        "UNIT"
      ],
      "x-enum-elements": [
        {
          "name": "UNIT",
          "description": "The generic unit."
        }
      ],
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MeasurementUnitLength": {
      "type": "string",
      "enum": [
        "IMPERIAL_INCH",
        "IMPERIAL_FOOT",
        "IMPERIAL_YARD",
        "IMPERIAL_MILE",
        "METRIC_MILLIMETER",
        "METRIC_CENTIMETER",
        "METRIC_METER",
        "METRIC_KILOMETER"
      ],
      "x-enum-elements": [
        {
          "name": "IMPERIAL_INCH",
          "description": "The length is measured in inches."
        },
        {
          "name": "IMPERIAL_FOOT",
          "description": "The length is measured in feet."
        },
        {
          "name": "IMPERIAL_YARD",
          "description": "The length is measured in yards."
        },
        {
          "name": "IMPERIAL_MILE",
          "description": "The length is measured in miles."
        },
        {
          "name": "METRIC_MILLIMETER",
          "description": "The length is measured in millimeters."
        },
        {
          "name": "METRIC_CENTIMETER",
          "description": "The length is measured in centimeters."
        },
        {
          "name": "METRIC_METER",
          "description": "The length is measured in meters."
        },
        {
          "name": "METRIC_KILOMETER",
          "description": "The length is measured in kilometers."
        }
      ],
      "description": "The unit of length used to measure a quantity.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MeasurementUnitTime": {
      "type": "string",
      "enum": [
        "GENERIC_MILLISECOND",
        "GENERIC_SECOND",
        "GENERIC_MINUTE",
        "GENERIC_HOUR",
        "GENERIC_DAY"
      ],
      "x-enum-elements": [
        {
          "name": "GENERIC_MILLISECOND",
          "description": "The time is measured in milliseconds."
        },
        {
          "name": "GENERIC_SECOND",
          "description": "The time is measured in seconds."
        },
        {
          "name": "GENERIC_MINUTE",
          "description": "The time is measured in minutes."
        },
        {
          "name": "GENERIC_HOUR",
          "description": "The time is measured in hours."
        },
        {
          "name": "GENERIC_DAY",
          "description": "The time is measured in days."
        }
      ],
      "description": "Unit of time used to measure a quantity (a duration).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MeasurementUnitUnitType": {
      "type": "string",
      "enum": [
        "TYPE_CUSTOM",
        "TYPE_AREA",
        "TYPE_LENGTH",
        "TYPE_VOLUME",
        "TYPE_WEIGHT",
        "TYPE_GENERIC"
      ],
      "x-enum-elements": [
        {
          "name": "TYPE_CUSTOM",
          "description": "The unit details are contained in the custom_unit field."
        },
        {
          "name": "TYPE_AREA",
          "description": "The unit details are contained in the area_unit field."
        },
        {
          "name": "TYPE_LENGTH",
          "description": "The unit details are contained in the length_unit field."
        },
        {
          "name": "TYPE_VOLUME",
          "description": "The unit details are contained in the volume_unit field."
        },
        {
          "name": "TYPE_WEIGHT",
          "description": "The unit details are contained in the weight_unit field."
        },
        {
          "name": "TYPE_GENERIC",
          "description": "The unit details are contained in the generic_unit field."
        }
      ],
      "description": "Describes the type of this unit and indicates which field contains the unit information. This is an ‘open’ enum.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MeasurementUnitVolume": {
      "type": "string",
      "enum": [
        "GENERIC_FLUID_OUNCE",
        "GENERIC_SHOT",
        "GENERIC_CUP",
        "GENERIC_PINT",
        "GENERIC_QUART",
        "GENERIC_GALLON",
        "IMPERIAL_CUBIC_INCH",
        "IMPERIAL_CUBIC_FOOT",
        "IMPERIAL_CUBIC_YARD",
        "METRIC_MILLILITER",
        "METRIC_LITER"
      ],
      "x-enum-elements": [
        {
          "name": "GENERIC_FLUID_OUNCE",
          "description": "The volume is measured in ounces."
        },
        {
          "name": "GENERIC_SHOT",
          "description": "The volume is measured in shots."
        },
        {
          "name": "GENERIC_CUP",
          "description": "The volume is measured in cups."
        },
        {
          "name": "GENERIC_PINT",
          "description": "The volume is measured in pints."
        },
        {
          "name": "GENERIC_QUART",
          "description": "The volume is measured in quarts."
        },
        {
          "name": "GENERIC_GALLON",
          "description": "The volume is measured in gallons."
        },
        {
          "name": "IMPERIAL_CUBIC_INCH",
          "description": "The volume is measured in cubic inches."
        },
        {
          "name": "IMPERIAL_CUBIC_FOOT",
          "description": "The volume is measured in cubic feet."
        },
        {
          "name": "IMPERIAL_CUBIC_YARD",
          "description": "The volume is measured in cubic yards."
        },
        {
          "name": "METRIC_MILLILITER",
          "description": "The volume is measured in metric milliliters."
        },
        {
          "name": "METRIC_LITER",
          "description": "The volume is measured in metric liters."
        }
      ],
      "description": "The unit of volume used to measure a quantity.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MeasurementUnitWeight": {
      "type": "string",
      "enum": [
        "IMPERIAL_WEIGHT_OUNCE",
        "IMPERIAL_POUND",
        "IMPERIAL_STONE",
        "METRIC_MILLIGRAM",
        "METRIC_GRAM",
        "METRIC_KILOGRAM"
      ],
      "x-enum-elements": [
        {
          "name": "IMPERIAL_WEIGHT_OUNCE",
          "description": "The weight is measured in ounces."
        },
        {
          "name": "IMPERIAL_POUND",
          "description": "The weight is measured in pounds."
        },
        {
          "name": "IMPERIAL_STONE",
          "description": "The weight is measured in stones."
        },
        {
          "name": "METRIC_MILLIGRAM",
          "description": "The weight is measured in milligrams."
        },
        {
          "name": "METRIC_GRAM",
          "description": "The weight is measured in grams."
        },
        {
          "name": "METRIC_KILOGRAM",
          "description": "The weight is measured in kilograms."
        }
      ],
      "description": "Unit of weight used to measure a quantity.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MerchantStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": "A fully operational merchant account. The merchant can interact with Square products and APIs."
        },
        {
          "name": "INACTIVE",
          "description": "A functionally limited merchant account. The merchant can only have limited interaction\nvia Square APIs. The merchant cannot access the seller dashboard."
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "OrderFulfillmentPickupDetailsScheduleType": {
      "type": "string",
      "enum": [
        "SCHEDULED",
        "ASAP"
      ],
      "x-enum-elements": [
        {
          "name": "SCHEDULED",
          "description": "Indicates the fulfillment will be picked up at a scheduled pickup time."
        },
        {
          "name": "ASAP",
          "description": "Indicates the fulfillment will be picked up as soon as possible and\nshould be prepared immediately."
        }
      ],
      "description": "The schedule type of the pickup fulfillment.",
      "x-release-status": "PUBLIC"
    },
    "OrderFulfillmentState": {
      "type": "string",
      "enum": [
        "PROPOSED",
        "RESERVED",
        "PREPARED",
        "COMPLETED",
        "CANCELED",
        "FAILED"
      ],
      "x-enum-elements": [
        {
          "name": "PROPOSED",
          "description": "Indicates the fulfillment has been proposed."
        },
        {
          "name": "RESERVED",
          "description": "Indicates the fulfillment has been reserved."
        },
        {
          "name": "PREPARED",
          "description": "Indicates the fulfillment has been prepared."
        },
        {
          "name": "COMPLETED",
          "description": "Indicates the fulfillment was successfully completed."
        },
        {
          "name": "CANCELED",
          "description": "Indicates the fulfillment was canceled."
        },
        {
          "name": "FAILED",
          "description": "Indicates the fulfillment failed to be completed but was not explicitly\ncanceled."
        }
      ],
      "description": "The current state of this fulfillment.",
      "x-release-status": "PUBLIC"
    },
    "OrderFulfillmentType": {
      "type": "string",
      "enum": [
        "PICKUP",
        "SHIPMENT"
      ],
      "x-enum-elements": [
        {
          "name": "PICKUP",
          "description": "A fulfillment to be picked up from a physical `location`\nby a recipient."
        },
        {
          "name": "SHIPMENT",
          "description": "A fulfillment to be shipped by a shipping carrier."
        }
      ],
      "description": "The type of fulfillment.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemDiscountScope": {
      "type": "string",
      "enum": [
        "OTHER_DISCOUNT_SCOPE",
        "LINE_ITEM",
        "ORDER"
      ],
      "x-enum-elements": [
        {
          "name": "OTHER_DISCOUNT_SCOPE",
          "description": "Used for reporting only.\nThe original transaction discount scope is currently not supported by the API."
        },
        {
          "name": "LINE_ITEM",
          "description": "The discount should be applied to only line items specified by\n`OrderLineItemAppliedDiscount` reference records."
        },
        {
          "name": "ORDER",
          "description": "The discount should be applied to the entire order."
        }
      ],
      "description": "Indicates whether this is a line item or order level discount.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemDiscountType": {
      "type": "string",
      "enum": [
        "UNKNOWN_DISCOUNT",
        "FIXED_PERCENTAGE",
        "FIXED_AMOUNT",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN_DISCOUNT",
          "description": "Used for reporting only.\nThe original transaction discount type is currently not supported by the API."
        },
        {
          "name": "FIXED_PERCENTAGE",
          "description": "Apply the discount as a fixed percentage (e.g., 5%) off the item price."
        },
        {
          "name": "FIXED_AMOUNT",
          "description": "Apply the discount as a fixed monetary value (e.g., $1.00) off the item price."
        },
        {
          "name": "VARIABLE_PERCENTAGE",
          "description": "Apply the discount as a variable percentage based on the item\nprice.\n\nThe specific discount percentage of a `VARIABLE_PERCENTAGE` discount\nis assigned at the time of the purchase."
        },
        {
          "name": "VARIABLE_AMOUNT",
          "description": "Apply the discount as a variable amount based on the item price.\n\nThe specific discount amount of a `VARIABLE_AMOUNT` discount\nis assigned at the time of the purchase."
        }
      ],
      "description": "Indicates how the discount is applied to the associated line item or order.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemTaxScope": {
      "type": "string",
      "enum": [
        "OTHER_TAX_SCOPE",
        "LINE_ITEM",
        "ORDER"
      ],
      "x-enum-elements": [
        {
          "name": "OTHER_TAX_SCOPE",
          "description": "Used for reporting only.\nThe original transaction tax scope is currently not supported by the API."
        },
        {
          "name": "LINE_ITEM",
          "description": "The tax should be applied only to line items specified by\nthe `OrderLineItemAppliedTax` reference records."
        },
        {
          "name": "ORDER",
          "description": "The tax should be applied to the entire order."
        }
      ],
      "description": "Indicates whether this is a line item or order level tax.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemTaxType": {
      "type": "string",
      "enum": [
        "UNKNOWN_TAX",
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN_TAX",
          "description": "Used for reporting only.\nThe original transaction tax type is currently not supported by the API."
        },
        {
          "name": "ADDITIVE",
          "description": "The tax is an additive tax. The tax amount is added on top of the price.\nFor example, an item with a cost of 1.00 USD and a 10% additive tax would have a total\ncost to the buyer of 1.10 USD."
        },
        {
          "name": "INCLUSIVE",
          "description": "The tax is an inclusive tax. Inclusive taxes are already included\nin the line item price or order total. For example, an item with cost\n1.00 USD with a 10% inclusive tax would have a pre-tax cost of 0.91 USD\n(91 cents) and a 0.09 (9 cents) tax for a total cost of 1.00 USD to\nthe buyer."
        }
      ],
      "description": "Indicates how the tax is applied to the associated line item or order.",
      "x-release-status": "PUBLIC"
    },
    "OrderServiceChargeCalculationPhase": {
      "type": "string",
      "enum": [
        "SUBTOTAL_PHASE",
        "TOTAL_PHASE"
      ],
      "x-enum-elements": [
        {
          "name": "SUBTOTAL_PHASE",
          "description": "The service charge will be applied after discounts, but before\ntaxes."
        },
        {
          "name": "TOTAL_PHASE",
          "description": "The service charge will be applied after all discounts and taxes\nare applied."
        }
      ],
      "description": "Represents a phase in the process of calculating order totals.\nService charges are applied __after__ the indicated phase.\n\n[Read more about how order totals are calculated.](https://developer.squareup.com/docs/docs/orders-api/how-it-works#how-totals-are-calculated)",
      "x-release-status": "PUBLIC"
    },
    "OrderState": {
      "type": "string",
      "enum": [
        "OPEN",
        "COMPLETED",
        "CANCELED"
      ],
      "x-enum-elements": [
        {
          "name": "OPEN",
          "description": "Indicates the order is open. Open orders may be updated."
        },
        {
          "name": "COMPLETED",
          "description": "Indicates the order is completed. Completed orders are fully paid. This is a terminal state."
        },
        {
          "name": "CANCELED",
          "description": "Indicates the order is canceled. Canceled orders are not paid. This is a terminal state."
        }
      ],
      "description": "The state of the order.",
      "x-release-status": "PUBLIC"
    },
    "Product": {
      "type": "string",
      "enum": [
        "SQUARE_POS",
        "EXTERNAL_API",
        "BILLING",
        "APPOINTMENTS",
        "INVOICES",
        "ONLINE_STORE",
        "PAYROLL",
        "DASHBOARD",
        "ITEM_LIBRARY_IMPORT",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "SQUARE_POS",
          "description": "Square Point of Sale application."
        },
        {
          "name": "EXTERNAL_API",
          "description": "Square Connect APIs (Transactions API, Checkout API)."
        },
        {
          "name": "BILLING",
          "description": "A Square subscription (various products)."
        },
        {
          "name": "APPOINTMENTS",
          "description": "Square Appointments."
        },
        {
          "name": "INVOICES",
          "description": "Square Invoices."
        },
        {
          "name": "ONLINE_STORE",
          "description": "Square Online Store."
        },
        {
          "name": "PAYROLL",
          "description": "Square Payroll."
        },
        {
          "name": "DASHBOARD",
          "description": "Square Dashboard"
        },
        {
          "name": "ITEM_LIBRARY_IMPORT",
          "description": "Item Library Import"
        },
        {
          "name": "OTHER",
          "description": "A Square product that does not match any other value."
        }
      ],
      "description": "Indicates the Square product used to generate an inventory change.",
      "x-release-status": "PUBLIC"
    },
    "ProductType": {
      "type": "string",
      "enum": [
        "TERMINAL_API"
      ],
      "x-enum-elements": [
        {
          "name": "TERMINAL_API",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "RefundStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "APPROVED",
        "REJECTED",
        "FAILED"
      ],
      "x-enum-elements": [
        {
          "name": "PENDING",
          "description": "The refund is pending."
        },
        {
          "name": "APPROVED",
          "description": "The refund has been approved by Square."
        },
        {
          "name": "REJECTED",
          "description": "The refund has been rejected by Square."
        },
        {
          "name": "FAILED",
          "description": "The refund failed."
        }
      ],
      "description": "Indicates a refund\u0027s current status.",
      "x-release-status": "PUBLIC"
    },
    "RegisterDomainResponseStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "VERIFIED"
      ],
      "x-enum-elements": [
        {
          "name": "PENDING",
          "description": "The domain is added, but not verified."
        },
        {
          "name": "VERIFIED",
          "description": "The domain is added and verified. It can be used to accept Apple Pay transactions."
        }
      ],
      "description": "The status of domain registration.",
      "x-release-status": "PUBLIC"
    },
    "SearchCatalogItemsRequestStockLevel": {
      "type": "string",
      "enum": [
        "OUT",
        "LOW"
      ],
      "x-enum-elements": [
        {
          "name": "OUT",
          "description": "The item inventory is empty."
        },
        {
          "name": "LOW",
          "description": "The item inventory is low."
        }
      ],
      "description": "Defines supported stock levels of the item inventory.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SearchOrdersSortField": {
      "type": "string",
      "enum": [
        "CREATED_AT",
        "UPDATED_AT",
        "CLOSED_AT"
      ],
      "x-enum-elements": [
        {
          "name": "CREATED_AT",
          "description": "Time when the order was created in RFC-3339 format. If you are also\nfiltering for a time range in this query, you must set the `CREATED_AT`\nfield in your DateTimeFilter."
        },
        {
          "name": "UPDATED_AT",
          "description": "Time when the order last updated in RFC-3339 format. If you are also\nfiltering for a time range in this query, you must set the `UPDATED_AT`\nfield in your DateTimeFilter."
        },
        {
          "name": "CLOSED_AT",
          "description": "Time when the order was closed in RFC-3339 format. If you use this\nvalue, you must also set a StateFilter with closed states. If you are also\nfiltering for a time range in this query, you must set the `CLOSED_AT`\nfield in your DateTimeFilter."
        }
      ],
      "description": "Specifies which timestamp to use to sort SearchOrder results.",
      "x-release-status": "PUBLIC"
    },
    "ShiftFilterStatus": {
      "type": "string",
      "enum": [
        "OPEN",
        "CLOSED"
      ],
      "x-enum-elements": [
        {
          "name": "OPEN",
          "description": "Shifts that have been started and not ended."
        },
        {
          "name": "CLOSED",
          "description": "Shifts that have been started and ended."
        }
      ],
      "description": "Specifies the `status` of `Shift` records to be returned.",
      "x-release-status": "PUBLIC"
    },
    "ShiftSortField": {
      "type": "string",
      "enum": [
        "START_AT",
        "END_AT",
        "CREATED_AT",
        "UPDATED_AT"
      ],
      "x-enum-elements": [
        {
          "name": "START_AT",
          "description": "The start date/time of a `Shift`"
        },
        {
          "name": "END_AT",
          "description": "The end date/time of a `Shift`"
        },
        {
          "name": "CREATED_AT",
          "description": "The date/time that a `Shift` is created"
        },
        {
          "name": "UPDATED_AT",
          "description": "The most recent date/time that a `Shift` is updated"
        }
      ],
      "description": "Enumerates the `Shift` fields to sort on.",
      "x-release-status": "PUBLIC"
    },
    "ShiftStatus": {
      "type": "string",
      "enum": [
        "OPEN",
        "CLOSED"
      ],
      "x-enum-elements": [
        {
          "name": "OPEN",
          "description": "Employee started a work shift and the shift is not complete"
        },
        {
          "name": "CLOSED",
          "description": "Employee started and ended a work shift."
        }
      ],
      "description": "Enumerates the possible status of a `Shift`",
      "x-release-status": "PUBLIC"
    },
    "ShiftWorkdayMatcher": {
      "type": "string",
      "enum": [
        "START_AT",
        "END_AT",
        "INTERSECTION"
      ],
      "x-enum-elements": [
        {
          "name": "START_AT",
          "description": "All shifts that start on or after the specified workday"
        },
        {
          "name": "END_AT",
          "description": "All shifts that end on or before the specified workday"
        },
        {
          "name": "INTERSECTION",
          "description": "All shifts that start between the start and end workdays (inclusive)"
        }
      ],
      "description": "Defines the logic used to apply a workday filter.",
      "x-release-status": "PUBLIC"
    },
    "SortOrder": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "x-enum-elements": [
        {
          "name": "DESC",
          "description": "The results are returned in descending (e.g., newest-first or Z-A) order."
        },
        {
          "name": "ASC",
          "description": "The results are returned in ascending (e.g., oldest-first or A-Z) order."
        }
      ],
      "description": "The order (e.g., chronological or alphabetical) in which results from a request are returned.",
      "x-release-status": "PUBLIC"
    },
    "SubscriptionCadence": {
      "type": "string",
      "enum": [
        "DAILY",
        "WEEKLY",
        "EVERY_TWO_WEEKS",
        "THIRTY_DAYS",
        "SIXTY_DAYS",
        "NINETY_DAYS",
        "MONTHLY",
        "EVERY_TWO_MONTHS",
        "QUARTERLY",
        "EVERY_FOUR_MONTHS",
        "EVERY_SIX_MONTHS",
        "ANNUAL",
        "EVERY_TWO_YEARS"
      ],
      "x-enum-elements": [
        {
          "name": "DAILY",
          "description": "Once per day"
        },
        {
          "name": "WEEKLY",
          "description": "Once per week"
        },
        {
          "name": "EVERY_TWO_WEEKS",
          "description": "Every two weeks"
        },
        {
          "name": "THIRTY_DAYS",
          "description": "Once every 30 days"
        },
        {
          "name": "SIXTY_DAYS",
          "description": "Once every 60 days"
        },
        {
          "name": "NINETY_DAYS",
          "description": "Once every 90 days"
        },
        {
          "name": "MONTHLY",
          "description": "Once per month"
        },
        {
          "name": "EVERY_TWO_MONTHS",
          "description": "Once every two months"
        },
        {
          "name": "QUARTERLY",
          "description": "Once every three months"
        },
        {
          "name": "EVERY_FOUR_MONTHS",
          "description": "Once every four months"
        },
        {
          "name": "EVERY_SIX_MONTHS",
          "description": "Once every six months"
        },
        {
          "name": "ANNUAL",
          "description": "Once per year"
        },
        {
          "name": "EVERY_TWO_YEARS",
          "description": "Once every two years"
        }
      ],
      "description": "Determines the billing cadence of a `Subscription`",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SubscriptionEventSubscriptionEventType": {
      "type": "string",
      "enum": [
        "START_SUBSCRIPTION",
        "PLAN_CHANGE",
        "STOP_SUBSCRIPTION"
      ],
      "x-enum-elements": [
        {
          "name": "START_SUBSCRIPTION",
          "description": "The subscription started."
        },
        {
          "name": "PLAN_CHANGE",
          "description": "The subscription plan changed."
        },
        {
          "name": "STOP_SUBSCRIPTION",
          "description": "The subscription stopped."
        }
      ],
      "description": "The possible subscription event types.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SubscriptionStatus": {
      "type": "string",
      "enum": [
        "DEFAULT_SUBSCRIPTION_STATUS_DO_NOT_USE",
        "PENDING",
        "ACTIVE",
        "CANCELED"
      ],
      "x-enum-elements": [
        {
          "name": "DEFAULT_SUBSCRIPTION_STATUS_DO_NOT_USE",
          "description": ""
        },
        {
          "name": "PENDING",
          "description": "The subscription starts in the future."
        },
        {
          "name": "ACTIVE",
          "description": "The subscription is active."
        },
        {
          "name": "CANCELED",
          "description": "The subscription is canceled."
        }
      ],
      "description": "Possible subscription status values.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "TaxCalculationPhase": {
      "type": "string",
      "enum": [
        "TAX_SUBTOTAL_PHASE",
        "TAX_TOTAL_PHASE"
      ],
      "x-enum-elements": [
        {
          "name": "TAX_SUBTOTAL_PHASE",
          "description": "The fee is calculated based on the payment\u0027s subtotal."
        },
        {
          "name": "TAX_TOTAL_PHASE",
          "description": "The fee is calculated based on the payment\u0027s total."
        }
      ],
      "description": "When to calculate the taxes due on a cart.",
      "x-release-status": "PUBLIC"
    },
    "TaxInclusionType": {
      "type": "string",
      "enum": [
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ADDITIVE",
          "description": "The tax is an additive tax. The tax amount is added on top of the\nCatalogItemVariation price. For example, a $1.00 item with a 10% additive\ntax would have a total cost to the buyer of $1.10."
        },
        {
          "name": "INCLUSIVE",
          "description": "The tax is an inclusive tax. The tax amount is included in the\nCatalogItemVariation price. For example, a $1.00 item with a 10% inclusive\ntax would have a total cost to the buyer of $1.00, with $0.91 (91 cents) of\nthat total being the cost of the item and $0.09 (9 cents) being tax."
        }
      ],
      "description": "Whether to the tax amount should be additional to or included in the CatalogItem price.",
      "x-release-status": "PUBLIC"
    },
    "TeamMemberAssignedLocationsAssignmentType": {
      "type": "string",
      "enum": [
        "ALL_CURRENT_AND_FUTURE_LOCATIONS",
        "EXPLICIT_LOCATIONS"
      ],
      "x-enum-elements": [
        {
          "name": "ALL_CURRENT_AND_FUTURE_LOCATIONS",
          "description": "The team member is assigned to all curent and future locations - the location_ids field\nis empty if the team member has this assignment type."
        },
        {
          "name": "EXPLICIT_LOCATIONS",
          "description": "The team member is assigned to an explicit subset of locations - the location_ids field\nis the list of locations that the team member is assigned to."
        }
      ],
      "description": "Enumerates the possible assignment types the team member can have",
      "x-release-status": "PUBLIC"
    },
    "TeamMemberStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": "The team member can log in to Point of Sale and Dashboard."
        },
        {
          "name": "INACTIVE",
          "description": "The team member can no longer log in to Point of Sale or Dashboard,\nbut their sales reports remain available."
        }
      ],
      "description": "Enumerates the possible statuses the team member can have within a business.",
      "x-release-status": "PUBLIC"
    },
    "TenderCardDetailsEntryMethod": {
      "type": "string",
      "enum": [
        "SWIPED",
        "KEYED",
        "EMV",
        "ON_FILE",
        "CONTACTLESS"
      ],
      "x-enum-elements": [
        {
          "name": "SWIPED",
          "description": "The card was swiped through a Square reader or Square stand."
        },
        {
          "name": "KEYED",
          "description": "The card information was keyed manually into Square Point of Sale or a\nSquare-hosted web form."
        },
        {
          "name": "EMV",
          "description": "The card was processed via EMV with a Square reader."
        },
        {
          "name": "ON_FILE",
          "description": "The buyer\u0027s card details were already on file with Square."
        },
        {
          "name": "CONTACTLESS",
          "description": "The card was processed via a contactless (i.e., NFC) transaction\nwith a Square reader."
        }
      ],
      "description": "Indicates the method used to enter the card\u0027s details.",
      "x-release-status": "PUBLIC"
    },
    "TenderCardDetailsStatus": {
      "type": "string",
      "enum": [
        "AUTHORIZED",
        "CAPTURED",
        "VOIDED",
        "FAILED"
      ],
      "x-enum-elements": [
        {
          "name": "AUTHORIZED",
          "description": "The card transaction has been authorized but not yet captured."
        },
        {
          "name": "CAPTURED",
          "description": "The card transaction was authorized and subsequently captured (i.e., completed)."
        },
        {
          "name": "VOIDED",
          "description": "The card transaction was authorized and subsequently voided (i.e., canceled)."
        },
        {
          "name": "FAILED",
          "description": "The card transaction failed."
        }
      ],
      "description": "Indicates the card transaction\u0027s current status.",
      "x-release-status": "PUBLIC"
    },
    "TenderType": {
      "type": "string",
      "enum": [
        "CARD",
        "CASH",
        "THIRD_PARTY_CARD",
        "SQUARE_GIFT_CARD",
        "NO_SALE",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "CARD",
          "description": "A credit card."
        },
        {
          "name": "CASH",
          "description": "Cash."
        },
        {
          "name": "THIRD_PARTY_CARD",
          "description": "A credit card processed with a card processor other than Square.\n\nThis value applies only to merchants in countries where Square does not\nyet provide card processing."
        },
        {
          "name": "SQUARE_GIFT_CARD",
          "description": "A Square gift card."
        },
        {
          "name": "NO_SALE",
          "description": "This tender represents the register being opened for a \"no sale\" event."
        },
        {
          "name": "OTHER",
          "description": "A form of tender that does not match any other value."
        }
      ],
      "description": "Indicates a tender\u0027s type.",
      "x-release-status": "PUBLIC"
    },
    "TransactionProduct": {
      "type": "string",
      "enum": [
        "REGISTER",
        "EXTERNAL_API",
        "BILLING",
        "APPOINTMENTS",
        "INVOICES",
        "ONLINE_STORE",
        "PAYROLL",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "REGISTER",
          "description": "Square Point of Sale."
        },
        {
          "name": "EXTERNAL_API",
          "description": "The Square Connect API."
        },
        {
          "name": "BILLING",
          "description": "A Square subscription for one of multiple products."
        },
        {
          "name": "APPOINTMENTS",
          "description": "Square Appointments."
        },
        {
          "name": "INVOICES",
          "description": "Square Invoices."
        },
        {
          "name": "ONLINE_STORE",
          "description": "Square Online Store."
        },
        {
          "name": "PAYROLL",
          "description": "Square Payroll."
        },
        {
          "name": "OTHER",
          "description": "A Square product that does not match any other value."
        }
      ],
      "description": "Indicates the Square product used to process a transaction.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "TransactionType": {
      "type": "string",
      "enum": [
        "DEBIT",
        "CREDIT"
      ],
      "x-enum-elements": [
        {
          "name": "DEBIT",
          "description": ""
        },
        {
          "name": "CREDIT",
          "description": ""
        }
      ],
      "description": "Transaction type used in the disputed payment.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "V1AdjustInventoryRequestAdjustmentType": {
      "type": "string",
      "enum": [
        "SALE",
        "RECEIVE_STOCK",
        "MANUAL_ADJUST"
      ],
      "x-enum-elements": [
        {
          "name": "SALE",
          "description": ""
        },
        {
          "name": "RECEIVE_STOCK",
          "description": ""
        },
        {
          "name": "MANUAL_ADJUST",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1BankAccountType": {
      "type": "string",
      "enum": [
        "BUSINESS_CHECKING",
        "CHECKING",
        "INVESTMENT",
        "LOAN",
        "SAVINGS",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "BUSINESS_CHECKING",
          "description": ""
        },
        {
          "name": "CHECKING",
          "description": ""
        },
        {
          "name": "INVESTMENT",
          "description": ""
        },
        {
          "name": "LOAN",
          "description": ""
        },
        {
          "name": "SAVINGS",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CashDrawerEventEventType": {
      "type": "string",
      "enum": [
        "NO_SALE",
        "CASH_TENDER_PAYMENT",
        "OTHER_TENDER_PAYMENT",
        "CASH_TENDER_CANCELED_PAYMENT",
        "OTHER_TENDER_CANCELED_PAYMENT",
        "CASH_TENDER_REFUND",
        "OTHER_TENDER_REFUND",
        "PAID_IN",
        "PAID_OUT"
      ],
      "x-enum-elements": [
        {
          "name": "NO_SALE",
          "description": ""
        },
        {
          "name": "CASH_TENDER_PAYMENT",
          "description": ""
        },
        {
          "name": "OTHER_TENDER_PAYMENT",
          "description": ""
        },
        {
          "name": "CASH_TENDER_CANCELED_PAYMENT",
          "description": ""
        },
        {
          "name": "OTHER_TENDER_CANCELED_PAYMENT",
          "description": ""
        },
        {
          "name": "CASH_TENDER_REFUND",
          "description": ""
        },
        {
          "name": "OTHER_TENDER_REFUND",
          "description": ""
        },
        {
          "name": "PAID_IN",
          "description": ""
        },
        {
          "name": "PAID_OUT",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CashDrawerShiftEventType": {
      "type": "string",
      "enum": [
        "OPEN",
        "ENDED",
        "CLOSED"
      ],
      "x-enum-elements": [
        {
          "name": "OPEN",
          "description": ""
        },
        {
          "name": "ENDED",
          "description": ""
        },
        {
          "name": "CLOSED",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CreateRefundRequestType": {
      "type": "string",
      "enum": [
        "FULL",
        "PARTIAL"
      ],
      "x-enum-elements": [
        {
          "name": "FULL",
          "description": ""
        },
        {
          "name": "PARTIAL",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1DiscountColor": {
      "type": "string",
      "enum": [
        "9da2a6",
        "4ab200",
        "0b8000",
        "2952cc",
        "a82ee5",
        "e5457a",
        "b21212",
        "593c00",
        "e5BF00"
      ],
      "x-enum-elements": [
        {
          "name": "9da2a6",
          "description": ""
        },
        {
          "name": "4ab200",
          "description": ""
        },
        {
          "name": "0b8000",
          "description": ""
        },
        {
          "name": "2952cc",
          "description": ""
        },
        {
          "name": "a82ee5",
          "description": ""
        },
        {
          "name": "e5457a",
          "description": ""
        },
        {
          "name": "b21212",
          "description": ""
        },
        {
          "name": "593c00",
          "description": ""
        },
        {
          "name": "e5BF00",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DiscountDiscountType": {
      "type": "string",
      "enum": [
        "FIXED",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "x-enum-elements": [
        {
          "name": "FIXED",
          "description": ""
        },
        {
          "name": "VARIABLE_PERCENTAGE",
          "description": ""
        },
        {
          "name": "VARIABLE_AMOUNT",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1EmployeeRolePermissions": {
      "type": "string",
      "enum": [
        "REGISTER_ACCESS_SALES_HISTORY",
        "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
        "REGISTER_CHANGE_SETTINGS",
        "REGISTER_EDIT_ITEM",
        "REGISTER_ISSUE_REFUNDS",
        "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
        "REGISTER_VIEW_SUMMARY_REPORTS"
      ],
      "x-enum-elements": [
        {
          "name": "REGISTER_ACCESS_SALES_HISTORY",
          "description": ""
        },
        {
          "name": "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
          "description": ""
        },
        {
          "name": "REGISTER_CHANGE_SETTINGS",
          "description": ""
        },
        {
          "name": "REGISTER_EDIT_ITEM",
          "description": ""
        },
        {
          "name": "REGISTER_ISSUE_REFUNDS",
          "description": ""
        },
        {
          "name": "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
          "description": ""
        },
        {
          "name": "REGISTER_VIEW_SUMMARY_REPORTS",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1EmployeeStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": ""
        },
        {
          "name": "INACTIVE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1FeeAdjustmentType": {
      "type": "string",
      "enum": [
        "TAX"
      ],
      "x-enum-elements": [
        {
          "name": "TAX",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1FeeCalculationPhase": {
      "type": "string",
      "enum": [
        "FEE_SUBTOTAL_PHASE",
        "OTHER",
        "FEE_TOTAL_PHASE"
      ],
      "x-enum-elements": [
        {
          "name": "FEE_SUBTOTAL_PHASE",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        },
        {
          "name": "FEE_TOTAL_PHASE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1FeeInclusionType": {
      "type": "string",
      "enum": [
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ADDITIVE",
          "description": ""
        },
        {
          "name": "INCLUSIVE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1FeeType": {
      "type": "string",
      "enum": [
        "CA_GST",
        "CA_HST",
        "CA_PST",
        "CA_QST",
        "JP_CONSUMPTION_TAX",
        "CA_PEI_PST",
        "US_SALES_TAX",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "CA_GST",
          "description": ""
        },
        {
          "name": "CA_HST",
          "description": ""
        },
        {
          "name": "CA_PST",
          "description": ""
        },
        {
          "name": "CA_QST",
          "description": ""
        },
        {
          "name": "JP_CONSUMPTION_TAX",
          "description": ""
        },
        {
          "name": "CA_PEI_PST",
          "description": ""
        },
        {
          "name": "US_SALES_TAX",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ItemColor": {
      "type": "string",
      "enum": [
        "9da2a6",
        "4ab200",
        "0b8000",
        "2952cc",
        "a82ee5",
        "e5457a",
        "b21212",
        "593c00",
        "e5BF00"
      ],
      "x-enum-elements": [
        {
          "name": "9da2a6",
          "description": ""
        },
        {
          "name": "4ab200",
          "description": ""
        },
        {
          "name": "0b8000",
          "description": ""
        },
        {
          "name": "2952cc",
          "description": ""
        },
        {
          "name": "a82ee5",
          "description": ""
        },
        {
          "name": "e5457a",
          "description": ""
        },
        {
          "name": "b21212",
          "description": ""
        },
        {
          "name": "593c00",
          "description": ""
        },
        {
          "name": "e5BF00",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ItemType": {
      "type": "string",
      "enum": [
        "NORMAL",
        "GIFT_CARD",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "NORMAL",
          "description": ""
        },
        {
          "name": "GIFT_CARD",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ItemVisibility": {
      "type": "string",
      "enum": [
        "PUBLIC",
        "PRIVATE"
      ],
      "x-enum-elements": [
        {
          "name": "PUBLIC",
          "description": ""
        },
        {
          "name": "PRIVATE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListEmployeesRequestStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ACTIVE",
          "description": ""
        },
        {
          "name": "INACTIVE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListSettlementsRequestStatus": {
      "type": "string",
      "enum": [
        "SENT",
        "FAILED"
      ],
      "x-enum-elements": [
        {
          "name": "SENT",
          "description": ""
        },
        {
          "name": "FAILED",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1MerchantAccountType": {
      "type": "string",
      "enum": [
        "LOCATION",
        "BUSINESS"
      ],
      "x-enum-elements": [
        {
          "name": "LOCATION",
          "description": ""
        },
        {
          "name": "BUSINESS",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1MerchantBusinessType": {
      "type": "string",
      "enum": [
        "ACCOUNTING",
        "APPAREL_AND_ACCESSORY_SHOPS",
        "ART_DEALERS_GALLERIES",
        "ART_DESIGN_AND_PHOTOGRAPHY",
        "BAR_CLUB_LOUNGE",
        "BEAUTY_AND_BARBER_SHOPS",
        "BOOK_STORES",
        "BUSINESS_SERVICES",
        "CATERING",
        "CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS",
        "CHARITIBLE_ORGS",
        "CLEANING_SERVICES",
        "COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES",
        "CONSULTANT",
        "CONTRACTORS",
        "DELIVERY_SERVICES",
        "DENTISTRY",
        "EDUCATION",
        "FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS",
        "FOOD_TRUCK_CART",
        "FURNITURE_HOME_AND_OFFICE_EQUIPMENT",
        "FURNITURE_HOME_GOODS",
        "HOTELS_AND_LODGING",
        "INDIVIDUAL_USE",
        "JEWELRY_AND_WATCHES",
        "LANDSCAPING_AND_HORTICULTURAL_SERVICES",
        "LANGUAGE_SCHOOLS",
        "LEGAL_SERVICES",
        "MEDICAL_PRACTITIONERS",
        "MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS",
        "MEMBERSHIP_ORGANIZATIONS",
        "MUSIC_AND_ENTERTAINMENT",
        "OTHER",
        "OUTDOOR_MARKETS",
        "PERSONAL_SERVICES",
        "POLITICAL_ORGANIZATIONS",
        "PROFESSIONAL_SERVICES",
        "REAL_ESTATE",
        "RECREATION_SERVICES",
        "REPAIR_SHOPS_AND_RELATED_SERVICES",
        "RESTAURANTS",
        "RETAIL_SHOPS",
        "SCHOOLS_AND_EDUCATIONAL_SERVICES",
        "SPORTING_GOODS",
        "TAXICABS_AND_LIMOUSINES",
        "TICKET_SALES",
        "TOURISM",
        "TRAVEL_TOURISM",
        "VETERINARY_SERVICES",
        "WEB_DEV_DESIGN"
      ],
      "x-enum-elements": [
        {
          "name": "ACCOUNTING",
          "description": ""
        },
        {
          "name": "APPAREL_AND_ACCESSORY_SHOPS",
          "description": ""
        },
        {
          "name": "ART_DEALERS_GALLERIES",
          "description": ""
        },
        {
          "name": "ART_DESIGN_AND_PHOTOGRAPHY",
          "description": ""
        },
        {
          "name": "BAR_CLUB_LOUNGE",
          "description": ""
        },
        {
          "name": "BEAUTY_AND_BARBER_SHOPS",
          "description": ""
        },
        {
          "name": "BOOK_STORES",
          "description": ""
        },
        {
          "name": "BUSINESS_SERVICES",
          "description": ""
        },
        {
          "name": "CATERING",
          "description": ""
        },
        {
          "name": "CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS",
          "description": ""
        },
        {
          "name": "CHARITIBLE_ORGS",
          "description": ""
        },
        {
          "name": "CLEANING_SERVICES",
          "description": ""
        },
        {
          "name": "COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES",
          "description": ""
        },
        {
          "name": "CONSULTANT",
          "description": ""
        },
        {
          "name": "CONTRACTORS",
          "description": ""
        },
        {
          "name": "DELIVERY_SERVICES",
          "description": ""
        },
        {
          "name": "DENTISTRY",
          "description": ""
        },
        {
          "name": "EDUCATION",
          "description": ""
        },
        {
          "name": "FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS",
          "description": ""
        },
        {
          "name": "FOOD_TRUCK_CART",
          "description": ""
        },
        {
          "name": "FURNITURE_HOME_AND_OFFICE_EQUIPMENT",
          "description": ""
        },
        {
          "name": "FURNITURE_HOME_GOODS",
          "description": ""
        },
        {
          "name": "HOTELS_AND_LODGING",
          "description": ""
        },
        {
          "name": "INDIVIDUAL_USE",
          "description": ""
        },
        {
          "name": "JEWELRY_AND_WATCHES",
          "description": ""
        },
        {
          "name": "LANDSCAPING_AND_HORTICULTURAL_SERVICES",
          "description": ""
        },
        {
          "name": "LANGUAGE_SCHOOLS",
          "description": ""
        },
        {
          "name": "LEGAL_SERVICES",
          "description": ""
        },
        {
          "name": "MEDICAL_PRACTITIONERS",
          "description": ""
        },
        {
          "name": "MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS",
          "description": ""
        },
        {
          "name": "MEMBERSHIP_ORGANIZATIONS",
          "description": ""
        },
        {
          "name": "MUSIC_AND_ENTERTAINMENT",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        },
        {
          "name": "OUTDOOR_MARKETS",
          "description": ""
        },
        {
          "name": "PERSONAL_SERVICES",
          "description": ""
        },
        {
          "name": "POLITICAL_ORGANIZATIONS",
          "description": ""
        },
        {
          "name": "PROFESSIONAL_SERVICES",
          "description": ""
        },
        {
          "name": "REAL_ESTATE",
          "description": ""
        },
        {
          "name": "RECREATION_SERVICES",
          "description": ""
        },
        {
          "name": "REPAIR_SHOPS_AND_RELATED_SERVICES",
          "description": ""
        },
        {
          "name": "RESTAURANTS",
          "description": ""
        },
        {
          "name": "RETAIL_SHOPS",
          "description": ""
        },
        {
          "name": "SCHOOLS_AND_EDUCATIONAL_SERVICES",
          "description": ""
        },
        {
          "name": "SPORTING_GOODS",
          "description": ""
        },
        {
          "name": "TAXICABS_AND_LIMOUSINES",
          "description": ""
        },
        {
          "name": "TICKET_SALES",
          "description": ""
        },
        {
          "name": "TOURISM",
          "description": ""
        },
        {
          "name": "TRAVEL_TOURISM",
          "description": ""
        },
        {
          "name": "VETERINARY_SERVICES",
          "description": ""
        },
        {
          "name": "WEB_DEV_DESIGN",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ModifierListSelectionType": {
      "type": "string",
      "enum": [
        "SINGLE",
        "MULTIPLE"
      ],
      "x-enum-elements": [
        {
          "name": "SINGLE",
          "description": ""
        },
        {
          "name": "MULTIPLE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1OrderHistoryEntryAction": {
      "type": "string",
      "enum": [
        "ORDER_PLACED",
        "DECLINED",
        "PAYMENT_RECEIVED",
        "CANCELED",
        "COMPLETED",
        "REFUNDED",
        "EXPIRED"
      ],
      "x-enum-elements": [
        {
          "name": "ORDER_PLACED",
          "description": ""
        },
        {
          "name": "DECLINED",
          "description": ""
        },
        {
          "name": "PAYMENT_RECEIVED",
          "description": ""
        },
        {
          "name": "CANCELED",
          "description": ""
        },
        {
          "name": "COMPLETED",
          "description": ""
        },
        {
          "name": "REFUNDED",
          "description": ""
        },
        {
          "name": "EXPIRED",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1OrderState": {
      "type": "string",
      "enum": [
        "PENDING",
        "OPEN",
        "COMPLETED",
        "CANCELED",
        "REFUNDED",
        "REJECTED"
      ],
      "x-enum-elements": [
        {
          "name": "PENDING",
          "description": ""
        },
        {
          "name": "OPEN",
          "description": ""
        },
        {
          "name": "COMPLETED",
          "description": ""
        },
        {
          "name": "CANCELED",
          "description": ""
        },
        {
          "name": "REFUNDED",
          "description": ""
        },
        {
          "name": "REJECTED",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1PageCellObjectType": {
      "type": "string",
      "enum": [
        "ITEM",
        "DISCOUNT",
        "CATEGORY",
        "PLACEHOLDER"
      ],
      "x-enum-elements": [
        {
          "name": "ITEM",
          "description": ""
        },
        {
          "name": "DISCOUNT",
          "description": ""
        },
        {
          "name": "CATEGORY",
          "description": ""
        },
        {
          "name": "PLACEHOLDER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1PageCellPlaceholderType": {
      "type": "string",
      "enum": [
        "ALL_ITEMS",
        "DISCOUNTS_CATEGORY",
        "REWARDS_FINDER"
      ],
      "x-enum-elements": [
        {
          "name": "ALL_ITEMS",
          "description": ""
        },
        {
          "name": "DISCOUNTS_CATEGORY",
          "description": ""
        },
        {
          "name": "REWARDS_FINDER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1PaymentItemizationItemizationType": {
      "type": "string",
      "enum": [
        "ITEM",
        "CUSTOM_AMOUNT",
        "GIFT_CARD_ACTIVATION",
        "GIFT_CARD_RELOAD",
        "GIFT_CARD_UNKNOWN",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "ITEM",
          "description": ""
        },
        {
          "name": "CUSTOM_AMOUNT",
          "description": ""
        },
        {
          "name": "GIFT_CARD_ACTIVATION",
          "description": ""
        },
        {
          "name": "GIFT_CARD_RELOAD",
          "description": ""
        },
        {
          "name": "GIFT_CARD_UNKNOWN",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentSurchargeType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "AUTO_GRATUITY",
        "CUSTOM"
      ],
      "x-enum-elements": [
        {
          "name": "UNKNOWN",
          "description": ""
        },
        {
          "name": "AUTO_GRATUITY",
          "description": ""
        },
        {
          "name": "CUSTOM",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentTaxInclusionType": {
      "type": "string",
      "enum": [
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "x-enum-elements": [
        {
          "name": "ADDITIVE",
          "description": ""
        },
        {
          "name": "INCLUSIVE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RefundType": {
      "type": "string",
      "enum": [
        "FULL",
        "PARTIAL"
      ],
      "x-enum-elements": [
        {
          "name": "FULL",
          "description": ""
        },
        {
          "name": "PARTIAL",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1SettlementEntryType": {
      "type": "string",
      "enum": [
        "ADJUSTMENT",
        "BALANCE_CHARGE",
        "CHARGE",
        "FREE_PROCESSING",
        "HOLD_ADJUSTMENT",
        "PAID_SERVICE_FEE",
        "PAID_SERVICE_FEE_REFUND",
        "REDEMPTION_CODE",
        "REFUND",
        "RETURNED_PAYOUT",
        "SQUARE_CAPITAL_ADVANCE",
        "SQUARE_CAPITAL_PAYMENT",
        "SQUARE_CAPITAL_REVERSED_PAYMENT",
        "SUBSCRIPTION_FEE",
        "SUBSCRIPTION_FEE_REFUND",
        "OTHER",
        "INCENTED_PAYMENT",
        "RETURNED_ACH_ENTRY",
        "RETURNED_SQUARE_275",
        "SQUARE_275",
        "SQUARE_CARD"
      ],
      "x-enum-elements": [
        {
          "name": "ADJUSTMENT",
          "description": "A manual adjustment applied to the merchant\u0027s account by Square"
        },
        {
          "name": "BALANCE_CHARGE",
          "description": "A payment from an existing Square balance, such as a gift card"
        },
        {
          "name": "CHARGE",
          "description": "A credit card payment CAPTURE"
        },
        {
          "name": "FREE_PROCESSING",
          "description": "Square offers Free Payments Processing for a variety of business scenarios including seller referral or when we want to apologize for a bug, customer service, repricing complication, etc. This entry represents a credit to the merchant for the purposes of Free Processing."
        },
        {
          "name": "HOLD_ADJUSTMENT",
          "description": "An adjustment made by Square related to holding/releasing a payment"
        },
        {
          "name": "PAID_SERVICE_FEE",
          "description": "a fee paid to a 3rd party merchant"
        },
        {
          "name": "PAID_SERVICE_FEE_REFUND",
          "description": "a refund for a 3rd party merchant fee"
        },
        {
          "name": "REDEMPTION_CODE",
          "description": "Repayment for a redemption code"
        },
        {
          "name": "REFUND",
          "description": "A refund for an existing card payment"
        },
        {
          "name": "RETURNED_PAYOUT",
          "description": "An entry created when we receive a response for the ACH file we sent indicating that the settlement of the original entry failed."
        },
        {
          "name": "SQUARE_CAPITAL_ADVANCE",
          "description": "Initial deposit to a merchant for a Capital merchant cash advance (MCA)."
        },
        {
          "name": "SQUARE_CAPITAL_PAYMENT",
          "description": "Capital merchant cash advance (MCA) assessment. These are, generally, proportional to the merchant\u0027s sales but may be issued for other reasons related to the MCA."
        },
        {
          "name": "SQUARE_CAPITAL_REVERSED_PAYMENT",
          "description": "Capital merchant cash advance (MCA) assessment refund. These are, generally, proportional to the merchant\u0027s refunds but may be issued for other reasons related to the MCA."
        },
        {
          "name": "SUBSCRIPTION_FEE",
          "description": "Fee charged for subscription to a Square product"
        },
        {
          "name": "SUBSCRIPTION_FEE_REFUND",
          "description": "Refund of a previously charged Square product subscription fee."
        },
        {
          "name": "OTHER",
          "description": ""
        },
        {
          "name": "INCENTED_PAYMENT",
          "description": "A payment in which Square covers part of the funds for a purchase"
        },
        {
          "name": "RETURNED_ACH_ENTRY",
          "description": "A settlement failed to be processed and the settlement amount has been returned to the account"
        },
        {
          "name": "RETURNED_SQUARE_275",
          "description": "Refund for cancelling a Square Plus subscription"
        },
        {
          "name": "SQUARE_275",
          "description": "Fee charged for a Square Plus subscription ($275)"
        },
        {
          "name": "SQUARE_CARD",
          "description": "Settlements to or withdrawals from the Square Card (an asset)"
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1SettlementStatus": {
      "type": "string",
      "enum": [
        "FAILED",
        "SENT"
      ],
      "x-enum-elements": [
        {
          "name": "FAILED",
          "description": ""
        },
        {
          "name": "SENT",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1TenderCardBrand": {
      "type": "string",
      "enum": [
        "OTHER_BRAND",
        "VISA",
        "MASTER_CARD",
        "AMERICAN_EXPRESS",
        "DISCOVER",
        "DISCOVER_DINERS",
        "JCB",
        "CHINA_UNIONPAY",
        "SQUARE_GIFT_CARD"
      ],
      "x-enum-elements": [
        {
          "name": "OTHER_BRAND",
          "description": ""
        },
        {
          "name": "VISA",
          "description": ""
        },
        {
          "name": "MASTER_CARD",
          "description": ""
        },
        {
          "name": "AMERICAN_EXPRESS",
          "description": ""
        },
        {
          "name": "DISCOVER",
          "description": ""
        },
        {
          "name": "DISCOVER_DINERS",
          "description": ""
        },
        {
          "name": "JCB",
          "description": ""
        },
        {
          "name": "CHINA_UNIONPAY",
          "description": ""
        },
        {
          "name": "SQUARE_GIFT_CARD",
          "description": ""
        }
      ],
      "description": "The brand of a credit card.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1TenderEntryMethod": {
      "type": "string",
      "enum": [
        "MANUAL",
        "SCANNED",
        "SQUARE_CASH",
        "SQUARE_WALLET",
        "SWIPED",
        "WEB_FORM",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "MANUAL",
          "description": ""
        },
        {
          "name": "SCANNED",
          "description": ""
        },
        {
          "name": "SQUARE_CASH",
          "description": ""
        },
        {
          "name": "SQUARE_WALLET",
          "description": ""
        },
        {
          "name": "SWIPED",
          "description": ""
        },
        {
          "name": "WEB_FORM",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1TenderType": {
      "type": "string",
      "enum": [
        "CREDIT_CARD",
        "CASH",
        "THIRD_PARTY_CARD",
        "NO_SALE",
        "SQUARE_WALLET",
        "SQUARE_GIFT_CARD",
        "UNKNOWN",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "CREDIT_CARD",
          "description": ""
        },
        {
          "name": "CASH",
          "description": ""
        },
        {
          "name": "THIRD_PARTY_CARD",
          "description": ""
        },
        {
          "name": "NO_SALE",
          "description": ""
        },
        {
          "name": "SQUARE_WALLET",
          "description": ""
        },
        {
          "name": "SQUARE_GIFT_CARD",
          "description": ""
        },
        {
          "name": "UNKNOWN",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1TimecardEventEventType": {
      "type": "string",
      "enum": [
        "API_CREATE",
        "API_EDIT",
        "API_DELETE",
        "REGISTER_CLOCKIN",
        "REGISTER_CLOCKOUT",
        "DASHBOARD_SUPERVISOR_CLOSE",
        "DASHBOARD_EDIT",
        "DASHBOARD_DELETE"
      ],
      "x-enum-elements": [
        {
          "name": "API_CREATE",
          "description": "The timecard was created by a request to the\n`CreateTimecard` endpoint."
        },
        {
          "name": "API_EDIT",
          "description": "The timecard was edited by a request to the\n`UpdateTimecard` endpoint."
        },
        {
          "name": "API_DELETE",
          "description": "The timecard was deleted by a request to the\n`DeleteTimecard` endpoint."
        },
        {
          "name": "REGISTER_CLOCKIN",
          "description": "The employee clocked in via Square Point of Sale."
        },
        {
          "name": "REGISTER_CLOCKOUT",
          "description": "The employee clocked out via Square Point of Sale."
        },
        {
          "name": "DASHBOARD_SUPERVISOR_CLOSE",
          "description": "A supervisor clocked out the employee from the merchant\ndashboard."
        },
        {
          "name": "DASHBOARD_EDIT",
          "description": "A supervisor manually edited the timecard from the merchant\ndashboard"
        },
        {
          "name": "DASHBOARD_DELETE",
          "description": "A supervisor deleted the timecard from the merchant dashboard."
        }
      ],
      "description": "Actions that resulted in a change to a timecard. All timecard\nevents created with the Connect API have an event type that begins with\n`API`.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateModifierListRequestSelectionType": {
      "type": "string",
      "enum": [
        "SINGLE",
        "MULTIPLE"
      ],
      "x-enum-elements": [
        {
          "name": "SINGLE",
          "description": ""
        },
        {
          "name": "MULTIPLE",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateOrderRequestAction": {
      "type": "string",
      "enum": [
        "COMPLETE",
        "CANCEL",
        "REFUND"
      ],
      "x-enum-elements": [
        {
          "name": "COMPLETE",
          "description": ""
        },
        {
          "name": "CANCEL",
          "description": ""
        },
        {
          "name": "REFUND",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1VariationInventoryAlertType": {
      "type": "string",
      "enum": [
        "LOW_QUANTITY",
        "NONE",
        "INVESTMENT",
        "LOAN",
        "SAVINGS",
        "OTHER"
      ],
      "x-enum-elements": [
        {
          "name": "LOW_QUANTITY",
          "description": ""
        },
        {
          "name": "NONE",
          "description": ""
        },
        {
          "name": "INVESTMENT",
          "description": ""
        },
        {
          "name": "LOAN",
          "description": ""
        },
        {
          "name": "SAVINGS",
          "description": ""
        },
        {
          "name": "OTHER",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1VariationPricingType": {
      "type": "string",
      "enum": [
        "FIXED_PRICING",
        "VARIABLE_PRICING"
      ],
      "x-enum-elements": [
        {
          "name": "FIXED_PRICING",
          "description": ""
        },
        {
          "name": "VARIABLE_PRICING",
          "description": ""
        }
      ],
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "Weekday": {
      "type": "string",
      "enum": [
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT",
        "SUN"
      ],
      "x-enum-elements": [
        {
          "name": "MON",
          "description": "Monday"
        },
        {
          "name": "TUE",
          "description": "Tuesday"
        },
        {
          "name": "WED",
          "description": "Wednesday"
        },
        {
          "name": "THU",
          "description": "Thursday"
        },
        {
          "name": "FRI",
          "description": "Friday"
        },
        {
          "name": "SAT",
          "description": "Saturday"
        },
        {
          "name": "SUN",
          "description": "Sunday"
        }
      ],
      "description": "The days of the week.",
      "x-release-status": "PUBLIC"
    },
    "AcceptDisputeRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines request parameters for the AcceptDispute endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "AcceptDisputeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "dispute": {
          "$ref": "#/definitions/Dispute",
          "description": "Details about the accepted dispute."
        }
      },
      "description": "Defines fields in a AcceptDispute response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "dispute": {
          "dispute_id": "XDgyFu7yo1E2S5lQGGpYn",
          "amount_money": {
            "amount": 2000,
            "currency": "USD"
          },
          "reason": "NO_KNOWLEDGE",
          "state": "LOST",
          "due_at": "2018-11-01T00:00:00.000Z",
          "disputed_payments": [
            {
              "payment_id": "6Ee10wvqhfipStz297mtUhBXvaB"
            }
          ],
          "card_brand": "visa",
          "created_at": "2018-10-18T15:59:13.613Z",
          "updated_at": "2018-10-18T15:59:13.613Z",
          "brand_dispute_id": "100000282394"
        }
      }
    },
    "AccumulateLoyaltyPointsRequest": {
      "type": "object",
      "required": [
        "accumulate_points",
        "idempotency_key",
        "location_id"
      ],
      "properties": {
        "accumulate_points": {
          "$ref": "#/definitions/LoyaltyEventAccumulatePoints",
          "description": "The points to add to the account. \nIf you are using the Orders API to manage orders, you  \nspecify the order ID. Otherwise, specify the \npoints to add."
        },
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 128,
          "type": "string",
          "description": "A unique string that identifies the `AccumulateLoyaltyPoints` request. \nKeys can be any valid string but must be unique for every request."
        },
        "location_id": {
          "type": "string",
          "description": "The `location` where the purchase was made."
        }
      },
      "description": "A request to accumulate points for a purchase.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_params": "?account_id\u003d5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
        "request_body": {
          "accumulate_points": {
            "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY"
          },
          "location_id": "P034NEENMD09F",
          "idempotency_key": "58b90739-c3e8-4b11-85f7-e636d48d72cb"
        }
      }
    },
    "AccumulateLoyaltyPointsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "event": {
          "$ref": "#/definitions/LoyaltyEvent",
          "description": "The resulting loyalty event."
        }
      },
      "description": "A response containing the resulting loyalty event.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "event": {
          "id": "ee46aafd-1af6-3695-a385-276e2ef0be26",
          "type": "ACCUMULATE_POINTS",
          "created_at": "2020-05-08T21:41:12Z",
          "accumulate_points": {
            "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
            "points": 6,
            "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY"
          },
          "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
          "location_id": "P034NEENMD09F",
          "source": "LOYALTY_API"
        }
      }
    },
    "AddGroupToCustomerRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the fields that are included in the request body of\na request to the [AddGroupToCustomer](#endpoint-addgrouptocustomer) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "AddGroupToCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [AddGroupToCustomer](#endpoint-addgrouptocustomer) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {}
    },
    "AdditionalRecipient": {
      "type": "object",
      "required": [
        "location_id",
        "description",
        "amount_money"
      ],
      "properties": {
        "location_id": {
          "minLength": 1,
          "maxLength": 50,
          "type": "string",
          "description": "The location ID for a recipient (other than the merchant) receiving a portion of this tender."
        },
        "description": {
          "minLength": 1,
          "maxLength": 100,
          "type": "string",
          "description": "The description of the additional recipient."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money distributed to the recipient."
        },
        "receivable_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The unique ID for this `AdditionalRecipientReceivable`, assigned by the server."
        }
      },
      "description": "Represents an additional recipient (other than the merchant) receiving a portion of this tender.",
      "x-release-status": "PUBLIC"
    },
    "AdditionalRecipientReceivable": {
      "type": "object",
      "required": [
        "id",
        "transaction_id",
        "transaction_location_id",
        "amount_money"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "The additional recipient receivable\u0027s unique ID, issued by Square payments servers."
        },
        "transaction_id": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the transaction that the additional recipient receivable was applied to."
        },
        "transaction_location_id": {
          "minLength": 1,
          "maxLength": 50,
          "type": "string",
          "description": "The ID of the location that created the receivable. This is the location ID on the associated transaction."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the receivable. This will always be non-negative."
        },
        "created_at": {
          "maxLength": 32,
          "type": "string",
          "description": "The time when the additional recipient receivable was created, in RFC 3339 format."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipientReceivableRefund"
          },
          "description": "Any refunds of the receivable that have been applied."
        }
      },
      "description": "Represents a monetary distribution of part of a [Transaction](#type-transaction)\u0027s amount for Transactions which included additional recipients. The location of this receivable is that same as the one specified in the [AdditionalRecipient](#type-additionalrecipient).",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "AdditionalRecipientReceivableRefund": {
      "type": "object",
      "required": [
        "id",
        "receivable_id",
        "refund_id",
        "transaction_location_id",
        "amount_money"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "The receivable refund\u0027s unique ID, issued by Square payments servers."
        },
        "receivable_id": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the receivable that the refund was applied to."
        },
        "refund_id": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "The ID of the refund that is associated to this receivable refund."
        },
        "transaction_location_id": {
          "minLength": 1,
          "maxLength": 50,
          "type": "string",
          "description": "The ID of the location that created the receivable. This is the location ID on the associated transaction."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the refund. This will always be non-negative."
        },
        "created_at": {
          "maxLength": 32,
          "type": "string",
          "description": "The time when the refund was created, in RFC 3339 format."
        }
      },
      "description": "A refund of an [AdditionalRecipientReceivable](#type-additionalrecipientreceivable). This includes the ID of the additional recipient receivable associated to this object, as well as a reference to the [Refund](#type-refund) that created this receivable refund.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "Address": {
      "type": "object",
      "properties": {
        "address_line_1": {
          "type": "string",
          "description": "The first line of the address.\n\nFields that start with `address_line` provide the address\u0027s most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
        },
        "address_line_2": {
          "type": "string",
          "description": "The second line of the address, if any."
        },
        "address_line_3": {
          "type": "string",
          "description": "The third line of the address, if any."
        },
        "locality": {
          "type": "string",
          "description": "The city or town of the address."
        },
        "sublocality": {
          "type": "string",
          "description": "A civil region within the address\u0027s `locality`, if any."
        },
        "sublocality_2": {
          "type": "string",
          "description": "A civil region within the address\u0027s `sublocality`, if any."
        },
        "sublocality_3": {
          "type": "string",
          "description": "A civil region within the address\u0027s `sublocality_2`, if any."
        },
        "administrative_district_level_1": {
          "type": "string",
          "description": "A civil entity within the address\u0027s country. In the US, this\nis the state."
        },
        "administrative_district_level_2": {
          "type": "string",
          "description": "A civil entity within the address\u0027s `administrative_district_level_1`.\nIn the US, this is the county."
        },
        "administrative_district_level_3": {
          "type": "string",
          "description": "A civil entity within the address\u0027s `administrative_district_level_2`,\nif any."
        },
        "postal_code": {
          "type": "string",
          "description": "The address\u0027s postal code."
        },
        "country": {
          "type": "string",
          "description": "The address\u0027s country, in ISO 3166-1-alpha-2 format.\nSee [Country](#type-country) for possible values"
        },
        "first_name": {
          "type": "string",
          "description": "Optional first name when it\u0027s representing recipient."
        },
        "last_name": {
          "type": "string",
          "description": "Optional last name when it\u0027s representing recipient."
        },
        "organization": {
          "type": "string",
          "description": "Optional organization name when it\u0027s representing recipient."
        }
      },
      "description": "Represents a physical address.",
      "x-release-status": "PUBLIC"
    },
    "AdjustLoyaltyPointsRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "adjust_points"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 128,
          "type": "string",
          "description": "A unique string that identifies this `AdjustLoyaltyPoints` request. \nKeys can be any valid string, but must be unique for every request."
        },
        "adjust_points": {
          "$ref": "#/definitions/LoyaltyEventAdjustPoints",
          "description": "The points to adjust (add or subtract) and the reason for the adjustment."
        }
      },
      "description": "A request to adjust (add or subtract) points manually.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_params": "?account_id\u003d5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
        "request_body": {
          "adjust": {
            "points": 10,
            "reason": "Complimentary points"
          },
          "idempotency_key": "bc29a517-3dc9-450e-aa76-fae39ee849d1"
        }
      }
    },
    "AdjustLoyaltyPointsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "event": {
          "$ref": "#/definitions/LoyaltyEvent",
          "description": "The resulting event data for adjusting points."
        }
      },
      "description": "A response that includes the loyalty event that \nresulted from the successful API call.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "event": {
          "id": "613a6fca-8d67-39d0-bad2-3b4bc45c8637",
          "type": "ADJUST_POINTS",
          "created_at": "2020-05-08T21:42:32Z",
          "adjust_points": {
            "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
            "points": 10,
            "reason": "Complimentary points"
          },
          "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
          "source": "LOYALTY_API"
        }
      }
    },
    "BalancePaymentDetails": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string",
          "description": "ID for the account used to fund the payment."
        },
        "status": {
          "type": "string",
          "description": "The balance payment’s current state. Can be `COMPLETED` or `FAILED`."
        }
      },
      "description": "Reflects the current status of a balance payment.",
      "x-release-status": "PUBLIC"
    },
    "BankAccount": {
      "type": "object",
      "required": [
        "id",
        "account_number_suffix",
        "country",
        "currency",
        "account_type",
        "holder_name",
        "primary_bank_identification_number",
        "status",
        "creditable",
        "debitable"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "maxLength": 30,
          "type": "string",
          "description": "The unique, Square-issued identifier for the bank account."
        },
        "account_number_suffix": {
          "minLength": 1,
          "type": "string",
          "description": "The last few digits of the account number."
        },
        "country": {
          "type": "string",
          "description": "The ISO 3166 Alpha-2 country code where the bank account is based.\nSee [Country](#type-country) for possible values"
        },
        "currency": {
          "type": "string",
          "description": "The 3-character ISO 4217 currency code indicating the operating\ncurrency of the bank account. For example, the currency code for US dollars\nis `USD`.\nSee [Currency](#type-currency) for possible values"
        },
        "account_type": {
          "type": "string",
          "description": "The financial purpose of the associated bank account.\nSee [BankAccountType](#type-bankaccounttype) for possible values"
        },
        "holder_name": {
          "minLength": 1,
          "type": "string",
          "description": "Name of the account holder. This name must match the name \non the targeted bank account record."
        },
        "primary_bank_identification_number": {
          "maxLength": 40,
          "type": "string",
          "description": "Primary identifier for the bank. For more information, see \n[Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api)."
        },
        "secondary_bank_identification_number": {
          "maxLength": 40,
          "type": "string",
          "description": "Secondary identifier for the bank. For more information, see \n[Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api)."
        },
        "debit_mandate_reference_id": {
          "type": "string",
          "description": "Reference identifier that will be displayed to UK bank account owners\nwhen collecting direct debit authorization. Only required for UK bank accounts."
        },
        "reference_id": {
          "type": "string",
          "description": "Client-provided identifier for linking the banking account to an entity\nin a third-party system (for example, a bank account number or a user identifier)."
        },
        "location_id": {
          "type": "string",
          "description": "The location to which the bank account belongs."
        },
        "status": {
          "type": "string",
          "description": "Read-only. The current verification status of this BankAccount object.\nSee [BankAccountStatus](#type-bankaccountstatus) for possible values"
        },
        "creditable": {
          "type": "boolean",
          "description": "Indicates whether it is possible for Square to send money to this bank account."
        },
        "debitable": {
          "type": "boolean",
          "description": "Indicates whether it is possible for Square to take money from this \nbank account."
        },
        "fingerprint": {
          "type": "string",
          "description": "A Square-assigned, unique identifier for the bank account based on the\naccount information. The account fingerprint can be used to compare account\nentries and determine if the they represent the same real-world bank account."
        },
        "version": {
          "type": "integer",
          "description": "The current version of the `BankAccount`."
        },
        "bank_name": {
          "maxLength": 100,
          "type": "string",
          "description": "Read only. Name of actual financial institution. \nFor example \"Bank of America\"."
        }
      },
      "description": "Represents a bank account. For more information about \nlinking a bank account to a Square account, see \n[Bank Accounts API](/docs/bank-accounts-api).",
      "x-release-status": "PUBLIC"
    },
    "BatchChangeInventoryRequest": {
      "type": "object",
      "properties": {
        "idempotency_key": {
          "type": "string",
          "description": "A client-supplied, universally unique identifier (UUID) for the\nrequest.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) in the\n[API Development 101](https://developer.squareup.com/docs/basics/api101/overview) section for more\ninformation."
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryChange"
          },
          "description": "The set of physical counts and inventory adjustments to be made.\nChanges are applied based on the client-supplied timestamp and may be sent\nout of order. Max size is 100 changes."
        },
        "ignore_unchanged_counts": {
          "type": "boolean",
          "description": "Indicates whether the current physical count should be ignored if\nthe quantity is unchanged since the last physical count. Default: `true`."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "8fc6a5b0-9fe8-4b46-b46b-2ef95793abbe",
          "changes": [
            {
              "type": "PHYSICAL_COUNT",
              "physical_count": {
                "reference_id": "1536bfbf-efed-48bf-b17d-a197141b2a92",
                "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
                "state": "IN_STOCK",
                "location_id": "C6W5YS5QM06F5",
                "quantity": "53",
                "employee_id": "LRK57NSQ5X7PUD05",
                "occurred_at": "2016-11-16T22:25:24.878Z"
              }
            }
          ],
          "ignore_unchanged_counts": true
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.python",
        "csharp": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.csharp",
        "java": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.java",
        "php": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.php",
        "javascript": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.javascript",
        "ruby": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.ruby"
      }
    },
    "BatchChangeInventoryResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCount"
          },
          "description": "The current counts for all objects referenced in the request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "counts": [
          {
            "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
            "catalog_object_type": "ITEM_VARIATION",
            "state": "IN_STOCK",
            "location_id": "C6W5YS5QM06F5",
            "quantity": "53",
            "calculated_at": "2016-11-16T22:28:01.223Z"
          }
        ]
      }
    },
    "BatchDeleteCatalogObjectsRequest": {
      "type": "object",
      "properties": {
        "object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the CatalogObjects to be deleted. When an object is deleted, other objects\nin the graph that depend on that object will be deleted as well (for example, deleting a\nCatalogItem will delete its CatalogItemVariation."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI",
            "AA27W3M2GGTF3H6AVPNB77CK"
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.python",
        "csharp": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.csharp",
        "java": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.java",
        "php": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.php",
        "javascript": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.javascript",
        "ruby": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.ruby"
      }
    },
    "BatchDeleteCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of Errors encountered."
        },
        "deleted_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all CatalogObjects deleted by this request."
        },
        "deleted_at": {
          "type": "string",
          "description": "The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this deletion in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "deleted_object_ids": [
          "W62UWFY35CWMYGVWK6TWJDNI",
          "AA27W3M2GGTF3H6AVPNB77CK"
        ],
        "deleted_at": "2016-11-16T22:25:24.878Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.python",
        "csharp": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.csharp",
        "java": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.java",
        "php": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.php",
        "javascript": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.javascript",
        "ruby": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.ruby"
      }
    },
    "BatchRetrieveCatalogObjectsRequest": {
      "type": "object",
      "required": [
        "object_ids"
      ],
      "properties": {
        "object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the CatalogObjects to be retrieved."
        },
        "include_related_objects": {
          "type": "boolean",
          "description": "If `true`, the response will include additional objects that are related to the\nrequested objects, as follows:\n\nIf the `objects` field of the response contains a CatalogItem, its associated\nCatalogCategory objects, CatalogTax objects, CatalogImage objects and\nCatalogModifierLists will be returned in the `related_objects` field of the\nresponse. If the `objects` field of the response contains a CatalogItemVariation,\nits parent CatalogItem will be returned in the `related_objects` field of\nthe response."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI",
            "AA27W3M2GGTF3H6AVPNB77CK"
          ],
          "include_related_objects": true
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.python",
        "csharp": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.csharp",
        "java": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.java",
        "php": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.php",
        "javascript": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.javascript",
        "ruby": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.ruby"
      }
    },
    "BatchRetrieveCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of `Error`s encountered."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of `CatalogObject`s returned."
        },
        "related_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of `CatalogObject`s referenced by the object in the `objects` field."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "objects": [
          {
            "type": "ITEM",
            "id": "W62UWFY35CWMYGVWK6TWJDNI",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea",
              "description": "Hot Leaf Juice",
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                    "name": "Mug",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ITEM",
            "id": "AA27W3M2GGTF3H6AVPNB77CK",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Coffee",
              "description": "Hot Bean Juice",
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "LBTYIHNHU52WOIHWT7SNRIYH",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Regular",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    }
                  }
                },
                {
                  "type": "ITEM_VARIATION",
                  "id": "PKYIC7HGGKW5CYVSCVDEIMHY",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Large",
                    "ordinal": 1,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          }
        ],
        "related_objects": [
          {
            "type": "CATEGORY",
            "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "HURXQOOAIC4IZSI2BEXQRYFY",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "enabled": true
            }
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.python",
        "csharp": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.csharp",
        "java": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.java",
        "php": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.php",
        "javascript": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.javascript",
        "ruby": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.ruby"
      }
    },
    "BatchRetrieveInventoryChangesRequest": {
      "type": "object",
      "properties": {
        "catalog_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters results by `CatalogObject` ID.\nOnly applied when set. Max size is 500 IDs. Default: unset."
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters results by `Location` ID. Only\napplied when set. Default: unset."
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters results by `InventoryChangeType`.\nDefault: [`PHYSICAL_COUNT`, `ADJUSTMENT`]. `TRANSFER` is not supported as\na filter.\nSee [InventoryChangeType](#type-inventorychangetype) for possible values"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters `ADJUSTMENT` query results by\n`InventoryState`. Only applied when set.\nDefault: unset.\nSee [InventoryState](#type-inventorystate) for possible values"
        },
        "updated_after": {
          "type": "string",
          "description": "Provided as an RFC 3339 timestamp. Returns results whose\n`created_at` or `calculated_at` value is after the given time.\nDefault: UNIX epoch (`1970-01-01T00:00:00Z`)."
        },
        "updated_before": {
          "type": "string",
          "description": "Provided as an RFC 3339 timestamp. Returns results whose\n`created_at` or `calculated_at` value is strictly before the given time.\nDefault: UNIX epoch (`1970-01-01T00:00:00Z`)."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "catalog_object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI"
          ],
          "location_ids": [
            "C6W5YS5QM06F5"
          ],
          "types": [
            "PHYSICAL_COUNT"
          ],
          "states": [
            "IN_STOCK"
          ],
          "updated_after": "2016-11-01T00:00:00.000Z",
          "updated_before": "2016-12-01T00:00:00.000Z"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.python",
        "csharp": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.csharp",
        "java": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.java",
        "php": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.php",
        "javascript": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.javascript",
        "ruby": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.ruby"
      }
    },
    "BatchRetrieveInventoryChangesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryChange"
          },
          "description": "The current calculated inventory changes for the requested objects\nand locations."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "changes": [
          {
            "type": "PHYSICAL_COUNT",
            "physical_count": {
              "id": "46YDTW253DWGGK9HMAE6XCAO",
              "reference_id": "22c07cf4-5626-4224-89f9-691112019399",
              "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
              "catalog_object_type": "ITEM_VARIATION",
              "state": "IN_STOCK",
              "location_id": "C6W5YS5QM06F5",
              "quantity": "86",
              "source": {
                "product": "SQUARE_POS",
                "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
                "name": "Square Point of Sale 4.37"
              },
              "employee_id": "LRK57NSQ5X7PUD05",
              "occurred_at": "2016-11-16T22:24:49.028Z",
              "created_at": "2016-11-16T22:25:24.878Z"
            }
          }
        ]
      }
    },
    "BatchRetrieveInventoryCountsRequest": {
      "type": "object",
      "properties": {
        "catalog_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters results by `CatalogObject` ID.\nOnly applied when set. Max size is 1000 IDs. Default: unset."
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters results by `Location` ID. Only\napplied when set. Default: unset."
        },
        "updated_after": {
          "type": "string",
          "description": "Provided as an RFC 3339 timestamp. Returns results whose\n`calculated_at` value is after the given time. Default: UNIX epoch\n(`1970-01-01T00:00:00Z`)."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "catalog_object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI"
          ],
          "location_ids": [
            "59TNP9SA8VGDA"
          ],
          "updated_after": "2016-11-16T00:00:00.000Z"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.python",
        "csharp": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.csharp",
        "java": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.java",
        "php": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.php",
        "javascript": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.javascript",
        "ruby": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.ruby"
      }
    },
    "BatchRetrieveInventoryCountsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCount"
          },
          "description": "The current calculated inventory counts for the requested objects\nand locations."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "counts": [
          {
            "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
            "catalog_object_type": "ITEM_VARIATION",
            "state": "IN_STOCK",
            "location_id": "59TNP9SA8VGDA",
            "quantity": "79",
            "calculated_at": "2016-11-16T22:28:01.223Z"
          }
        ]
      }
    },
    "BatchRetrieveOrdersRequest": {
      "type": "object",
      "required": [
        "order_ids"
      ],
      "properties": {
        "order_ids": {
          "type": "array",
          "items": {
            "minLength": 1,
            "type": "string"
          },
          "description": "The IDs of the orders to retrieve. A maximum of 100 orders can be retrieved per request."
        }
      },
      "description": "Defines the fields that are included in requests to the\nBatchRetrieveOrders endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "order_ids": [
            "CAISEM82RcpmcFBM0TfOyiHV3es",
            "CAISENgvlJ6jLWAzERDzjyHVybY"
          ]
        }
      }
    },
    "BatchRetrieveOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "description": "The requested orders. This will omit any requested orders that do not exist."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the BatchRetrieveOrders endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "orders": [
          {
            "id": "CAISEM82RcpmcFBM0TfOyiHV3es",
            "location_id": "057P5VYJ4A5X1",
            "reference_id": "my-order-001",
            "line_items": [
              {
                "uid": "945986d1-9586-11e6-ad5a-28cfe92138cf",
                "name": "Awesome product",
                "quantity": "1",
                "base_price_money": {
                  "amount": 1599,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1599,
                  "currency": "USD"
                }
              },
              {
                "uid": "a8f4168c-9586-11e6-bdf0-28cfe92138cf",
                "name": "Another awesome product",
                "quantity": "3",
                "base_price_money": {
                  "amount": 2000,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 6000,
                  "currency": "USD"
                }
              }
            ],
            "total_money": {
              "amount": 7599,
              "currency": "USD"
            }
          }
        ]
      }
    },
    "BatchUpsertCatalogObjectsRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "batches"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you\u0027re unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
        },
        "batches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObjectBatch"
          },
          "description": "A batch of CatalogObjects to be inserted/updated atomically.\nThe objects within a batch will be inserted in an all-or-nothing fashion, i.e., if an error occurs\nattempting to insert or update an object within a batch, the entire batch will be rejected. However, an error\nin one batch will not affect other batches within the same request.\n\nFor each object, its `updated_at` field is ignored and replaced with a current [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), and its\n`is_deleted` field must not be set to `true`.\n\nTo modify an existing object, supply its ID. To create a new object, use an ID starting\nwith `#`. These IDs may be used to create relationships between an object and attributes of\nother objects that reference it. For example, you can create a CatalogItem with\nID `#ABC` and a CatalogItemVariation with its `item_id` attribute set to\n`#ABC` in order to associate the CatalogItemVariation with its parent\nCatalogItem.\n\nAny `#`-prefixed IDs are valid only within a single atomic batch, and will be replaced by server-generated IDs.\n\nEach batch may contain up to 1,000 objects. The total number of objects across all batches for a single request\nmay not exceed 10,000. If either of these limits is violated, an error will be returned and no objects will\nbe inserted or updated."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "789ff020-f723-43a9-b4b5-43b5dc1fa3dc",
          "batches": [
            {
              "objects": [
                {
                  "type": "ITEM",
                  "id": "#Tea",
                  "present_at_all_locations": true,
                  "item_data": {
                    "name": "Tea",
                    "description": "Hot Leaf Juice",
                    "category_id": "#Beverages",
                    "tax_ids": [
                      "#SalesTax"
                    ],
                    "variations": [
                      {
                        "type": "ITEM_VARIATION",
                        "id": "#Tea_Mug",
                        "present_at_all_locations": true,
                        "item_variation_data": {
                          "item_id": "#Tea",
                          "name": "Mug",
                          "pricing_type": "FIXED_PRICING",
                          "price_money": {
                            "amount": 150,
                            "currency": "USD"
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ITEM",
                  "id": "#Coffee",
                  "present_at_all_locations": true,
                  "item_data": {
                    "name": "Coffee",
                    "description": "Hot Bean Juice",
                    "category_id": "#Beverages",
                    "tax_ids": [
                      "#SalesTax"
                    ],
                    "variations": [
                      {
                        "type": "ITEM_VARIATION",
                        "id": "#Coffee_Regular",
                        "present_at_all_locations": true,
                        "item_variation_data": {
                          "item_id": "#Coffee",
                          "name": "Regular",
                          "pricing_type": "FIXED_PRICING",
                          "price_money": {
                            "amount": 250,
                            "currency": "USD"
                          }
                        }
                      },
                      {
                        "type": "ITEM_VARIATION",
                        "id": "#Coffee_Large",
                        "present_at_all_locations": true,
                        "item_variation_data": {
                          "item_id": "#Coffee",
                          "name": "Large",
                          "pricing_type": "FIXED_PRICING",
                          "price_money": {
                            "amount": 350,
                            "currency": "USD"
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "CATEGORY",
                  "id": "#Beverages",
                  "present_at_all_locations": true,
                  "category_data": {
                    "name": "Beverages"
                  }
                },
                {
                  "type": "TAX",
                  "id": "#SalesTax",
                  "present_at_all_locations": true,
                  "tax_data": {
                    "name": "Sales Tax",
                    "calculation_phase": "TAX_SUBTOTAL_PHASE",
                    "inclusion_type": "ADDITIVE",
                    "percentage": "5.0",
                    "applies_to_custom_amounts": true,
                    "enabled": true
                  }
                }
              ]
            }
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.python",
        "csharp": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.csharp",
        "java": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.java",
        "php": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.php",
        "javascript": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.javascript",
        "ruby": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.ruby"
      }
    },
    "BatchUpsertCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on any errors that encountered."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The created successfully created CatalogObjects."
        },
        "updated_at": {
          "type": "string",
          "description": "The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
        },
        "id_mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogIdMapping"
          },
          "description": "The mapping between client and server IDs for this upsert."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "objects": [
          {
            "type": "ITEM",
            "id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea",
              "description": "Hot Leaf Juice",
              "category_id": "LYT72K3WGJFFCIMB63XARP3I",
              "tax_ids": [
                "XHSHLHNWSI3HVI4BW5ZUZXI3"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "NAYHET5R52MIYCEF34ZMAHFM",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
                    "name": "Mug",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ITEM",
            "id": "PJMCEBHHUS3OKDB6PYUHLCPP",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Coffee",
              "description": "Hot Bean Juice",
              "category_id": "LYT72K3WGJFFCIMB63XARP3I",
              "tax_ids": [
                "XHSHLHNWSI3HVI4BW5ZUZXI3"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "OTYDX45SPG7LJQUVCBZI4INH",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                    "name": "Regular",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    }
                  }
                },
                {
                  "type": "ITEM_VARIATION",
                  "id": "GZDA3JB37FYVOPI4AOEBOITI",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                    "name": "Large",
                    "ordinal": 1,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "CATEGORY",
            "id": "LYT72K3WGJFFCIMB63XARP3I",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "XHSHLHNWSI3HVI4BW5ZUZXI3",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "applies_to_custom_amounts": true,
              "enabled": true
            }
          }
        ],
        "id_mappings": [
          {
            "client_object_id": "#Tea",
            "object_id": "ZSDZN34NAXDLC6D5ZQMNSOUM"
          },
          {
            "client_object_id": "#Coffee",
            "object_id": "PJMCEBHHUS3OKDB6PYUHLCPP"
          },
          {
            "client_object_id": "#Beverages",
            "object_id": "LYT72K3WGJFFCIMB63XARP3I"
          },
          {
            "client_object_id": "#SalesTax",
            "object_id": "XHSHLHNWSI3HVI4BW5ZUZXI3"
          },
          {
            "client_object_id": "#Tea_Mug",
            "object_id": "NAYHET5R52MIYCEF34ZMAHFM"
          },
          {
            "client_object_id": "#Coffee_Regular",
            "object_id": "OTYDX45SPG7LJQUVCBZI4INH"
          },
          {
            "client_object_id": "#Coffee_Large",
            "object_id": "GZDA3JB37FYVOPI4AOEBOITI"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.python",
        "csharp": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.csharp",
        "java": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.java",
        "php": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.php",
        "javascript": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.javascript",
        "ruby": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.ruby"
      }
    },
    "Break": {
      "type": "object",
      "required": [
        "start_at",
        "break_type_id",
        "name",
        "expected_duration",
        "is_paid"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID for this object"
        },
        "start_at": {
          "minLength": 1,
          "type": "string",
          "description": "RFC 3339; follows same timezone info as `Shift`. Precision up to\nthe minute is respected; seconds are truncated."
        },
        "end_at": {
          "type": "string",
          "description": "RFC 3339; follows same timezone info as `Shift`. Precision up to\nthe minute is respected; seconds are truncated. The `end_at` minute is not\ncounted when the break length is calculated. For example, a break from `00:00`\nto `00:11`  is considered a 10 minute break (midnight to 10 minutes after midnight)."
        },
        "break_type_id": {
          "minLength": 1,
          "type": "string",
          "description": "The `BreakType` this `Break` was templated on."
        },
        "name": {
          "minLength": 1,
          "type": "string",
          "description": "A human-readable name."
        },
        "expected_duration": {
          "minLength": 1,
          "type": "string",
          "description": "Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of\nthe break."
        },
        "is_paid": {
          "type": "boolean",
          "description": "Whether this break counts towards time worked for compensation\npurposes."
        }
      },
      "description": "A record of an employee\u0027s break during a shift.",
      "x-release-status": "PUBLIC"
    },
    "BreakType": {
      "type": "object",
      "required": [
        "location_id",
        "break_name",
        "expected_duration",
        "is_paid"
      ],
      "properties": {
        "id": {
          "maxLength": 255,
          "type": "string",
          "description": "UUID for this object."
        },
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the business location this type of break applies to."
        },
        "break_name": {
          "minLength": 1,
          "type": "string",
          "description": "A human-readable name for this type of break. Will be displayed to\nemployees in Square products."
        },
        "expected_duration": {
          "minLength": 1,
          "type": "string",
          "description": "Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of\nthis break. Precision below minutes is truncated."
        },
        "is_paid": {
          "type": "boolean",
          "description": "Whether this break counts towards time worked for compensation\npurposes."
        },
        "version": {
          "type": "integer",
          "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If a value is not\nprovided, Square\u0027s servers execute a \"blind\" write; potentially\noverwriting another writer\u0027s data."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format."
        },
        "updated_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format."
        }
      },
      "description": "A defined break template that sets an expectation for possible `Break`\ninstances on a `Shift`.",
      "x-release-status": "PUBLIC"
    },
    "BulkCreateTeamMembersRequest": {
      "type": "object",
      "required": [
        "team_members"
      ],
      "properties": {
        "team_members": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CreateTeamMemberRequest"
          },
          "description": "The data which will be used to create the `TeamMember` objects. Each key is the `idempotency_key` that maps to the `CreateTeamMemberRequest`."
        }
      },
      "description": "Represents a bulk create request for `TeamMember` objects.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "team_members": {
            "idempotency-key-1": {
              "team_member": {
                "given_name": "Joe",
                "family_name": "Doe",
                "email_address": "joe_doe@gmail.com",
                "reference_id": "reference_id_1",
                "phone_number": "+14159283333",
                "assigned_locations": {
                  "location_ids": [
                    "YSGH2WBKG94QZ",
                    "GA2Y9HSJ8KRYT"
                  ],
                  "assignment_type": "EXPLICIT_LOCATIONS"
                }
              }
            },
            "idempotency-key-2": {
              "team_member": {
                "given_name": "Jane",
                "family_name": "Smith",
                "email_address": "jane_smith@gmail.com",
                "reference_id": "reference_id_2",
                "phone_number": "+14159223334",
                "assigned_locations": {
                  "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
                }
              }
            }
          }
        }
      }
    },
    "BulkCreateTeamMembersResponse": {
      "type": "object",
      "properties": {
        "team_members": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CreateTeamMemberResponse"
          },
          "description": "The successfully created `TeamMember` objects. Each key is the `idempotency_key` that maps to the `CreateTeamMemberRequest`."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The errors that occurred during the request."
        }
      },
      "description": "Represents a response from a bulk create request, containing the created `TeamMember` objects or error messages.",
      "x-release-status": "PUBLIC",
      "example": {
        "team_members": {
          "idempotency-key-1": {
            "team_member": {
              "id": "ywhG1qfIOoqsHfVRubFV",
              "reference_id": "reference_id_1",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Joe",
              "family_name": "Doe",
              "email_address": "joe_doe@gmail.com",
              "phone_number": "+14159283333",
              "assigned_locations": {
                "assignment_type": "EXPLICIT_LOCATIONS",
                "location_ids": [
                  "GA2Y9HSJ8KRYT",
                  "YSGH2WBKG94QZ"
                ]
              }
            }
          },
          "idempotency-key-2": {
            "team_member": {
              "id": "IF_Ncrg7fHhCqxVI9T6R",
              "reference_id": "reference_id_2",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Jane",
              "family_name": "Smith",
              "email_address": "jane_smith@gmail.com",
              "phone_number": "+14159223334",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            }
          }
        }
      }
    },
    "BulkUpdateTeamMembersRequest": {
      "type": "object",
      "required": [
        "team_members"
      ],
      "properties": {
        "team_members": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UpdateTeamMemberRequest"
          },
          "description": "The data which will be used to update the `TeamMember` objects. Each key is the `team_member_id` that maps to the `UpdateTeamMemberRequest`."
        }
      },
      "description": "Represents a bulk update request for `TeamMember` objects.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "team_members": {
            "fpgteZNMaf0qOK-a4t6P": {
              "team_member": {
                "reference_id": "reference_id_1",
                "is_owner": false,
                "status": "ACTIVE",
                "given_name": "Joe",
                "family_name": "Doe",
                "email_address": "joe_doe@gmail.com",
                "phone_number": "+14159283333",
                "assigned_locations": {
                  "location_ids": [
                    "YSGH2WBKG94QZ",
                    "GA2Y9HSJ8KRYT"
                  ],
                  "assignment_type": "EXPLICIT_LOCATIONS"
                }
              }
            },
            "AFMwA08kR-MIF-3Vs0OE": {
              "team_member": {
                "reference_id": "reference_id_2",
                "is_owner": false,
                "status": "ACTIVE",
                "given_name": "Jane",
                "family_name": "Smith",
                "email_address": "jane_smith@gmail.com",
                "phone_number": "+14159223334",
                "assigned_locations": {
                  "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
                }
              }
            }
          }
        }
      }
    },
    "BulkUpdateTeamMembersResponse": {
      "type": "object",
      "properties": {
        "team_members": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UpdateTeamMemberResponse"
          },
          "description": "The successfully updated `TeamMember` objects. Each key is the `team_member_id` that maps to the `UpdateTeamMemberRequest`."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The errors that occurred during the request."
        }
      },
      "description": "Represents a response from a bulk update request, containing the updated `TeamMember` objects or error messages.",
      "x-release-status": "PUBLIC",
      "example": {
        "team_members": {
          "fpgteZNMaf0qOK-a4t6P": {
            "team_member": {
              "id": "fpgteZNMaf0qOK-a4t6P",
              "reference_id": "reference_id_1",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Joe",
              "family_name": "Doe",
              "email_address": "joe_doe@gmail.com",
              "phone_number": "+14159283333",
              "created_at": "2020-06-11T22:46:57.095Z",
              "assigned_locations": {
                "assignment_type": "EXPLICIT_LOCATIONS",
                "location_ids": [
                  "GA2Y9HSJ8KRYT",
                  "YSGH2WBKG94QZ"
                ]
              }
            }
          },
          "AFMwA08kR-MIF-3Vs0OE": {
            "team_member": {
              "id": "AFMwA08kR-MIF-3Vs0OE",
              "reference_id": "reference_id_2",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Jane",
              "family_name": "Smith",
              "email_address": "jane_smith@gmail.com",
              "phone_number": "+14159223334",
              "created_at": "2020-06-11T22:46:57.001Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            }
          }
        }
      }
    },
    "BusinessHours": {
      "type": "object",
      "properties": {
        "periods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessHoursPeriod"
          },
          "description": "The list of time periods during which the business is open. There may be at most 10\nperiods per day."
        }
      },
      "description": "Represents the hours of operation for a business location.",
      "x-release-status": "PUBLIC"
    },
    "BusinessHoursPeriod": {
      "type": "object",
      "properties": {
        "day_of_week": {
          "type": "string",
          "description": "The day of week for this time period.\nSee [DayOfWeek](#type-dayofweek) for possible values"
        },
        "start_local_time": {
          "type": "string",
          "description": "The start time of a business hours period, specified in local time using partial-time\nRFC3339 format."
        },
        "end_local_time": {
          "type": "string",
          "description": "The end time of a business hours period, specified in local time using partial-time\nRFC3339 format."
        }
      },
      "description": "Represents a period of time during which a business location is open.",
      "x-release-status": "PUBLIC"
    },
    "CalculateLoyaltyPointsRequest": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string",
          "description": "The `order` ID for which to calculate the points.\nSpecify this field if your application uses the Orders API to process orders.\nOtherwise, specify the `transaction_amount`."
        },
        "transaction_amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The purchase amount for which to calculate the points. \nSpecify this field if your application does not use the Orders API to process orders.\nOtherwise, specify the `order_id`."
        }
      },
      "description": "A request to calculate the points that a buyer can earn from \na specified purchase.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_params": "?program_id\u003dd619f755-2d17-41f3-990d-c04ecedd64dd",
        "request_body": {
          "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY"
        }
      }
    },
    "CalculateLoyaltyPointsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "points": {
          "minimum": 0,
          "type": "integer",
          "description": "The points that the buyer can earn from a specified purchase."
        }
      },
      "description": "A response that includes the points that the buyer can earn from \na specified purchase.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "points": 6
      }
    },
    "CalculateOrderRequest": {
      "type": "object",
      "required": [
        "order"
      ],
      "properties": {
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The order to be calculated. Expects the entire order, not a sparse update."
        },
        "proposed_rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderReward"
          },
          "description": "Identifies one or more loyalty reward tiers to apply during order calculation.\nThe discounts defined by the reward tiers are added to the order only to preview the\neffect of applying the specified reward(s). The reward(s) do not correspond to actual\nredemptions, that is, no `reward`s are created. Therefore, the reward `id`s are\nrandom strings used only to reference the reward tier."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "idempotency_key": "b3e98fe3-b8de-471c-82f1-545f371e637c",
          "order": {
            "location_id": "D7AVYMEAPJ3A3",
            "discounts": [
              {
                "name": "50% Off",
                "percentage": "50",
                "scope": "ORDER"
              }
            ],
            "line_items": [
              {
                "name": "Item 1",
                "quantity": "1",
                "base_price_money": {
                  "amount": 500,
                  "currency": "USD"
                }
              },
              {
                "name": "Item 2",
                "quantity": "2",
                "base_price_money": {
                  "amount": 300,
                  "currency": "USD"
                }
              }
            ]
          }
        }
      }
    },
    "CalculateOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The calculated version of the order provided in the request."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "order": {
          "location_id": "D7AVYMEAPJ3A3",
          "line_items": [
            {
              "uid": "ULkg0tQTRK2bkU9fNv3IJD",
              "quantity": "1",
              "name": "Item 1",
              "base_price_money": {
                "amount": 500,
                "currency": "USD"
              },
              "gross_sales_money": {
                "amount": 500,
                "currency": "USD"
              },
              "total_tax_money": {
                "amount": 0,
                "currency": "USD"
              },
              "total_discount_money": {
                "amount": 250,
                "currency": "USD"
              },
              "total_money": {
                "amount": 250,
                "currency": "USD"
              },
              "variation_total_price_money": {
                "amount": 500,
                "currency": "USD"
              },
              "applied_discounts": [
                {
                  "uid": "9zr9S4dxvPAixvn0lpa1VC",
                  "discount_uid": "zGsRZP69aqSSR9lq9euSPB",
                  "applied_money": {
                    "amount": 250,
                    "currency": "USD"
                  }
                }
              ]
            },
            {
              "uid": "mumY8Nun4BC5aKe2yyx5a",
              "quantity": "2",
              "name": "Item 2",
              "base_price_money": {
                "amount": 300,
                "currency": "USD"
              },
              "gross_sales_money": {
                "amount": 600,
                "currency": "USD"
              },
              "total_tax_money": {
                "amount": 0,
                "currency": "USD"
              },
              "total_discount_money": {
                "amount": 300,
                "currency": "USD"
              },
              "total_money": {
                "amount": 300,
                "currency": "USD"
              },
              "variation_total_price_money": {
                "amount": 600,
                "currency": "USD"
              },
              "applied_discounts": [
                {
                  "uid": "qa8LwwZK82FgSEkQc2HYVC",
                  "discount_uid": "zGsRZP69aqSSR9lq9euSPB",
                  "applied_money": {
                    "amount": 300,
                    "currency": "USD"
                  }
                }
              ]
            }
          ],
          "discounts": [
            {
              "uid": "zGsRZP69aqSSR9lq9euSPB",
              "name": "50% Off",
              "percentage": "50",
              "applied_money": {
                "amount": 550,
                "currency": "USD"
              },
              "type": "FIXED_PERCENTAGE",
              "scope": "ORDER"
            }
          ],
          "created_at": "2020-05-18T16:30:49.614Z",
          "updated_at": "2020-05-18T16:30:49.614Z",
          "state": "OPEN",
          "version": 1,
          "total_tax_money": {
            "amount": 0,
            "currency": "USD"
          },
          "total_discount_money": {
            "amount": 550,
            "currency": "USD"
          },
          "total_tip_money": {
            "amount": 0,
            "currency": "USD"
          },
          "total_money": {
            "amount": 550,
            "currency": "USD"
          },
          "total_service_charge_money": {
            "amount": 0,
            "currency": "USD"
          },
          "net_amounts": {
            "total_money": {
              "amount": 550,
              "currency": "USD"
            },
            "tax_money": {
              "amount": 0,
              "currency": "USD"
            },
            "discount_money": {
              "amount": 550,
              "currency": "USD"
            },
            "tip_money": {
              "amount": 0,
              "currency": "USD"
            },
            "service_charge_money": {
              "amount": 0,
              "currency": "USD"
            }
          }
        }
      }
    },
    "CancelInvoiceRequest": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "description": "The version of the `invoice` to cancel.\nIf you do not know the version, you can call \n`GetInvoice](#endpoint-Invoices-GetInvoice) or [ListInvoices`."
        }
      },
      "description": "Describes a `CancelInvoice` request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "version": 0
        }
      }
    },
    "CancelInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/Invoice",
          "description": "The canceled invoice."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        }
      },
      "description": "The response returned by the `CancelInvoice` request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "invoice": {
          "id": "gt2zv1z6mnUm1V7KMxxf3w",
          "version": 1,
          "location_id": "ES0RJRZYEC39A",
          "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
          "payment_requests": [
            {
              "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
              "request_method": "EMAIL",
              "request_type": "BALANCE",
              "due_date": "2030-01-24",
              "tipping_enabled": true,
              "reminders": [
                {
                  "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                  "relative_scheduled_days": -1,
                  "message": "Your invoice is due tomorrow",
                  "status": "PENDING"
                }
              ],
              "computed_amount_money": {
                "amount": 10000,
                "currency": "USD"
              },
              "total_completed_amount_money": {
                "amount": 0,
                "currency": "USD"
              }
            }
          ],
          "invoice_number": "inv-100",
          "title": "Event Planning Services",
          "description": "We appreciate your business!",
          "scheduled_at": "2030-01-13T10:00:00Z",
          "status": "CANCELED",
          "timezone": "America/Los_Angeles",
          "created_at": "2020-06-18T17:45:13Z",
          "updated_at": "2020-06-18T18:23:11Z",
          "primary_recipient": {
            "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "phone_number": "1-212-555-4240"
          }
        }
      }
    },
    "CancelPaymentByIdempotencyKeyRequest": {
      "type": "object",
      "required": [
        "idempotency_key"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 45,
          "type": "string",
          "description": "`idempotency_key` identifying the payment to be canceled."
        }
      },
      "description": "Specifies idempotency key of a payment to cancel.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "a7e36d40-d24b-11e8-b568-0800200c9a66"
        }
      }
    },
    "CancelPaymentByIdempotencyKeyResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Return value from the\n[CancelPaymentByIdempotencyKey](#endpoint-payments-cancelpaymentbyidempotencykey) endpoint.\nOn success, `errors` will be empty.",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "CancelPaymentRequest": {
      "type": "object",
      "properties": {},
      "description": "Cancels (voids) a payment before it has been completed.\nNote: only payments created with `autocomplete` set to false can be canceled.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {}
      }
    },
    "CancelPaymentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The successfully canceled `Payment` object."
        }
      },
      "description": "Return value from the [CancelPayment](#endpoint-payments-cancelpayment) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "payment": {
          "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
          "created_at": "2018-10-17T20:38:46.743Z",
          "updated_at": "2018-10-17T20:38:57.693Z",
          "amount_money": {
            "amount": 200,
            "currency": "USD"
          },
          "app_fee_money": {
            "amount": 10,
            "currency": "USD"
          },
          "total_money": {
            "amount": 200,
            "currency": "USD"
          },
          "status": "CANCELED",
          "source_type": "CARD",
          "card_details": {
            "status": "VOIDED",
            "card": {
              "card_brand": "VISA",
              "last_4": "1234",
              "exp_month": 2,
              "exp_year": 2024,
              "fingerprint": "sq-1-9PP0tWfcM6vIsYmfsesdjfhduHSDFNdJFNDfDNFjdfjpseirDErsaP",
              "card_type": "DEBIT",
              "prepaid_type": "PREPAID",
              "bin": "411111"
            },
            "entry_method": "KEYED",
            "cvv_status": "CVV_ACCEPTED",
            "avs_status": "AVS_ACCEPTED",
            "auth_result_code": "eWZBDh",
            "statement_description": "SQ *MY MERCHANT"
          },
          "location_id": "XTI0H92143A39",
          "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
          "reference_id": "123456",
          "note": "Brief description",
          "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I"
        }
      }
    },
    "CancelSubscriptionRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines parameters in a \n[CancelSubscription](#endpoint-subscriptions-cancelsubscription) endpoint request.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CancelSubscriptionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        },
        "subscription": {
          "$ref": "#/definitions/Subscription",
          "description": "The canceled subscription."
        }
      },
      "description": "Defines fields that are included in a \n[CancelSubscription](#endpoint-subscriptions-cancelsubscription) response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "subscription": {
          "id": "910afd30-464a-4e00-a8d8-2296eEXAMPLE",
          "location_id": "S8GWD5R9QB376",
          "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
          "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
          "card_id": "ccof:qy5x8hHGYsgLrp4Q4GB",
          "start_date": "2020-04-24",
          "canceled_date": "2020-05-01",
          "paid_until_date": "2020-05-01",
          "status": "ACTIVE",
          "created_at": "2020-08-03T21:53:10Z",
          "version": 1594311617331,
          "timezone": "America/Los_Angeles"
        }
      }
    },
    "CancelTerminalCheckoutRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "CancelTerminalCheckoutResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "checkout": {
          "$ref": "#/definitions/TerminalCheckout",
          "description": "The updated `TerminalCheckout`"
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "checkout": {
          "id": "S1yDlPQx7slqO",
          "amount_money": {
            "amount": 123,
            "currency": "USD"
          },
          "reference_id": "id36815",
          "device_options": {
            "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
            "tip_settings": {
              "allow_tipping": true
            },
            "skip_receipt_screen": true
          },
          "status": "CANCELED",
          "cancel_reason": "SELLER_CANCELED",
          "created_at": "2020-03-16T15:31:19.934Z",
          "updated_at": "2020-03-16T15:31:45.787Z",
          "app_id": "APP_ID",
          "deadline_duration": "PT10M"
        }
      }
    },
    "CaptureTransactionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.python",
        "csharp": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.csharp",
        "java": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.java",
        "php": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.php",
        "javascript": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.javascript",
        "ruby": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.ruby"
      }
    },
    "CaptureTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.python",
        "csharp": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.csharp",
        "java": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.java",
        "php": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.php",
        "javascript": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.javascript",
        "ruby": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.ruby"
      }
    },
    "Card": {
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 64,
          "type": "string",
          "description": "Unique ID for this card. Generated by Square.",
          "x-read-only": true
        },
        "card_brand": {
          "type": "string",
          "description": "The card\u0027s brand.\nSee [CardBrand](#type-cardbrand) for possible values",
          "x-read-only": true
        },
        "last_4": {
          "maxLength": 4,
          "type": "string",
          "description": "The last 4 digits of the card number.",
          "x-read-only": true
        },
        "exp_month": {
          "type": "integer",
          "format": "int64",
          "description": "The expiration month of the associated card as an integer between 1 and 12."
        },
        "exp_year": {
          "type": "integer",
          "format": "int64",
          "description": "The four-digit year of the card\u0027s expiration date."
        },
        "cardholder_name": {
          "maxLength": 96,
          "type": "string",
          "description": "The name of the cardholder."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The billing address for this card."
        },
        "fingerprint": {
          "maxLength": 255,
          "type": "string",
          "description": "__Not currently set.__ Intended as a Square-assigned identifier, based\non the card number, to identify the card across multiple locations within a\nsingle application.",
          "x-read-only": true
        },
        "card_type": {
          "type": "string",
          "description": "The type of the card.\nThe Card object includes this field only in response to Payments API calls.\nSee [CardType](#type-cardtype) for possible values",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        },
        "prepaid_type": {
          "type": "string",
          "description": "Indicates whether the Card is prepaid or not.\nThe Card object includes this field only in response to Payments API calls.\nSee [CardPrepaidType](#type-cardprepaidtype) for possible values",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        },
        "bin": {
          "maxLength": 6,
          "type": "string",
          "description": "The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API\nreturns this field.",
          "x-read-only": true
        }
      },
      "description": "Represents the payment details of a card to be used for payments. These\ndetails are determined by the `card_nonce` generated by `SqPaymentForm`.",
      "x-release-status": "PUBLIC"
    },
    "CardPaymentDetails": {
      "type": "object",
      "properties": {
        "status": {
          "maxLength": 50,
          "type": "string",
          "description": "The card payment\u0027s current state. It can be one of: `AUTHORIZED`, `CAPTURED`, `VOIDED`,\n`FAILED`."
        },
        "card": {
          "$ref": "#/definitions/Card",
          "description": "The credit card\u0027s non-confidential details."
        },
        "entry_method": {
          "maxLength": 50,
          "type": "string",
          "description": "The method used to enter the card\u0027s details for the payment.  Can be\n`KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`."
        },
        "cvv_status": {
          "maxLength": 50,
          "type": "string",
          "description": "Status code returned from the Card Verification Value (CVV) check. Can be\n`CVV_ACCEPTED`, `CVV_REJECTED`, `CVV_NOT_CHECKED`."
        },
        "avs_status": {
          "maxLength": 50,
          "type": "string",
          "description": "Status code returned from the Address Verification System (AVS) check. Can be\n`AVS_ACCEPTED`, `AVS_REJECTED`, `AVS_NOT_CHECKED`."
        },
        "auth_result_code": {
          "maxLength": 10,
          "type": "string",
          "description": "Status code returned by the card issuer that describes the payment\u0027s\nauthorization status."
        },
        "application_identifier": {
          "maxLength": 32,
          "type": "string",
          "description": "For EMV payments, identifies the EMV application used for the payment."
        },
        "application_name": {
          "maxLength": 16,
          "type": "string",
          "description": "For EMV payments, the human-readable name of the EMV application used for the payment."
        },
        "application_cryptogram": {
          "maxLength": 16,
          "type": "string",
          "description": "For EMV payments, the cryptogram generated for the payment."
        },
        "verification_method": {
          "maxLength": 50,
          "type": "string",
          "description": "For EMV payments, method used to verify the cardholder\u0027s identity.  Can be one of\n`PIN`, `SIGNATURE`, `PIN_AND_SIGNATURE`, `ON_DEVICE`, or `NONE`."
        },
        "verification_results": {
          "maxLength": 50,
          "type": "string",
          "description": "For EMV payments, the results of the cardholder verification.  Can be one of\n`SUCCESS`, `FAILURE`, or `UNKNOWN`."
        },
        "statement_description": {
          "maxLength": 50,
          "type": "string",
          "description": "The statement description sent to the card networks.\n\nNote: The actual statement description will vary and is likely to be truncated and appended with\nadditional information on a per issuer basis."
        },
        "device_details": {
          "$ref": "#/definitions/DeviceDetails",
          "description": "Details about the device that took the payment."
        },
        "refund_requires_card_presence": {
          "type": "boolean",
          "description": "Whether or not the card is required to be physically present in order for the payment to\nbe refunded.  If true, the card is required to be present.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        }
      },
      "description": "Reflects the current status of a card payment.",
      "x-release-status": "PUBLIC"
    },
    "CashDrawerDevice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The device Square-issued ID"
        },
        "name": {
          "type": "string",
          "description": "The device merchant-specified name."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CashDrawerShift": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The shift unique ID."
        },
        "state": {
          "type": "string",
          "description": "The shift current state.\nSee [CashDrawerShiftState](#type-cashdrawershiftstate) for possible values"
        },
        "opened_at": {
          "type": "string",
          "description": "The time when the shift began, in ISO 8601 format."
        },
        "ended_at": {
          "type": "string",
          "description": "The time when the shift ended, in ISO 8601 format."
        },
        "closed_at": {
          "type": "string",
          "description": "The time when the shift was closed, in ISO 8601 format."
        },
        "employee_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all employees that were logged into Square Point of Sale at any\npoint while the cash drawer shift was open."
        },
        "opening_employee_id": {
          "type": "string",
          "description": "The ID of the employee that started the cash drawer shift."
        },
        "ending_employee_id": {
          "type": "string",
          "description": "The ID of the employee that ended the cash drawer shift."
        },
        "closing_employee_id": {
          "type": "string",
          "description": "The ID of the employee that closed the cash drawer shift by auditing\nthe cash drawer contents."
        },
        "description": {
          "type": "string",
          "description": "The free-form text description of a cash drawer by an employee."
        },
        "opened_cash_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money in the cash drawer at the start of the shift.\nThe amount must be greater than or equal to zero."
        },
        "cash_payment_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money added to the cash drawer from cash payments.\nThis is computed by summing all events with the types CASH_TENDER_PAYMENT and\nCASH_TENDER_CANCELED_PAYMENT. The amount is always greater than or equal to\nzero."
        },
        "cash_refunds_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money removed from the cash drawer from cash refunds.\nIt is computed by summing the events of type CASH_TENDER_REFUND. The amount\nis always greater than or equal to zero."
        },
        "cash_paid_in_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money added to the cash drawer for reasons other than cash\npayments. It is computed by summing the events of type PAID_IN. The amount is\nalways greater than or equal to zero."
        },
        "cash_paid_out_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money removed from the cash drawer for reasons other than\ncash refunds. It is computed by summing the events of type PAID_OUT. The amount\nis always greater than or equal to zero."
        },
        "expected_cash_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money that should be in the cash drawer at the end of the\nshift, based on the shift\u0027s other money amounts.\nThis can be negative if employees have not correctly recorded all the events\non the cash drawer.\ncash_paid_out_money is a summation of amounts from cash_payment_money (zero\nor positive), cash_refunds_money (zero or negative), cash_paid_in_money (zero\nor positive), and cash_paid_out_money (zero or negative) event types."
        },
        "closed_cash_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money found in the cash drawer at the end of the shift\nby an auditing employee. The amount should be positive."
        },
        "device": {
          "$ref": "#/definitions/CashDrawerDevice",
          "description": "The device running Square Point of Sale that was connected to the cash drawer."
        }
      },
      "description": "This model gives the details of a cash drawer shift.\nThe cash_payment_money, cash_refund_money, cash_paid_in_money,\nand cash_paid_out_money fields are all computed by summing their respective\nevent types.",
      "x-release-status": "PUBLIC"
    },
    "CashDrawerShiftEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the event."
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee that created the event."
        },
        "event_type": {
          "type": "string",
          "description": "The type of cash drawer shift event.\nSee [CashDrawerEventType](#type-cashdrawereventtype) for possible values"
        },
        "event_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money that was added to or removed from the cash drawer\nin the event. The amount can be positive (for added money), negative\n(for removed money), or zero (for other tender type payments)."
        },
        "created_at": {
          "type": "string",
          "description": "The event time in ISO 8601 format."
        },
        "description": {
          "type": "string",
          "description": "An optional description of the event, entered by the employee that\ncreated the event."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CashDrawerShiftSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The shift unique ID."
        },
        "state": {
          "type": "string",
          "description": "The shift current state.\nSee [CashDrawerShiftState](#type-cashdrawershiftstate) for possible values"
        },
        "opened_at": {
          "type": "string",
          "description": "The shift start time in ISO 8601 format."
        },
        "ended_at": {
          "type": "string",
          "description": "The shift end time in ISO 8601 format."
        },
        "closed_at": {
          "type": "string",
          "description": "The shift close time in ISO 8601 format."
        },
        "description": {
          "type": "string",
          "description": "An employee free-text description of a cash drawer shift."
        },
        "opened_cash_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money in the cash drawer at the start of the shift. This\nmust be a positive amount."
        },
        "expected_cash_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money that should be in the cash drawer at the end of the\nshift, based on the cash drawer events on the shift.\nThe amount is correct if all shift employees accurately recorded their\ncash drawer shift events. Unrecorded events and events with the wrong amount\nresult in an incorrect expected_cash_money amount that can be negative."
        },
        "closed_cash_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money found in the cash drawer at the end of the shift by\nan auditing employee. The amount must be greater than or equal to zero."
        }
      },
      "description": "The summary of a closed cash drawer shift.\nThis model contains only the money counted to start a cash drawer shift, counted\nat the end of the shift, and the amount that should be in the drawer at shift\nend based on summing all cash drawer shift events.",
      "x-release-status": "PUBLIC"
    },
    "CatalogCategory": {
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The category name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
        }
      },
      "description": "A category to which a `CatalogItem` instance belongs.",
      "x-release-status": "PUBLIC",
      "example": {
        "object": {
          "type": "CATEGORY",
          "id": "#Beverages",
          "present_at_all_locations": true,
          "category_data": {
            "name": "Beverages"
          }
        }
      }
    },
    "CatalogCustomAttributeDefinition": {
      "type": "object",
      "required": [
        "type",
        "name",
        "allowed_object_types"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of this custom attribute. Cannot be modified after creation.\nRequired.\nSee [CatalogCustomAttributeDefinitionType](#type-catalogcustomattributedefinitiontype) for possible values"
        },
        "name": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": " The name of this definition for API and seller-facing UI purposes.\nThe name must be unique within the (merchant, application_id) pair. Required.\nMay not be empty and may not exceed 255 characters. Can be modified after creation."
        },
        "description": {
          "maxLength": 255,
          "type": "string",
          "description": "Seller-oriented description of the meaning of this Custom Attribute,\nany constraints that the seller should observe, etc. May be displayed as a tooltip in Square UIs."
        },
        "source_application": {
          "$ref": "#/definitions/SourceApplication",
          "description": "__Read only.__ Contains information about the application that\ncreated this custom attribute definition."
        },
        "allowed_object_types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of Catalog Object Types that this Custom Attribute may be applied to.\nCurrently, only `ITEM` and `ITEM_VARIATION` are allowed. At least one type must be included.\nSee [CatalogObjectType](#type-catalogobjecttype) for possible values"
        },
        "seller_visibility": {
          "type": "string",
          "description": "The visibility of a custom attribute in seller-facing UIs (including Square Point\nof Sale applications and Square Dashboard). May be modified.\nSee [CatalogCustomAttributeDefinitionSellerVisibility](#type-catalogcustomattributedefinitionsellervisibility) for possible values"
        },
        "app_visibility": {
          "type": "string",
          "description": "The visibility of a custom attribute to applications other than the application\nthat created the attribute.\nSee [CatalogCustomAttributeDefinitionAppVisibility](#type-catalogcustomattributedefinitionappvisibility) for possible values"
        },
        "string_config": {
          "$ref": "#/definitions/CatalogCustomAttributeDefinitionStringConfig",
          "description": "Optionally, populated when `type` \u003d `STRING`, unset otherwise."
        },
        "number_config": {
          "$ref": "#/definitions/CatalogCustomAttributeDefinitionNumberConfig",
          "description": ""
        },
        "selection_config": {
          "$ref": "#/definitions/CatalogCustomAttributeDefinitionSelectionConfig",
          "description": "Populated when `type` is set to `SELECTION`, unset otherwise."
        },
        "custom_attribute_usage_count": {
          "type": "integer",
          "description": "__Read-only.__ The number of custom attributes that reference this\ncustom attribute definition. Set by the server in response to a ListCatalog\nrequest with `include_counts` set to `true`.  If the actual count is greater\nthan 100, `custom_attribute_usage_count` will be set to `100`."
        },
        "key": {
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9_-]*$",
          "maxLength": 60,
          "type": "string",
          "description": "The name of the desired custom attribute key that can be used to access\nthe custom attribute value on catalog objects. Cannot be modified after the\ncustom attribute definition has been created.\nMust be between 1 and 60 characters, and may only contain the characters [a-zA-Z0-9_-]."
        }
      },
      "description": "Contains information defining a custom attribute. Custom attributes are\nintended to store additional information about a catalog object or to associate a\ncatalog object with an entity in another system. Do not use custom attributes\nto store any sensitive information (personally identifiable information, card details, etc.).\n[Read more about custom attributes](/catalog-api/add-custom-attributes)",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogCustomAttributeDefinitionNumberConfig": {
      "type": "object",
      "properties": {
        "precision": {
          "maximum": 5,
          "minimum": 0,
          "type": "integer",
          "description": "An integer between 0 and 5 that represents the maximum number of\npositions allowed after the decimal in number custom attribute values\nFor example:\n\n- if the precision is 0, the quantity can be 1, 2, 3, etc.\n- if the precision is 1, the quantity can be 0.1, 0.2, etc.\n- if the precision is 2, the quantity can be 0.01, 0.12, etc.\n\nDefault: 5"
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogCustomAttributeDefinitionSelectionConfig": {
      "type": "object",
      "properties": {
        "max_allowed_selections": {
          "maximum": 100,
          "type": "integer",
          "description": "The maximum number of selections that can be set. The maximum value for this\nattribute is 100. The default value is 1. The value can be modified, but changing the value will not\naffect existing custom attribute values on objects. Clients need to\nhandle custom attributes with more selected values than allowed by this limit."
        },
        "allowed_selections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection"
          },
          "description": "The set of valid `CatalogCustomAttributeSelections`. Up to a maximum of 100\nselections can be defined. Can be modified."
        }
      },
      "description": "Configuration associated with `SELECTION`-type custom attribute definitions.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "uid": {
          "type": "string",
          "description": "Unique ID set by Square."
        },
        "name": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "Selection name, unique within `allowed_selections`."
        }
      },
      "description": "A named selection for this `SELECTION`-type custom attribute definition.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogCustomAttributeDefinitionStringConfig": {
      "type": "object",
      "properties": {
        "enforce_uniqueness": {
          "type": "boolean",
          "description": "If true, each Custom Attribute instance associated with this Custom Attribute\nDefinition must have a unique value within the seller\u0027s catalog. For\nexample, this may be used for a value like a SKU that should not be\nduplicated within a seller\u0027s catalog. May not be modified after the\ndefinition has been created."
        }
      },
      "description": "Configuration associated with Custom Attribute Definitions of type `STRING`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogCustomAttributeValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the custom attribute."
        },
        "string_value": {
          "type": "string",
          "description": "The string value of the custom attribute.  Populated if `type` \u003d `STRING`."
        },
        "custom_attribute_definition_id": {
          "type": "string",
          "description": "__Read-only.__ The id of the `CatalogCustomAttributeDefinition` this value belongs to."
        },
        "type": {
          "type": "string",
          "description": "__Read-only.__ A copy of type from the associated `CatalogCustomAttributeDefinition`.\nSee [CatalogCustomAttributeDefinitionType](#type-catalogcustomattributedefinitiontype) for possible values"
        },
        "number_value": {
          "type": "string",
          "description": "Populated if `type` \u003d `NUMBER`. Contains a string\nrepresentation of a decimal number, using a `.` as the decimal separator."
        },
        "boolean_value": {
          "type": "boolean",
          "description": "A `true` or `false` value. Populated if `type` \u003d `BOOLEAN`."
        },
        "selection_uid_values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "One or more choices from `allowed_selections`. Populated if `type` \u003d `SELECTION`."
        },
        "key": {
          "type": "string",
          "description": "__Read-only.__ A copy of key from the associated `CatalogCustomAttributeDefinition`."
        }
      },
      "description": "An instance of a custom attribute. Custom attributes can be defined and\nadded to `ITEM` and `ITEM_VARIATION` type catalog objects.\n[Read more about custom attributes](/catalog-api/add-custom-attributes).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogDiscount": {
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The discount name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
        },
        "discount_type": {
          "type": "string",
          "description": "Indicates whether the discount is a fixed amount or percentage, or entered at the time of sale.\nSee [CatalogDiscountType](#type-catalogdiscounttype) for possible values"
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not use this field for amount-based or variable discounts."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the discount. Specify an amount of `0` if `discount_type` is `VARIABLE_AMOUNT`.\n\nDo not use this field for percentage-based or variable discounts."
        },
        "pin_required": {
          "type": "boolean",
          "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the\ndiscount to a payment in the Square Point of Sale app."
        },
        "label_color": {
          "type": "string",
          "description": "The color of the discount display label in the Square Point of Sale app. This must be a valid hex color code."
        },
        "modify_tax_basis": {
          "type": "string",
          "description": "Indicates whether this discount should reduce the price used to calculate tax.\n\nMost discounts should use `MODIFY_TAX_BASIS`. However, in some circumstances taxes must\nbe calculated based on an item\u0027s price, ignoring a particular discount. For example,\nin many US jurisdictions, a manufacturer coupon or instant rebate reduces the price a\ncustomer pays but does not reduce the sale price used to calculate how much sales tax is\ndue. In this case, the discount representing that manufacturer coupon should have\n`DO_NOT_MODIFY_TAX_BASIS` for this field.\n\nIf you are unsure whether you need to use this field, consult your tax professional.\nSee [CatalogDiscountModifyTaxBasis](#type-catalogdiscountmodifytaxbasis) for possible values"
        }
      },
      "description": "A discount applicable to items.",
      "x-release-status": "PUBLIC",
      "example": {
        "object": {
          "type": "DISCOUNT",
          "id": "#Maythe4th",
          "present_at_all_locations": true,
          "discount_data": {
            "name": "Welcome to the Dark(Roast) Side!",
            "discount_type": "FIXED_PERCENTAGE",
            "percentage": "5.4",
            "pin_required": false,
            "label_color": "red"
          }
        }
      }
    },
    "CatalogIdMapping": {
      "type": "object",
      "properties": {
        "client_object_id": {
          "type": "string",
          "description": "The client-supplied temporary `#`-prefixed ID for a new `CatalogObject`."
        },
        "object_id": {
          "type": "string",
          "description": "The permanent ID for the CatalogObject created by the server."
        }
      },
      "description": "A mapping between a temporary client-supplied ID and a permanent server-generated ID. \n\nWhen calling [UpsertCatalogObject](#endpoint-Catalog-UpsertCatalogObject) or \n[BatchUpsertCatalogObjects](#endpoint-Catalog-BatchUpsertCatalogObjects) to  \ncreate a [CatalogObject](#type-CatalogObject) instance, you can supply \na temporary ID for the to-be-created object, especially when the object is to be referenced \nelsewhere in the same request body. This temporary ID can be any string unique within \nthe call, but must be prefixed by \"#\". \n\nAfter the request is sumbitted and the object created, a permanent server-generated ID is assigned \nto the new object. The permanent ID is unique across the Square catalog.",
      "x-release-status": "PUBLIC"
    },
    "CatalogImage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The internal name to identify this image in calls to the Square API."
        },
        "url": {
          "type": "string",
          "description": "The URL of this image, generated by Square after an image is uploaded\nusing the `CreateCatalogImage` endpoint."
        },
        "caption": {
          "type": "string",
          "description": "A caption that describes what is shown in the image. Displayed in the\nSquare Online Store. This is a searchable attribute for use in applicable query filters."
        }
      },
      "description": "An image file to use in Square catalogs. It can be associated with catalog\nitems, item variations, and categories.",
      "x-release-status": "PUBLIC"
    },
    "CatalogInfoRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.python",
        "csharp": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.csharp",
        "java": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.java",
        "php": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.php",
        "javascript": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.javascript",
        "ruby": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.ruby"
      }
    },
    "CatalogInfoResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The set of errors encountered."
        },
        "limits": {
          "$ref": "#/definitions/CatalogInfoResponseLimits",
          "description": ""
        },
        "standard_unit_description_group": {
          "$ref": "#/definitions/StandardUnitDescriptionGroup",
          "description": "Names and abbreviations for standard units."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "limits": {
          "batch_upsert_max_objects_per_batch": 1000,
          "batch_upsert_max_total_objects": 10000,
          "batch_retrieve_max_object_ids": 1000,
          "search_max_page_limit": 1000,
          "batch_delete_max_object_ids": 200,
          "update_item_taxes_max_item_ids": 1000,
          "update_item_taxes_max_taxes_to_enable": 1000,
          "update_item_taxes_max_taxes_to_disable": 1000,
          "update_item_modifier_lists_max_item_ids": 1000,
          "update_item_modifier_lists_max_modifier_lists_to_enable": 1000,
          "update_item_modifier_lists_max_modifier_lists_to_disable": 1000
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.python",
        "csharp": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.csharp",
        "java": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.java",
        "php": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.php",
        "javascript": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.javascript",
        "ruby": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.ruby"
      }
    },
    "CatalogInfoResponseLimits": {
      "type": "object",
      "properties": {
        "batch_upsert_max_objects_per_batch": {
          "type": "integer",
          "description": "The maximum number of objects that may appear within a single batch in a\n`/v2/catalog/batch-upsert` request."
        },
        "batch_upsert_max_total_objects": {
          "type": "integer",
          "description": "The maximum number of objects that may appear across all batches in a\n`/v2/catalog/batch-upsert` request."
        },
        "batch_retrieve_max_object_ids": {
          "type": "integer",
          "description": "The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve`\nrequest."
        },
        "search_max_page_limit": {
          "type": "integer",
          "description": "The maximum number of results that may be returned in a page of a\n`/v2/catalog/search` response."
        },
        "batch_delete_max_object_ids": {
          "type": "integer",
          "description": "The maximum number of object IDs that may be included in a single\n`/v2/catalog/batch-delete` request."
        },
        "update_item_taxes_max_item_ids": {
          "type": "integer",
          "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-taxes` request."
        },
        "update_item_taxes_max_taxes_to_enable": {
          "type": "integer",
          "description": "The maximum number of tax IDs to be enabled that may be included in a single\n`/v2/catalog/update-item-taxes` request."
        },
        "update_item_taxes_max_taxes_to_disable": {
          "type": "integer",
          "description": "The maximum number of tax IDs to be disabled that may be included in a single\n`/v2/catalog/update-item-taxes` request."
        },
        "update_item_modifier_lists_max_item_ids": {
          "type": "integer",
          "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-modifier-lists` request."
        },
        "update_item_modifier_lists_max_modifier_lists_to_enable": {
          "type": "integer",
          "description": "The maximum number of modifier list IDs to be enabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request."
        },
        "update_item_modifier_lists_max_modifier_lists_to_disable": {
          "type": "integer",
          "description": "The maximum number of modifier list IDs to be disabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CatalogItem": {
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 512,
          "type": "string",
          "description": "The item\u0027s name. This is a searchable attribute for use in applicable query filters, its value must not be empty, and the length is of Unicode code points."
        },
        "description": {
          "maxLength": 4096,
          "type": "string",
          "description": "The item\u0027s description. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
        },
        "abbreviation": {
          "maxLength": 24,
          "type": "string",
          "description": "The text of the item\u0027s display label in the Square Point of Sale app. Only up to the first five characters of the string are used.\nThis attribute is searchable, and its value length is of Unicode code points."
        },
        "label_color": {
          "type": "string",
          "description": "The color of the item\u0027s display label in the Square Point of Sale app. This must be a valid hex color code."
        },
        "available_online": {
          "type": "boolean",
          "description": "If `true`, the item can be added to shipping orders from the merchant\u0027s online store."
        },
        "available_for_pickup": {
          "type": "boolean",
          "description": "If `true`, the item can be added to pickup orders from the merchant\u0027s online store."
        },
        "available_electronically": {
          "type": "boolean",
          "description": "If `true`, the item can be added to electronically fulfilled orders from the merchant\u0027s online store."
        },
        "category_id": {
          "type": "string",
          "description": "The ID of the item\u0027s category, if any."
        },
        "tax_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of IDs indicating the taxes enabled for\nthis item. When updating an item, any taxes listed here will be added to the item.\nTaxes may also be added to or deleted from an item using `UpdateItemTaxes`."
        },
        "modifier_list_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogItemModifierListInfo"
          },
          "description": "A set of `CatalogItemModifierListInfo` objects\nrepresenting the modifier lists that apply to this item, along with the overrides and min\nand max limits that are specific to this item. Modifier lists\nmay also be added to or deleted from an item using `UpdateItemModifierLists`."
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of CatalogObjects containing the `CatalogItemVariation`s for this item."
        },
        "product_type": {
          "type": "string",
          "description": "The product type of the item. May not be changed once an item has been created.\n\nOnly items of product type `REGULAR` or `APPOINTMENTS_SERVICE` may be created by this API; items with other product\ntypes are read-only.\nSee [CatalogItemProductType](#type-catalogitemproducttype) for possible values"
        },
        "skip_modifier_screen": {
          "type": "boolean",
          "description": "If `false`, the Square Point of Sale app will present the `CatalogItem`\u0027s\ndetails screen immediately, allowing the merchant to choose `CatalogModifier`s\nbefore adding the item to the cart.  This is the default behavior.\n\nIf `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected\nmodifiers, and merchants can edit modifiers by drilling down onto the item\u0027s details.\n\nThird-party clients are encouraged to implement similar behaviors."
        },
        "item_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogItemOptionForItem"
          },
          "description": "List of item options IDs for this item. Used to manage and group item\nvariations in a specified order.\n\nMaximum: 6 item options.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "An [CatalogObject](#type-CatalogObject) instance of the `ITEM` type, also referred to as an item, in the catalog.",
      "x-release-status": "PUBLIC",
      "example": {
        "object": {
          "type": "ITEM",
          "id": "#Cocoa",
          "present_at_all_locations": true,
          "item_data": {
            "name": "Cocoa",
            "description": "Hot chocolate",
            "abbreviation": "Ch",
            "visibility": "PRIVATE"
          }
        }
      }
    },
    "CatalogItemModifierListInfo": {
      "type": "object",
      "required": [
        "modifier_list_id"
      ],
      "properties": {
        "modifier_list_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the `CatalogModifierList` controlled by this `CatalogModifierListInfo`."
        },
        "modifier_overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogModifierOverride"
          },
          "description": "A set of `CatalogModifierOverride` objects that override whether a given `CatalogModifier` is enabled by default."
        },
        "min_selected_modifiers": {
          "type": "integer",
          "description": "If 0 or larger, the smallest number of `CatalogModifier`s that must be selected from this `CatalogModifierList`."
        },
        "max_selected_modifiers": {
          "type": "integer",
          "description": "If 0 or larger, the largest number of `CatalogModifier`s that can be selected from this `CatalogModifierList`."
        },
        "enabled": {
          "type": "boolean",
          "description": "If `true`, enable this `CatalogModifierList`. The default value is `true`."
        }
      },
      "description": "Options to control the properties of a `CatalogModifierList` applied to a `CatalogItem` instance.",
      "x-release-status": "PUBLIC"
    },
    "CatalogItemOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The item option\u0027s display name for the seller. Must be unique across\nall item options. This is a searchable attribute for use in applicable query filters."
        },
        "display_name": {
          "type": "string",
          "description": "The item option\u0027s display name for the customer. This is a searchable attribute for use in applicable query filters."
        },
        "description": {
          "type": "string",
          "description": "The item option\u0027s human-readable description. Displayed in the Square\nPoint of Sale app for the seller and in the Online Store or on receipts for\nthe buyer. This is a searchable attribute for use in applicable query filters."
        },
        "show_colors": {
          "type": "boolean",
          "description": "If true, display colors for entries in `values` when present."
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of CatalogObjects containing the\n`CatalogItemOptionValue`s for this item."
        },
        "item_count": {
          "type": "integer",
          "format": "int64",
          "description": "The number of `CatalogItem`s currently associated\nwith this item option. Present only if the `include_counts` was specified\nin the request. Any count over 100 will be returned as `100`."
        }
      },
      "description": "A group of variations for a `CatalogItem`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogItemOptionForItem": {
      "type": "object",
      "properties": {
        "item_option_id": {
          "type": "string",
          "description": "The unique id of the item option, used to form the dimensions of the item option matrix in a specified order."
        }
      },
      "description": " An option that can be assigned to an item.\nFor example, a t-shirt item may offer a color option or a size option.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogItemOptionValue": {
      "type": "object",
      "properties": {
        "item_option_id": {
          "type": "string",
          "description": "Unique ID of the associated item option."
        },
        "name": {
          "type": "string",
          "description": "Name of this item option value. This is a searchable attribute for use in applicable query filters."
        },
        "description": {
          "type": "string",
          "description": "A human-readable description for the option value. This is a searchable attribute for use in applicable query filters."
        },
        "color": {
          "type": "string",
          "description": "The HTML-supported hex color for the item option (e.g., \"#ff8d4e85\").\nOnly displayed if `show_colors` is enabled on the parent `ItemOption`. When\nleft unset, `color` defaults to white (\"#ffffff\") when `show_colors` is\nenabled on the parent `ItemOption`."
        },
        "ordinal": {
          "type": "integer",
          "description": "Determines where this option value appears in a list of option values."
        },
        "item_variation_count": {
          "maximum": 100,
          "type": "integer",
          "format": "int64",
          "description": "The number of `CatalogItemVariation`s that\ncurrently use this item option value. Present only if `retrieve_counts`\nwas specified on the request used to retrieve the parent item option of this\nvalue."
        }
      },
      "description": "An enumerated value that can link a\n`CatalogItemVariation` to an item option as one of\nits item option values.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogItemOptionValueForItemVariation": {
      "type": "object",
      "properties": {
        "item_option_id": {
          "type": "string",
          "description": "The unique id of an item option."
        },
        "item_option_value_id": {
          "type": "string",
          "description": "The unique id of the selected value for the item option."
        }
      },
      "description": "A `CatalogItemOptionValue` links an item variation to an item option as\nan item option value. For example, a t-shirt item may offer a color option and\na size option. An item option value would represent each variation of t-shirt:\nFor example, \"Color:Red, Size:Small\" or \"Color:Blue, Size:Medium\".",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogItemVariation": {
      "type": "object",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the `CatalogItem` associated with this item variation."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The item variation\u0027s name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
        },
        "sku": {
          "type": "string",
          "description": "The item variation\u0027s SKU, if any. This is a searchable attribute for use in applicable query filters."
        },
        "upc": {
          "type": "string",
          "description": "The item variation\u0027s UPC, if any. This is a searchable attribute for use in applicable query filters.\nIt is only accessible through the Square API, and not exposed in the Square Seller Dashboard,\nSquare Point of Sale or Retail Point of Sale apps."
        },
        "ordinal": {
          "type": "integer",
          "description": "The order in which this item variation should be displayed. This value is read-only. On writes, the ordinal\nfor each item variation within a parent `CatalogItem` is set according to the item variations\u0027s\nposition. On reads, the value is not guaranteed to be sequential or unique.",
          "x-read-only": true
        },
        "pricing_type": {
          "type": "string",
          "description": "Indicates whether the item variation\u0027s price is fixed or determined at the time\nof sale.\nSee [CatalogPricingType](#type-catalogpricingtype) for possible values"
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The item variation\u0027s price, if fixed pricing is used."
        },
        "location_overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemVariationLocationOverrides"
          },
          "description": "Per-location price and inventory overrides."
        },
        "track_inventory": {
          "type": "boolean",
          "description": "If `true`, inventory tracking is active for the variation."
        },
        "inventory_alert_type": {
          "type": "string",
          "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal\nto its `inventory_alert_threshold`.\nSee [InventoryAlertType](#type-inventoryalerttype) for possible values"
        },
        "inventory_alert_threshold": {
          "type": "integer",
          "format": "int64",
          "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer."
        },
        "user_data": {
          "maxLength": 255,
          "type": "string",
          "description": "Arbitrary user metadata to associate with the item variation. This attribute value length is of Unicode code points."
        },
        "service_duration": {
          "type": "integer",
          "format": "int64",
          "description": "If the `CatalogItem` that owns this item variation is of type\n`APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For\nexample, a 30 minute appointment would have the value `1800000`, which is equal to\n30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second)."
        },
        "item_option_values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogItemOptionValueForItemVariation"
          },
          "description": "List of item option values associated with this item variation. Listed\nin the same order as the item options of the parent item.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "measurement_unit_id": {
          "type": "string",
          "description": "ID of the ‘CatalogMeasurementUnit’ that is used to measure the quantity\nsold of this item variation. If left unset, the item will be sold in\nwhole quantities.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "An item variation (i.e., product) in the Catalog object model. Each item\nmay have a maximum of 250 item variations.",
      "x-release-status": "PUBLIC"
    },
    "CatalogMeasurementUnit": {
      "type": "object",
      "properties": {
        "measurement_unit": {
          "$ref": "#/definitions/MeasurementUnit",
          "description": "Indicates the unit used to measure the quantity of a catalog item variation."
        },
        "precision": {
          "type": "integer",
          "description": "An integer between 0 and 5 that represents the maximum number of\npositions allowed after the decimal in quantities measured with this unit.\nFor example:\n\n- if the precision is 0, the quantity can be 1, 2, 3, etc.\n- if the precision is 1, the quantity can be 0.1, 0.2, etc.\n- if the precision is 2, the quantity can be 0.01, 0.12, etc.\n\nDefault: 3"
        }
      },
      "description": "Represents the unit used to measure a `CatalogItemVariation` and\nspecifies the precision for decimal quantities.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogModifier": {
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The modifier name.  This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The modifier price."
        },
        "ordinal": {
          "type": "integer",
          "description": "Determines where this `CatalogModifier` appears in the `CatalogModifierList`."
        },
        "modifier_list_id": {
          "type": "string",
          "description": "The ID of the `CatalogModifierList` associated with this modifier."
        }
      },
      "description": "A modifier applicable to items at the time of sale.",
      "x-release-status": "PUBLIC",
      "example": {
        "object": {
          "type": "MODIFIER",
          "present_at_all_locations": true,
          "modifier_data": {
            "name": "Almond Milk",
            "price_money": {
              "amount": 250,
              "currency": "USD"
            }
          }
        }
      }
    },
    "CatalogModifierList": {
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name for the `CatalogModifierList` instance. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
        },
        "ordinal": {
          "type": "integer",
          "description": "Determines where this modifier list appears in a list of `CatalogModifierList` values."
        },
        "selection_type": {
          "type": "string",
          "description": "Indicates whether multiple options from the modifier list\ncan be applied to a single `CatalogItem`.\nSee [CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype) for possible values"
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The options included in the `CatalogModifierList`.\nYou must include at least one `CatalogModifier`.\nEach CatalogObject must have type `MODIFIER` and contain\n`CatalogModifier` data."
        }
      },
      "description": "A list of modifiers applicable to items at the time of sale.\n\nFor example, a \"Condiments\" modifier list applicable to a \"Hot Dog\" item\nmay contain \"Ketchup\", \"Mustard\", and \"Relish\" modifiers.\nUse the `selection_type` field to specify whether or not multiple selections from\nthe modifier list are allowed.",
      "x-release-status": "PUBLIC",
      "example": {
        "type": "MODIFIER_LIST",
        "id": "#MilkType",
        "present_at_all_locations": true,
        "modifier_list_data": {
          "name": "Milk Type",
          "selection_type": "SINGLE",
          "modifiers": [
            {
              "type": "MODIFIER",
              "present_at_all_locations": true,
              "modifier_data": {
                "name": "Whole Milk",
                "price_money": {
                  "amount": 0,
                  "currency": "USD"
                }
              }
            },
            {
              "type": "MODIFIER",
              "present_at_all_locations": true,
              "modifier_data": {
                "name": "Almond Milk",
                "price_money": {
                  "amount": 250,
                  "currency": "USD"
                }
              }
            },
            {
              "type": "MODIFIER",
              "present_at_all_locations": true,
              "modifier_data": {
                "name": "Soy Milk",
                "price_money": {
                  "amount": 250,
                  "currency": "USD"
                }
              }
            }
          ]
        }
      }
    },
    "CatalogModifierOverride": {
      "type": "object",
      "required": [
        "modifier_id"
      ],
      "properties": {
        "modifier_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the `CatalogModifier` whose default behavior is being overridden."
        },
        "on_by_default": {
          "type": "boolean",
          "description": "If `true`, this `CatalogModifier` should be selected by default for this `CatalogItem`."
        }
      },
      "description": "Options to control how to override the default behavior of the specified modifier.",
      "x-release-status": "PUBLIC"
    },
    "CatalogObject": {
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of this object. Each object type has expected\nproperties expressed in a structured format within its corresponding `*_data` field below.\nSee [CatalogObjectType](#type-catalogobjecttype) for possible values"
        },
        "id": {
          "minLength": 1,
          "type": "string",
          "description": "An identifier to reference this object in the catalog. When a new `CatalogObject`\nis inserted, the client should set the id to a temporary identifier starting with\na \"`#`\" character. Other objects being inserted or updated within the same request\nmay use this identifier to refer to the new object.\n\nWhen the server receives the new object, it will supply a unique identifier that\nreplaces the temporary identifier for all future references."
        },
        "updated_at": {
          "type": "string",
          "description": "Last modification [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) in RFC 3339 format, e.g., `\"2016-08-15T23:59:33.123Z\"`\nwould indicate the UTC time (denoted by `Z`) of August 15, 2016 at 23:59:33 and 123 milliseconds."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the object. When updating an object, the version supplied\nmust match the version in the database, otherwise the write will be rejected as conflicting."
        },
        "is_deleted": {
          "type": "boolean",
          "description": "If `true`, the object has been deleted from the database. Must be `false` for new objects\nbeing inserted. When deleted, the `updated_at` field will equal the deletion time."
        },
        "custom_attribute_values": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CatalogCustomAttributeValue"
          },
          "description": "A map (key-value pairs) of application-defined custom attribute values. The value of a key-value pair \nis a `CatalogCustomAttributeValue` object. The key is the `key` attribute \nvalue defined in the associated `CatalogCustomAttributeDefinition` \nobject defined by the application making the request. \n\nIf the `CatalogCustomAttributeDefinition` object is \ndefined by another application, the `CatalogCustomAttributeDefinition`\u0027s key attribute value is prefixed by \nthe defining application ID. For example, if the `CatalogCustomAttributeDefinition` has a `key` attribute of \n\"cocoa_brand\" and the defining application ID is \"abcd1234\", the key in the map is \"abcd1234:cocoa_brand\" if the\napplication making the request is different from the application defining the custom attribute definition. \nOtherwise, the key used in the map is simply \"cocoa-brand\".\n\nApplication-defined custom attributes that are set at a global (location-independent) level.\nCustom attribute values are intended to store additional information about a catalog object\nor associations with an entity in another system. Do not use custom attributes\nto store any sensitive information (personally identifiable information, card details, etc.).",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "catalog_v1_ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogV1Id"
          },
          "description": "The Connect v1 IDs for this object at each location where it is present, where they\ndiffer from the object\u0027s Connect V2 ID. The field will only be present for objects that\nhave been created or modified by legacy APIs."
        },
        "present_at_all_locations": {
          "type": "boolean",
          "description": "If `true`, this object is present at all locations (including future locations), except where specified in\nthe `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),\nexcept where specified in the `present_at_location_ids` field. If not specified, defaults to `true`."
        },
        "present_at_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations where the object is present, even if `present_at_all_locations` is `false`."
        },
        "absent_at_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations where the object is not present, even if `present_at_all_locations` is `true`."
        },
        "image_id": {
          "type": "string",
          "description": "Identifies the `CatalogImage` attached to this `CatalogObject`."
        },
        "item_data": {
          "$ref": "#/definitions/CatalogItem",
          "description": "Structured data for a `CatalogItem`, set for CatalogObjects of type `ITEM`."
        },
        "category_data": {
          "$ref": "#/definitions/CatalogCategory",
          "description": "Structured data for a `CatalogCategory`, set for CatalogObjects of type `CATEGORY`."
        },
        "item_variation_data": {
          "$ref": "#/definitions/CatalogItemVariation",
          "description": "Structured data for a `CatalogItemVariation`, set for CatalogObjects of type `ITEM_VARIATION`."
        },
        "tax_data": {
          "$ref": "#/definitions/CatalogTax",
          "description": "Structured data for a `CatalogTax`, set for CatalogObjects of type `TAX`."
        },
        "discount_data": {
          "$ref": "#/definitions/CatalogDiscount",
          "description": "Structured data for a `CatalogDiscount`, set for CatalogObjects of type `DISCOUNT`."
        },
        "modifier_list_data": {
          "$ref": "#/definitions/CatalogModifierList",
          "description": "Structured data for a `CatalogModifierList`, set for CatalogObjects of type `MODIFIER_LIST`."
        },
        "modifier_data": {
          "$ref": "#/definitions/CatalogModifier",
          "description": "Structured data for a `CatalogModifier`, set for CatalogObjects of type `MODIFIER`."
        },
        "time_period_data": {
          "$ref": "#/definitions/CatalogTimePeriod",
          "description": "Structured data for a `CatalogTimePeriod`, set for CatalogObjects of type `TIME_PERIOD`."
        },
        "product_set_data": {
          "$ref": "#/definitions/CatalogProductSet",
          "description": "Structured data for a `CatalogProductSet`, set for CatalogObjects of type `PRODUCT_SET`."
        },
        "pricing_rule_data": {
          "$ref": "#/definitions/CatalogPricingRule",
          "description": "Structured data for a `CatalogPricingRule`, set for CatalogObjects of type `PRICING_RULE`.\nA `CatalogPricingRule` object often works with a `CatalogProductSet` object or a `CatalogTimePeriod` object."
        },
        "image_data": {
          "$ref": "#/definitions/CatalogImage",
          "description": "Structured data for a `CatalogImage`, set for CatalogObjects of type `IMAGE`."
        },
        "measurement_unit_data": {
          "$ref": "#/definitions/CatalogMeasurementUnit",
          "description": "Structured data for a `CatalogMeasurementUnit`, set for CatalogObjects of type `MEASUREMENT_UNIT`.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "subscription_plan_data": {
          "$ref": "#/definitions/CatalogSubscriptionPlan",
          "description": "Structured data for a `CatalogSubscriptionPlan`, set for CatalogObjects of type `SUBSCRIPTION_PLAN`.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "item_option_data": {
          "$ref": "#/definitions/CatalogItemOption",
          "description": "Structured data for a `CatalogItemOption`, set for CatalogObjects of type `ITEM_OPTION`.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "item_option_value_data": {
          "$ref": "#/definitions/CatalogItemOptionValue",
          "description": "Structured data for a `CatalogItemOptionValue`, set for CatalogObjects of type `ITEM_OPTION_VAL`.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "custom_attribute_definition_data": {
          "$ref": "#/definitions/CatalogCustomAttributeDefinition",
          "description": "Structured data for a `CatalogCustomAttributeDefinition`, set for CatalogObjects of type `CUSTOM_ATTRIBUTE_DEFINITION`.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "quick_amounts_settings_data": {
          "$ref": "#/definitions/CatalogQuickAmountsSettings",
          "description": "Structured data for a `CatalogQuickAmountsSettings`, set for CatalogObjects of type `QUICK_AMOUNTS_SETTINGS`.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "The wrapper object for the Catalog entries of a given object type. \n\nThe type of a particular `CatalogObject` is determined by the value of the\n`type` attribute and only the corresponding data attribute can be set on the `CatalogObject` instance.\nFor example, the following list shows some instances of `CatalogObject` of a given `type` and\ntheir corresponding data atrribute that can be set:\n- For a `CatalogObject` of the `ITEM` type, set the `item_data` attribute to yield the `CatalogItem` object. \n- For a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data` attribute to yield the `CatalogItemVariation` object.\n- For a `CatalogObject` of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier` object.\n- For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data` attribute to yield the `CatalogModifierList` object.\n- For a `CatalogObject` of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory` object.\n- For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data` attribute to yield the `CatalogDiscount` object.\n- For a `CatalogObject` of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax` object.\n- For a `CatalogObject` of the `IMAGE` type, set the `image_data` attribute to yield the `CatalogImageData`  object.\n- For a `CatalogObject` of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data` attribute to yield the `CatalogQuickAmountsSettings` object.\n- For a `CatalogObject` of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield the `CatalogPricingRule` object.\n- For a `CatalogObject` of the `TIME_PERIOD` type, set the `time_period_data` attribute to yield the `CatalogTimePeriod` object.\n- For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data` attribute to yield the `CatalogProductSet`  object.\n- For a `CatalogObject` of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute to yield the `CatalogSubscriptionPlan` object.\n\n\nFor a more detailed discussion of the Catalog data model, please see the\n[Design a Catalog](/catalog-api/design-a-catalog) guide.",
      "x-release-status": "PUBLIC",
      "example": {
        "catalog_object": {
          "type": "{{ [ITEM | ITEM_VARIATION | MODIFIER | MODIFIER_LIST | CATEGORY | DISCOUNT | TAX] }}",
          "id": "{{ set by Catalog during object creation }}",
          "updated_at": "{{ date \u0026 time of most recent update }}",
          "version": "{{ version of the CatalogObject }}",
          "is_deleted": "{{ [true | false] }}",
          "connect_v1_ids": {
            "catalog_v1_id": "{{ itemID from Catalog v1 }}",
            "location_id": "{{ location where v1 ID is used }}"
          },
          "present_at_all_locations": "{{ [true | false] }}",
          "present_at_location_ids": [
            "{{ LOCATIONID-1 }}",
            "{{ LOCATIONID-N }}"
          ],
          "absent_at_location_ids": [
            "{{ LOCATIONID-1 }}",
            "{{ LOCATIONID-N }}"
          ],
          "item_data": "{{ CatalogItem object only if type\u003dITEM }}",
          "item_variation_data": "{{ CatalogItemVariation object only if type\u003dITEM_VARIATION }}",
          "modifier_data": "{{ CatalogModifier object only if type\u003dMODIFIER }}",
          "modifier_list_data": "{{ CatalogModifierList object only if type\u003dMODIFIER_LIST }}",
          "category_data": "{{ CatalogCategory object only if type\u003dCATEGORY }}",
          "discount_data": "{{ CatalogDiscount object only if type\u003dDISCOUNT }}",
          "tax_data": "{{ CatalogTax object only if type\u003dTAX }}"
        }
      },
      "example_type": "Schema"
    },
    "CatalogObjectBatch": {
      "type": "object",
      "required": [
        "objects"
      ],
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of CatalogObjects belonging to this batch."
        }
      },
      "description": "A batch of catalog objects.",
      "x-release-status": "PUBLIC"
    },
    "CatalogPricingRule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "User-defined name for the pricing rule. For example, \"Buy one get one\nfree\" or \"10% off\"."
        },
        "time_period_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of unique IDs for the catalog time periods when\nthis pricing rule is in effect. If left unset, the pricing rule is always\nin effect."
        },
        "discount_id": {
          "type": "string",
          "description": "Unique ID for the `CatalogDiscount` to take off\nthe price of all matched items."
        },
        "match_products_id": {
          "type": "string",
          "description": "Unique ID for the `CatalogProductSet` that will be matched by this rule.\nA match rule matches within the entire cart.\nA match rule can match multiple times in the cart.\nIf no `ProductSet` is present, the rule will match all products."
        },
        "apply_products_id": {
          "type": "string",
          "description": "__Deprecated__: Please use the `exclude_products_id` field to apply\nan exclude set instead. Exclude sets allow better control over quantity\nranges and offer more flexibility for which matched items receive a discount.\n\n`CatalogProductSet` to apply the pricing to.\nAn apply rule matches within the subset of the cart that fits the match rules (the match set).\nAn apply rule can only match once in the match set.\nIf not supplied, the pricing will be applied to all products in the match set.\nOther products retain their base price, or a price generated by other rules.",
          "x-release-status": "DEPRECATED",
          "x-is-deprecated": true
        },
        "exclude_products_id": {
          "type": "string",
          "description": "`CatalogProductSet` to exclude from the pricing rule.\nAn exclude rule matches within the subset of the cart that fits the match rules (the match set).\nAn exclude rule can only match once in the match set.\nIf not supplied, the pricing will be applied to all products in the match set.\nOther products retain their base price, or a price generated by other rules."
        },
        "valid_from_date": {
          "type": "string",
          "description": "Represents the date the Pricing Rule is valid from. Represented in RFC3339 full-date format (YYYY-MM-DD)."
        },
        "valid_from_local_time": {
          "type": "string",
          "description": "Represents the local time the pricing rule should be valid from. Represented in RFC3339 partial-time format\n(HH:MM:SS). Partial seconds will be truncated."
        },
        "valid_until_date": {
          "type": "string",
          "description": "Represents the date the Pricing Rule is valid until. Represented in RFC3339 full-date format (YYYY-MM-DD)."
        },
        "valid_until_local_time": {
          "type": "string",
          "description": "Represents the local time the pricing rule should be valid until. Represented in RFC3339 partial-time format\n(HH:MM:SS). Partial seconds will be truncated."
        },
        "exclude_strategy": {
          "type": "string",
          "description": "If an `exclude_products_id` was given, controls which subset of matched\nproducts is excluded from any discounts.\n\nDefault value: `LEAST_EXPENSIVE`\nSee [ExcludeStrategy](#type-excludestrategy) for possible values"
        }
      },
      "description": "Defines how discounts are automatically applied to a set of items that match the pricing rule \nduring the active time period.",
      "x-release-status": "PUBLIC"
    },
    "CatalogProductSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "User-defined name for the product set. For example, \"Clearance Items\"\nor \"Winter Sale Items\"."
        },
        "product_ids_any": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": " Unique IDs for any `CatalogObject` included in this product set. Any\nnumber of these catalog objects can be in an order for a pricing rule to apply.\n\nThis can be used with `product_ids_all` in a parent `CatalogProductSet` to\nmatch groups of products for a bulk discount, such as a discount for an\nentree and side combo.\n\nOnly one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.\n\nMax: 500 catalog object IDs."
        },
        "product_ids_all": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unique IDs for any `CatalogObject` included in this product set.\nAll objects in this set must be included in an order for a pricing rule to apply.\n\nOnly one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.\n\nMax: 500 catalog object IDs."
        },
        "quantity_exact": {
          "type": "integer",
          "format": "int64",
          "description": "If set, there must be exactly this many items from `products_any` or `products_all`\nin the cart for the discount to apply.\n\nCannot be combined with either `quantity_min` or `quantity_max`."
        },
        "quantity_min": {
          "type": "integer",
          "format": "int64",
          "description": "If set, there must be at least this many items from `products_any` or `products_all`\nin a cart for the discount to apply. See `quantity_exact`. Defaults to 0 if\n`quantity_exact`, `quantity_min` and `quantity_max` are all unspecified."
        },
        "quantity_max": {
          "type": "integer",
          "format": "int64",
          "description": "If set, the pricing rule will apply to a maximum of this many items from\n`products_any` or `products_all`."
        },
        "all_products": {
          "type": "boolean",
          "description": "If set to `true`, the product set will include every item in the catalog.\n\nOnly one of `product_ids_all`, `product_ids_any`, or `all_products` can be set."
        }
      },
      "description": "Represents a collection of catalog objects for the purpose of applying a\n`PricingRule`. Including a catalog object will include all of its subtypes.\nFor example, including a category in a product set will include all of its\nitems and associated item variations in the product set. Including an item in\na product set will also include its item variations.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQuery": {
      "type": "object",
      "properties": {
        "sorted_attribute_query": {
          "$ref": "#/definitions/CatalogQuerySortedAttribute",
          "description": "A query expression to sort returned query result by the given attribute."
        },
        "exact_query": {
          "$ref": "#/definitions/CatalogQueryExact",
          "description": "An exact query expression to return objects with attribute name and value  \nmatching the specified attribute name and value exactly. Value matching is case insensitive."
        },
        "prefix_query": {
          "$ref": "#/definitions/CatalogQueryPrefix",
          "description": "A prefix query expression to return objects with attribute values \nthat have a prefix matching the specified string value. Value maching is case insensitive."
        },
        "range_query": {
          "$ref": "#/definitions/CatalogQueryRange",
          "description": "A range query expression to return objects with numberic values \nthat lie in the specified range."
        },
        "text_query": {
          "$ref": "#/definitions/CatalogQueryText",
          "description": "A text query expression to return objectd whose searchable attributes contain all of the given\nkeywords, irrespective of their order. For example, if a `CatalogItem` contains custom attribute values of \n`{\"name\": \"t-shirt\"}` and `{\"description\": \"Small, Purple\"}`, the query filter of `{\"keywords\": [\"shirt\", \"sma\", \"purp\"]}`\nreturns this item."
        },
        "items_for_tax_query": {
          "$ref": "#/definitions/CatalogQueryItemsForTax",
          "description": "A query expression to return items that have any of the specified taxes (as identified by the corresponding `CatalogTax` object IDs) enabled."
        },
        "items_for_modifier_list_query": {
          "$ref": "#/definitions/CatalogQueryItemsForModifierList",
          "description": "A query expression to return items that have any of the given modifier list (as identifieid by the coresponding `CatalogModifierList`s IDs) enabled."
        },
        "items_for_item_options_query": {
          "$ref": "#/definitions/CatalogQueryItemsForItemOptions",
          "description": "A query expression to return items that contains the specified item options (as identified the corresponding `CatalogItemOption` IDs).",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "item_variations_for_item_option_values_query": {
          "$ref": "#/definitions/CatalogQueryItemVariationsForItemOptionValues",
          "description": "A query expression to return item variations (of the `CatalogItemVariation` that \ncontain all of the specified `CatalogItemOption` IDs.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "A query composed of one or more different types of filters to narrow the scope of targeted objects when calling the `SearchCatalogObjects` endpoint.\n\nAlthough a query can have multiple filters, only one query is allowed per call to [SearchCatalogObjects](#endpoint-Catalog-SearchCatalogObjects).\n\nWhen a query filter is based on an attribute, the attribute must be searchable. \nSearchable attributes are listed as follows, along their parent types that can be searched for with applicable query filters. \n\nSearchable attribute and objects queryable by searchable attributes ** \n- `name`:  `CatalogItem`, `CatalogItemVariation`, `CatelogCatogry`, `CatalogTax`, `CatalogDiscount`, `CatalogModifier`, \u0027CatalogModifierList`, `CatalogItemOption`, `CatalogItemOptionValue` \n- `description`: `CatalogItem`, `CatalogItemOptionValue` \n- `abbreviation`: `CatalogItem` \n- `upc`: `CatalogItemVariation` \n- `sku`: `CatalogItemVariation` \n- `caption`: `CatalogImage` \n- `display_name`: `CatalogItemOption` \n\nFor example, to search for [CatalogItem](#type-CatalogItem) objects by searchable attributes, you can use \nthe `\"name\"`, `\"description\"`, or `\"abbreviation\"` attribute in an applicable query filter.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryExact": {
      "type": "object",
      "required": [
        "attribute_name",
        "attribute_value"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the attribute to be searched. Matching of the attribute name is exact."
        },
        "attribute_value": {
          "type": "string",
          "description": "The desired value of the search attribute. Matching of the attribute value is case insensitive and can be partial. \nFor example, if a specified value of \"sma\", objects with the named attribute value of \"Small\", \"small\" are both matched."
        }
      },
      "description": "The query filter to return the serch result by exact match of the specified attribute name and value.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryItemVariationsForItemOptionValues": {
      "type": "object",
      "properties": {
        "item_option_value_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of `CatalogItemOptionValue` IDs to be used to find associated\n`CatalogItemVariation`s. All ItemVariations that contain all of the given\nItem Option Values (in any order) will be returned."
        }
      },
      "description": "The query filter to return the item variations containing the specified item option value IDs.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogQueryItemsForItemOptions": {
      "type": "object",
      "properties": {
        "item_option_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of `CatalogItemOption` IDs to be used to find associated\n`CatalogItem`s. All Items that contain all of the given Item Options (in any order)\nwill be returned."
        }
      },
      "description": "The query filter to return the items containing the specified item option IDs.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogQueryItemsForModifierList": {
      "type": "object",
      "required": [
        "modifier_list_ids"
      ],
      "properties": {
        "modifier_list_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of `CatalogModifierList` IDs to be used to find associated `CatalogItem`s."
        }
      },
      "description": "The query filter to return the items containing the specified modifier list IDs.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryItemsForTax": {
      "type": "object",
      "required": [
        "tax_ids"
      ],
      "properties": {
        "tax_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of `CatalogTax` IDs to be used to find associated `CatalogItem`s."
        }
      },
      "description": "The query filter to return the items containing the specified tax IDs.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryPrefix": {
      "type": "object",
      "required": [
        "attribute_name",
        "attribute_prefix"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the attribute to be searched."
        },
        "attribute_prefix": {
          "minLength": 1,
          "type": "string",
          "description": "The desired prefix of the search attribute value."
        }
      },
      "description": "The query filter to return the search result whose named attribute values are prefixed by the specified attribute value.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryRange": {
      "type": "object",
      "required": [
        "attribute_name"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the attribute to be searched."
        },
        "attribute_min_value": {
          "type": "integer",
          "format": "int64",
          "description": "The desired minimum value for the search attribute (inclusive)."
        },
        "attribute_max_value": {
          "type": "integer",
          "format": "int64",
          "description": "The desired maximum value for the search attribute (inclusive)."
        }
      },
      "description": "The query filter to return the search result whose named attribute values fall between the specified range.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQuerySortedAttribute": {
      "type": "object",
      "required": [
        "attribute_name"
      ],
      "properties": {
        "attribute_name": {
          "minLength": 1,
          "type": "string",
          "description": "The attribute whose value is used as the sort key."
        },
        "initial_attribute_value": {
          "type": "string",
          "description": "The first attribute value to be returned by the query. Ascending sorts will return only\nobjects with this value or greater, while descending sorts will return only objects with this value\nor less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts)."
        },
        "sort_order": {
          "type": "string",
          "description": "The desired sort order, `\"ASC\"` (ascending) or `\"DESC\"` (descending).\nSee [SortOrder](#type-sortorder) for possible values"
        }
      },
      "description": "The query expression to specify the key to sort search results.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQueryText": {
      "type": "object",
      "required": [
        "keywords"
      ],
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of 1, 2, or 3 search keywords. Keywords with fewer than 3 characters are ignored."
        }
      },
      "description": "The query filter to return the search result whose searchable attribute values contain all of the specified keywords or tokens, independent of the token order or case.",
      "x-release-status": "PUBLIC"
    },
    "CatalogQuickAmount": {
      "type": "object",
      "required": [
        "type",
        "amount"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Represents the type of the Quick Amount.\nSee [CatalogQuickAmountType](#type-catalogquickamounttype) for possible values"
        },
        "amount": {
          "$ref": "#/definitions/Money",
          "description": "Represents the actual amount of the Quick Amount with Money type."
        },
        "score": {
          "type": "integer",
          "format": "int64",
          "description": "Describes the ranking of the Quick Amount provided by machine learning model, in the range [0, 100].\nMANUAL type amount will always have score \u003d 100."
        },
        "ordinal": {
          "type": "integer",
          "format": "int64",
          "description": "The order in which this Quick Amount should be displayed."
        }
      },
      "description": "Represents a Quick Amount in the Catalog.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogQuickAmountsSettings": {
      "type": "object",
      "required": [
        "option"
      ],
      "properties": {
        "option": {
          "type": "string",
          "description": "Represents the option seller currently uses on Quick Amounts.\nSee [CatalogQuickAmountsSettingsOption](#type-catalogquickamountssettingsoption) for possible values"
        },
        "eligible_for_auto_amounts": {
          "type": "boolean",
          "description": "Represents location\u0027s eligibility for auto amounts\nThe boolean should be consistent with whether there are AUTO amounts in the `amounts`."
        },
        "amounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogQuickAmount"
          },
          "description": "Represents a set of Quick Amounts at this location."
        }
      },
      "description": "A parent Catalog Object model represents a set of Quick Amounts and the settings control the amounts.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogSubscriptionPlan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the plan."
        },
        "phases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionPhase"
          },
          "description": "A list of SubscriptionPhase containing the `SubscriptionPhase` for this plan."
        }
      },
      "description": "Describes a subscription plan. For more information, see\n[Set Up and Manage a Subscription Plan](/docs/subscriptions-api/setup-plan).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CatalogTax": {
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The tax\u0027s name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
        },
        "calculation_phase": {
          "type": "string",
          "description": "Whether the tax is calculated based on a payment\u0027s subtotal or total.\nSee [TaxCalculationPhase](#type-taxcalculationphase) for possible values"
        },
        "inclusion_type": {
          "type": "string",
          "description": "Whether the tax is `ADDITIVE` or `INCLUSIVE`.\nSee [TaxInclusionType](#type-taxinclusiontype) for possible values"
        },
        "percentage": {
          "type": "string",
          "description": "The percentage of the tax in decimal form, using a `\u0027.\u0027` as the decimal separator and without a `\u0027%\u0027` sign.\nA value of `7.5` corresponds to 7.5%."
        },
        "applies_to_custom_amounts": {
          "type": "boolean",
          "description": "If `true`, the fee applies to custom amounts entered into the Square Point of Sale\napp that are not associated with a particular `CatalogItem`."
        },
        "enabled": {
          "type": "boolean",
          "description": "If `true`, the tax will be shown as enabled in the Square Point of Sale app."
        }
      },
      "description": "A tax applicable to an item.",
      "x-release-status": "PUBLIC",
      "example": {
        "object": {
          "type": "TAX",
          "id": "#SalesTax",
          "present_at_all_locations": true,
          "tax_data": {
            "name": "Sales Tax",
            "calculation_phase": "TAX_SUBTOTAL_PHASE",
            "inclusion_type": "ADDITIVE",
            "percentage": "5.0",
            "fee_applies_to_custom_amounts": true,
            "enabled": true
          }
        }
      }
    },
    "CatalogTimePeriod": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "description": "An iCalendar (RFC5545) [event](https://tools.ietf.org/html/rfc5545#section-3.6.1), which\nspecifies the name, timing, duration and recurrence of this time period.\n\nExample:\n\n```\nDTSTART:20190707T180000\nDURATION:P2H\nRRULE:FREQ\u003dWEEKLY;BYDAY\u003dMO,WE,FR\n```\n\nOnly `SUMMARY`, `DTSTART`, `DURATION` and `RRULE` fields are supported.\n`DTSTART` must be in local (unzoned) time format. Note that while `BEGIN:VEVENT`\nand `END:VEVENT` is not required in the request. The response will always\ninclude them."
        }
      },
      "description": "Represents a time period - either a single period or a repeating period.",
      "x-release-status": "PUBLIC"
    },
    "CatalogV1Id": {
      "type": "object",
      "properties": {
        "catalog_v1_id": {
          "type": "string",
          "description": "The ID for an object used in the Square API V1, if the object ID differs from the Square API V2 object ID."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the `Location` this Connect V1 ID is associated with."
        }
      },
      "description": "A Square API V1 identifier of an item, including the object ID and its associated location ID.",
      "x-release-status": "PUBLIC"
    },
    "ChargeRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "amount_money"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\ntransaction among transactions you\u0027ve created.\n\nIf you\u0027re unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer.\n\nSee [Idempotency keys](#idempotencykeys) for more information."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to charge.\n\nNote that you specify the amount in the\n__smallest denomination of the applicable currency__. For example, US dollar\namounts are specified in cents. See\n[Working with monetary amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts) for details.\n\nThe value of `currency` must match the currency associated with the business\nthat is charging the card."
        },
        "card_nonce": {
          "maxLength": 192,
          "type": "string",
          "description": "A nonce generated from the `SqPaymentForm` that represents the card\nto charge.\n\nThe application that provides a nonce to this endpoint must be the\n_same application_ that generated the nonce with the `SqPaymentForm`.\nOtherwise, the nonce is invalid.\n\nDo not provide a value for this field if you provide a value for\n`customer_card_id`."
        },
        "customer_card_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the customer card on file to charge. Do\nnot provide a value for this field if you provide a value for `card_nonce`.\n\nIf you provide this value, you _must_ also provide a value for\n`customer_id`."
        },
        "delay_capture": {
          "type": "boolean",
          "description": "If `true`, the request will only perform an Auth on the provided\ncard. You can then later perform either a Capture (with the\n`CaptureTransaction` or a Void\n(with the `VoidTransaction`.\n\nDefault value: `false`"
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).\n\nThis value cannot exceed 40 characters."
        },
        "note": {
          "maxLength": 60,
          "type": "string",
          "description": "An optional note to associate with the transaction.\n\nThis value cannot exceed 60 characters."
        },
        "customer_id": {
          "maxLength": 50,
          "type": "string",
          "description": "The ID of the customer to associate this transaction with. This field\nis required if you provide a value for `customer_card_id`, and optional\notherwise."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s billing address. This value is optional, but this transaction\nis ineligible for chargeback protection if neither this parameter nor\n`shipping_address` is provided."
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s shipping address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if neither this\nparameter nor `billing_address` is provided."
        },
        "buyer_email_address": {
          "type": "string",
          "description": "The buyer\u0027s email address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if it is not\nprovided."
        },
        "order_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the order to associate with this transaction.\n\nIf you provide this value, the `amount_money` value of your request must\n__exactly match__ the value of the order\u0027s `total_money` field."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipient"
          },
          "description": "The basic primitive of multi-party transaction. The value is optional.\nThe transaction facilitated by you can be split from here.\n\nIf you provide this value, the `amount_money` value in your additional_recipients\nmust not be more than 90% of the `amount_money` value in the charge request.\nThe `location_id` must be the valid location of the app owner merchant.\n\nThis field requires the `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.\n\nThis field is currently not supported in sandbox."
        },
        "verification_token": {
          "type": "string",
          "description": "A token generated by SqPaymentForm\u0027s verifyBuyer() that represents\ncustomer\u0027s device info and 3ds challenge result."
        }
      },
      "description": "Defines the parameters that can be included in the body of\na request to the [Charge](#endpoint-charge) endpoint.\n\nDeprecated - recommend using [CreatePayment](#endpoint-payments-createpayment)",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "request_body": {
          "idempotency_key": "74ae1696-b1e3-4328-af6d-f1e04d947a13",
          "shipping_address": {
            "address_line_1": "123 Main St",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94114",
            "country": "US"
          },
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "locality": "New York",
            "postal_code": "10003",
            "country": "US"
          },
          "amount_money": {
            "amount": 200,
            "currency": "USD"
          },
          "additional_recipients": [
            {
              "location_id": "057P5VYJ4A5X1",
              "description": "Application fees",
              "amount_money": {
                "amount": 20,
                "currency": "USD"
              }
            }
          ],
          "card_nonce": "card_nonce_from_square_123",
          "reference_id": "some optional reference id",
          "note": "some optional note",
          "delay_capture": false
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Charge/ChargeRequest.python",
        "csharp": "/sdk_samples/Charge/ChargeRequest.csharp",
        "java": "/sdk_samples/Charge/ChargeRequest.java",
        "php": "/sdk_samples/Charge/ChargeRequest.php",
        "javascript": "/sdk_samples/Charge/ChargeRequest.javascript",
        "ruby": "/sdk_samples/Charge/ChargeRequest.ruby"
      }
    },
    "ChargeRequestAdditionalRecipient": {
      "type": "object",
      "required": [
        "location_id",
        "description",
        "amount_money"
      ],
      "properties": {
        "location_id": {
          "minLength": 1,
          "maxLength": 50,
          "type": "string",
          "description": "The location ID for a recipient (other than the merchant) receiving a portion of the tender."
        },
        "description": {
          "minLength": 1,
          "maxLength": 100,
          "type": "string",
          "description": "The description of the additional recipient."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money distributed to the recipient."
        }
      },
      "description": "Represents an additional recipient (other than the merchant) entitled to a portion of the tender.\nSupport is currently limited to USD, CAD and GBP currencies",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "ChargeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "transaction": {
          "$ref": "#/definitions/Transaction",
          "description": "The created transaction."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [Charge](#endpoint-charge) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "transaction": {
          "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "location_id": "18YC4JDH91E1H",
          "created_at": "2016-03-10T22:57:56Z",
          "tenders": [
            {
              "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
              "location_id": "18YC4JDH91E1H",
              "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "created_at": "2016-03-10T22:57:56Z",
              "note": "some optional note",
              "amount_money": {
                "amount": 200,
                "currency": "USD"
              },
              "additional_recipients": [
                {
                  "location_id": "057P5VYJ4A5X1",
                  "description": "Application fees",
                  "amount_money": {
                    "amount": 20,
                    "currency": "USD"
                  },
                  "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF"
                }
              ],
              "type": "CARD",
              "card_details": {
                "status": "CAPTURED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111"
                },
                "entry_method": "KEYED"
              }
            }
          ],
          "reference_id": "some optional reference id",
          "product": "EXTERNAL_API"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Charge/ChargeResponse.python",
        "csharp": "/sdk_samples/Charge/ChargeResponse.csharp",
        "java": "/sdk_samples/Charge/ChargeResponse.java",
        "php": "/sdk_samples/Charge/ChargeResponse.php",
        "javascript": "/sdk_samples/Charge/ChargeResponse.javascript",
        "ruby": "/sdk_samples/Charge/ChargeResponse.ruby"
      }
    },
    "Checkout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID generated by Square Checkout when a new checkout is requested."
        },
        "checkout_page_url": {
          "type": "string",
          "description": "The URL that the buyer\u0027s browser should be redirected to after the\ncheckout is completed."
        },
        "ask_for_shipping_address": {
          "type": "boolean",
          "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`."
        },
        "merchant_support_email": {
          "type": "string",
          "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant\u0027s Square account.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_buyer_email": {
          "type": "string",
          "description": "If provided, the buyer\u0027s email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "If provided, the buyer\u0027s shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set."
        },
        "redirect_url": {
          "type": "string",
          "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare\u0027s `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http://www.example.com/order-complete?checkoutId\u003dxxxxxx\u0026orderId\u003dxxxxxx\u0026referenceId\u003dxxxxxx\u0026transactionId\u003dxxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow."
        },
        "order": {
          "$ref": "#/definitions/Order",
          "description": "Order to be checked out."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the checkout was created, in RFC 3339 format."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipient"
          },
          "description": "Additional recipients (other than the merchant) receiving a portion of this checkout.\nFor example, fees assessed on the purchase by a third party integration."
        }
      },
      "description": "Square Checkout lets merchants accept online payments for supported\npayment types using a checkout workflow hosted on squareup.com.",
      "x-release-status": "PUBLIC"
    },
    "CompletePaymentRequest": {
      "type": "object",
      "properties": {},
      "description": "Completes (captures) a payment.\n\nBy default, payments are set to autocomplete immediately after they are created.\nTo complete payments manually, set `autocomplete` to false.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {}
      }
    },
    "CompletePaymentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request"
        },
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The successfully completed `Payment`."
        }
      },
      "description": "Return value from a [CompletePayment](#endpoint-payments-completepayment) call.",
      "x-release-status": "PUBLIC",
      "example": {
        "payment": {
          "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
          "created_at": "2019-07-10T13:39:55.317Z",
          "updated_at": "2019-07-10T13:40:05.982Z",
          "amount_money": {
            "amount": 200,
            "currency": "USD"
          },
          "app_fee_money": {
            "amount": 10,
            "currency": "USD"
          },
          "total_money": {
            "amount": 200,
            "currency": "USD"
          },
          "status": "COMPLETED",
          "source_type": "CARD",
          "card_details": {
            "status": "CAPTURED",
            "card": {
              "card_brand": "VISA",
              "last_4": "2796",
              "exp_month": 7,
              "exp_year": 2026,
              "fingerprint": "sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw",
              "card_type": "DEBIT",
              "prepaid_type": "PREPAID",
              "bin": "411111"
            },
            "entry_method": "ON_FILE",
            "cvv_status": "CVV_ACCEPTED",
            "avs_status": "AVS_ACCEPTED",
            "auth_result_code": "MhIjEN",
            "statement_description": "SQ *MY MERCHANT"
          },
          "location_id": "XTI0H92143A39",
          "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
          "reference_id": "123456",
          "note": "Brief description",
          "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I",
          "receipt_number": "GQTF",
          "receipt_url": "https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf"
        }
      }
    },
    "Coordinates": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "description": "The latitude of the coordinate expressed in degrees."
        },
        "longitude": {
          "type": "number",
          "description": "The longitude of the coordinate expressed in degrees."
        }
      },
      "description": "Latitude and longitude coordinates.",
      "x-release-status": "PUBLIC"
    },
    "CreateBreakTypeRequest": {
      "type": "object",
      "required": [
        "break_type"
      ],
      "properties": {
        "idempotency_key": {
          "maxLength": 128,
          "type": "string",
          "description": "Unique string value to insure idempotency of the operation"
        },
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The `BreakType` to be created."
        }
      },
      "description": "A request to create a new `BreakType`",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "PAD3NG5KSN2GL",
          "break_type": {
            "location_id": "CGJN03P1D08GF",
            "break_name": "Lunch Break",
            "expected_duration": "PT30M",
            "is_paid": true
          }
        }
      }
    },
    "CreateBreakTypeResponse": {
      "type": "object",
      "properties": {
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The `BreakType` that was created by the request."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to the request to create a `BreakType`. Contains\nthe created `BreakType` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "break_type": {
          "id": "49SSVDJG76WF3",
          "location_id": "CGJN03P1D08GF",
          "break_name": "Lunch Break",
          "expected_duration": "PT30M",
          "is_paid": true,
          "version": 1,
          "created_at": "2019-02-26T22:42:54Z",
          "updated_at": "2019-02-26T22:42:54Z"
        }
      }
    },
    "CreateCatalogImageRequest": {
      "type": "object",
      "required": [
        "idempotency_key"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "type": "string",
          "description": "A unique string that identifies this CreateCatalogImage request.\nKeys can be any valid string but must be unique for every CreateCatalogImage request.\n\nSee [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
        },
        "object_id": {
          "type": "string",
          "description": "Unique ID of the `CatalogObject` to attach to this `CatalogImage`. Leave this\nfield empty to create unattached images, for example if you are building an integration\nwhere these images can be attached to catalog items at a later time."
        },
        "image": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The new `IMAGE`-type `CatalogObject` to be attached to this `CatalogImage`.\nIf the `CatalogObject` already has a `CatalogImage`, this call will overwrite it."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_url": "/v2/catalog/images",
        "request_body": {
          "idempotency_key": "528dea59-7bfb-43c1-bd48-4a6bba7dd61f86",
          "object_id": "ND6EA5AAJEO5WL3JNNIAQA32",
          "image": {
            "id": "#TEMP_ID",
            "type": "IMAGE",
            "image_data": {
              "caption": "A picture of a cup of coffee"
            }
          }
        }
      }
    },
    "CreateCatalogImageResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on any errors encountered."
        },
        "image": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The newly created `CatalogImage` including a Square-generated\nURL for each image."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "CreateCheckoutRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "order"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "A unique string that identifies this checkout among others\nyou\u0027ve created. It can be any valid string but must be unique for every\norder sent to Square Checkout for a given location ID.\n\nThe idempotency key is used to avoid processing the same order more than\nonce. If you\u0027re unsure whether a particular checkout was created\nsuccessfully, you can reattempt it with the same idempotency key and all the\nsame other parameters without worrying about creating duplicates.\n\nWe recommend using a random number/string generator native to the language\nyou are working in to generate strings for your idempotency keys.\n\nSee the [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency) guide for more information."
        },
        "order": {
          "$ref": "#/definitions/CreateOrderRequest",
          "description": "The order including line items to be checked out."
        },
        "ask_for_shipping_address": {
          "type": "boolean",
          "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`."
        },
        "merchant_support_email": {
          "maxLength": 254,
          "type": "string",
          "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant\u0027s Square account.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_buyer_email": {
          "maxLength": 254,
          "type": "string",
          "description": "If provided, the buyer\u0027s email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set."
        },
        "pre_populate_shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "If provided, the buyer\u0027s shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set."
        },
        "redirect_url": {
          "maxLength": 800,
          "type": "string",
          "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare\u0027s `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http://www.example.com/order-complete?checkoutId\u003dxxxxxx\u0026orderId\u003dxxxxxx\u0026referenceId\u003dxxxxxx\u0026transactionId\u003dxxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow.\n\nDefault: none; only exists if explicitly set."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargeRequestAdditionalRecipient"
          },
          "description": "The basic primitive of multi-party transaction. The value is optional.\nThe transaction facilitated by you can be split from here.\n\nIf you provide this value, the `amount_money` value in your additional_recipients\nmust not be more than 90% of the `total_money` calculated by Square for your order.\nThe `location_id` must be the valid location of the app owner merchant.\n\nThis field requires `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.\n\nThis field is currently not supported in sandbox."
        },
        "note": {
          "maxLength": 60,
          "type": "string",
          "description": "An optional note to associate with the checkout object.\n\nThis value cannot exceed 60 characters."
        }
      },
      "description": "Defines the parameters that can be included in the body of\na request to the __CreateCheckout__ endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "86ae1696-b1e3-4328-af6d-f1e04d947ad6",
          "redirect_url": "https://merchant.website.com/order-confirm",
          "order": {
            "idempotency_key": "12ae1696-z1e3-4328-af6d-f1e04d947gd4",
            "order": {
              "location_id": "location_id",
              "customer_id": "customer_id",
              "reference_id": "reference_id",
              "line_items": [
                {
                  "name": "Printed T Shirt",
                  "quantity": "2",
                  "base_price_money": {
                    "amount": 1500,
                    "currency": "USD"
                  },
                  "applied_discounts": [
                    {
                      "discount_uid": "56ae1696-z1e3-9328-af6d-f1e04d947gd4"
                    }
                  ],
                  "applied_taxes": [
                    {
                      "tax_uid": "38ze1696-z1e3-5628-af6d-f1e04d947fg3"
                    }
                  ]
                },
                {
                  "name": "Slim Jeans",
                  "quantity": "1",
                  "base_price_money": {
                    "amount": 2500,
                    "currency": "USD"
                  }
                },
                {
                  "name": "Woven Sweater",
                  "quantity": "3",
                  "base_price_money": {
                    "amount": 3500,
                    "currency": "USD"
                  }
                }
              ],
              "taxes": [
                {
                  "uid": "38ze1696-z1e3-5628-af6d-f1e04d947fg3",
                  "type": "INCLUSIVE",
                  "percentage": "7.75",
                  "scope": "LINE_ITEM"
                }
              ],
              "discounts": [
                {
                  "uid": "56ae1696-z1e3-9328-af6d-f1e04d947gd4",
                  "type": "FIXED_AMOUNT",
                  "scope": "LINE_ITEM",
                  "amount_money": {
                    "amount": 100,
                    "currency": "USD"
                  }
                }
              ]
            }
          },
          "additional_recipients": [
            {
              "location_id": "057P5VYJ4A5X1",
              "description": "Application fees",
              "amount_money": {
                "amount": 60,
                "currency": "USD"
              }
            }
          ],
          "ask_for_shipping_address": true,
          "merchant_support_email": "merchant+support@website.com",
          "pre_populate_buyer_email": "example@email.com",
          "pre_populate_shipping_address": {
            "address_line_1": "1455 Market St.",
            "address_line_2": "Suite 600",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94103",
            "country": "US",
            "first_name": "Jane",
            "last_name": "Doe"
          }
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.python",
        "csharp": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.csharp",
        "java": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.java",
        "php": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.php",
        "javascript": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.javascript",
        "ruby": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.ruby"
      }
    },
    "CreateCheckoutResponse": {
      "type": "object",
      "properties": {
        "checkout": {
          "$ref": "#/definitions/Checkout",
          "description": "The newly created checkout.\nIf the same request was made with the same idempotency_key, this will be the checkout created with the idempotency_key."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the __CreateCheckout__ endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "checkout": {
          "id": "CAISEHGimXh-C3RIT4og1a6u1qw",
          "checkout_page_url": "https://connect.squareup.com/v2/checkout?c\u003dCAISEHGimXh-C3RIT4og1a6u1qw\u0026l\u003dCYTKRM7R7JMV8",
          "ask_for_shipping_address": true,
          "merchant_support_email": "merchant+support@website.com",
          "pre_populate_buyer_email": "example@email.com",
          "pre_populate_shipping_address": {
            "address_line_1": "1455 Market St.",
            "address_line_2": "Suite 600",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94103",
            "country": "US",
            "first_name": "Jane",
            "last_name": "Doe"
          },
          "redirect_url": "https://merchant.website.com/order-confirm",
          "order": {
            "location_id": "location_id",
            "customer_id": "customer_id",
            "reference_id": "reference_id",
            "line_items": [
              {
                "name": "Printed T Shirt",
                "quantity": "2",
                "applied_taxes": [
                  {
                    "tax_uid": "38ze1696-z1e3-5628-af6d-f1e04d947fg3",
                    "applied_money": {
                      "amount": 103,
                      "currency": "USD"
                    }
                  }
                ],
                "applied_discounts": [
                  {
                    "discount_uid": "56ae1696-z1e3-9328-af6d-f1e04d947gd4",
                    "applied_money": {
                      "amount": 100,
                      "currency": "USD"
                    }
                  }
                ],
                "base_price_money": {
                  "amount": 1500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 103,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 100,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1503,
                  "currency": "USD"
                }
              },
              {
                "name": "Slim Jeans",
                "quantity": "1",
                "base_price_money": {
                  "amount": 2500,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 2500,
                  "currency": "USD"
                }
              },
              {
                "name": "Wooven Sweater",
                "quantity": "3",
                "base_price_money": {
                  "amount": 3500,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 10500,
                  "currency": "USD"
                }
              }
            ],
            "taxes": [
              {
                "uid": "38ze1696-z1e3-5628-af6d-f1e04d947fg3",
                "type": "INCLUSIVE",
                "percentage": "7.75",
                "scope": "LINE_ITEM"
              }
            ],
            "discounts": [
              {
                "uid": "56ae1696-z1e3-9328-af6d-f1e04d947gd4",
                "type": "FIXED_AMOUNT",
                "scope": "LINE_ITEM",
                "amount_money": {
                  "amount": 100,
                  "currency": "USD"
                },
                "applied_money": {
                  "amount": 100,
                  "currency": "USD"
                }
              }
            ],
            "total_money": {
              "amount": 14503,
              "currency": "USD"
            },
            "total_tax_money": {
              "amount": 103,
              "currency": "USD"
            },
            "total_discount_money": {
              "amount": 100,
              "currency": "USD"
            }
          },
          "created_at": "2017-06-16T22:25:35Z",
          "version": 1,
          "additional_recipients": [
            {
              "location_id": "057P5VYJ4A5X1",
              "description": "Application fees",
              "amount_money": {
                "amount": 60,
                "currency": "USD"
              }
            }
          ]
        }
      }
    },
    "CreateCustomerCardRequest": {
      "type": "object",
      "required": [
        "card_nonce"
      ],
      "properties": {
        "card_nonce": {
          "type": "string",
          "description": "A card nonce representing the credit card to link to the customer.\n\nCard nonces are generated by the Square Payment Form when customers enter\ntheir card information. See\n[Embedding the payment form](https://developer.squareup.com/docs/payment-form/payment-form-walkthrough) for\nmore information.\n\n__NOTE:__ Card nonces generated by digital wallets (e.g., Apple Pay)\ncannot be used to create a customer card."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "Address information for the card on file. Only the `postal_code`\nfield is required for payments in the US and Canada."
        },
        "cardholder_name": {
          "type": "string",
          "description": "The full name printed on the credit card."
        },
        "verification_token": {
          "type": "string",
          "description": "An identifying token generated by `SqPaymentForm.verifyBuyer()`.\nVerification tokens encapsulate customer device information and 3-D Secure\nchallenge results to indicate that Square has verified the buyer identity."
        }
      },
      "description": "Defines the fields that are included in the request body of a request\nto the CreateCustomerCard endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "card_nonce": "YOUR_CARD_NONCE",
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "cardholder_name": "Amelia Earhart"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.python",
        "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.csharp",
        "java": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.java",
        "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.php",
        "javascript": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.javascript",
        "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.ruby"
      }
    },
    "CreateCustomerCardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "card": {
          "$ref": "#/definitions/Card",
          "description": "The created card on file."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the CreateCustomerCard endpoint.\n\nOne of `errors` or `card` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "card": {
          "id": "icard-card_id",
          "card_brand": "VISA",
          "last_4": "1111",
          "exp_month": 11,
          "exp_year": 2018,
          "cardholder_name": "Amelia Earhart",
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          }
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.python",
        "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.csharp",
        "java": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.java",
        "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.php",
        "javascript": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.javascript",
        "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.ruby"
      }
    },
    "CreateCustomerGroupRequest": {
      "type": "object",
      "required": [
        "group"
      ],
      "properties": {
        "idempotency_key": {
          "type": "string",
          "description": "The idempotency key for the request. See the [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency)\nguide for more information."
        },
        "group": {
          "$ref": "#/definitions/CustomerGroup",
          "description": "The customer group to create."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\n[CreateCustomerGroup](#endpoint-createcustomegroup) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "group": {
            "name": "Loyal Customers"
          }
        }
      }
    },
    "CreateCustomerGroupResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "group": {
          "$ref": "#/definitions/CustomerGroup",
          "description": "The successfully created customer group."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCustomerGroup](#endpoint-createcustomergroup) endpoint.\n\nOne of `errors` or `group` is present in a given response (never both).",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "group": {
          "id": "2TAT3CMH4Q0A9M87XJZED0WMR3",
          "name": "Loyal Customers",
          "created_at": "2020-04-13T21:54:57.863Z",
          "updated_at": "2020-04-13T21:54:58Z"
        }
      }
    },
    "CreateCustomerRequest": {
      "type": "object",
      "properties": {
        "idempotency_key": {
          "type": "string",
          "description": "The idempotency key for the request. See the\n[Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency) guide for more information."
        },
        "given_name": {
          "type": "string",
          "description": "The given (i.e., first) name associated with the customer profile."
        },
        "family_name": {
          "type": "string",
          "description": "The family (i.e., last) name associated with the customer profile."
        },
        "company_name": {
          "type": "string",
          "description": "A business name associated with the customer profile."
        },
        "nickname": {
          "type": "string",
          "description": "A nickname for the customer profile."
        },
        "email_address": {
          "type": "string",
          "description": "The email address associated with the customer profile."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The physical address associated with the customer profile."
        },
        "phone_number": {
          "type": "string",
          "description": "The 11-digit phone number associated with the customer profile."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional, second ID used to associate the customer profile with an\nentity in another system."
        },
        "note": {
          "type": "string",
          "description": "A custom note associated with the customer profile."
        },
        "birthday": {
          "type": "string",
          "description": "The birthday associated with the customer profile, in RFC-3339 format.\nYear is optional, timezone and times are not allowed.\nFor example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.\n`1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\nCreateCustomer endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "a customer"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomer/CreateCustomerRequest.python",
        "csharp": "/sdk_samples/CreateCustomer/CreateCustomerRequest.csharp",
        "java": "/sdk_samples/CreateCustomer/CreateCustomerRequest.java",
        "php": "/sdk_samples/CreateCustomer/CreateCustomerRequest.php",
        "javascript": "/sdk_samples/CreateCustomer/CreateCustomerRequest.javascript",
        "ruby": "/sdk_samples/CreateCustomer/CreateCustomerRequest.ruby"
      }
    },
    "CreateCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The created customer."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the CreateCustomer endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customer": {
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "created_at": "2016-03-23T20:21:54.859Z",
          "updated_at": "2016-03-23T20:21:54.859Z",
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "a customer"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateCustomer/CreateCustomerResponse.python",
        "csharp": "/sdk_samples/CreateCustomer/CreateCustomerResponse.csharp",
        "java": "/sdk_samples/CreateCustomer/CreateCustomerResponse.java",
        "php": "/sdk_samples/CreateCustomer/CreateCustomerResponse.php",
        "javascript": "/sdk_samples/CreateCustomer/CreateCustomerResponse.javascript",
        "ruby": "/sdk_samples/CreateCustomer/CreateCustomerResponse.ruby"
      }
    },
    "CreateDeviceCodeRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "device_code"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 128,
          "type": "string",
          "description": "A unique string that identifies this CreateCheckout request. Keys can be any valid string but\nmust be unique for every CreateCheckout request.\n\nSee [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
        },
        "device_code": {
          "$ref": "#/definitions/DeviceCode",
          "description": "The device code to create."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "idempotency_key": "01bb00a6-0c86-4770-94ed-f5fca973cd56",
          "device_code": {
            "name": "Counter 1",
            "location_id": "B5E4484SHHNYH",
            "product_type": "TERMINAL_API"
          }
        }
      }
    },
    "CreateDeviceCodeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "device_code": {
          "$ref": "#/definitions/DeviceCode",
          "description": "The created DeviceCode object containing the device code string."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "device_code": {
          "id": "B3Z6NAMYQSMTM",
          "name": "Counter 1",
          "code": "EBCARJ",
          "product_type": "TERMINAL_API",
          "location_id": "B5E4484SHHNYH",
          "created_at": "2020-02-06T18:44:33.000Z",
          "pair_by": "2020-02-06T18:49:33.000Z",
          "status": "UNPAIRED",
          "status_changed_at": "2020-02-06T18:44:33.000Z"
        }
      }
    },
    "CreateDisputeEvidenceFileRequest": {
      "type": "object",
      "required": [
        "idempotency_key"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 45,
          "type": "string",
          "description": "Unique ID. For more information,\nsee [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
        },
        "evidence_type": {
          "type": "string",
          "description": "The type of evidence you are uploading.\nSee [DisputeEvidenceType](#type-disputeevidencetype) for possible values"
        },
        "content_type": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "The MIME type of the uploaded file.\nOne of image/heic, image/heif, image/jpeg, application/pdf,  image/png, image/tiff."
        }
      },
      "description": "Defines parameters for a CreateDisputeEvidenceFile request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {}
    },
    "CreateDisputeEvidenceFileResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "evidence": {
          "$ref": "#/definitions/DisputeEvidence",
          "description": "The metadata of the newly uploaded dispute evidence."
        }
      },
      "description": "Defines fields in a CreateDisputeEvidenceFile response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "evidence": {
          "evidence_id": "TOomLInj6iWmP3N8qfCXrB",
          "dispute_id": "bVTprrwk0gygTLZ96VX1oB",
          "evidence_file": {
            "filename": "evidence.tiff",
            "filetype": "image/tiff"
          },
          "uploaded_at": "2018-10-18T16:01:10.000Z"
        }
      }
    },
    "CreateDisputeEvidenceTextRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "evidence_text"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 45,
          "type": "string",
          "description": "Unique ID. For more information,\nsee [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
        },
        "evidence_type": {
          "type": "string",
          "description": "The type of evidence you are uploading.\nSee [DisputeEvidenceType](#type-disputeevidencetype) for possible values"
        },
        "evidence_text": {
          "minLength": 1,
          "maxLength": 500,
          "type": "string",
          "description": "The evidence string."
        }
      },
      "description": "Defines parameters for a CreateDisputeEvidenceText request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "evidence_type": "TRACKING_NUMBER",
          "evidence_text": "1Z8888888888888888",
          "idempotency_key": "ed3ee3933d946f1514d505d173c82648"
        }
      }
    },
    "CreateDisputeEvidenceTextResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "evidence": {
          "$ref": "#/definitions/DisputeEvidence",
          "description": "The newly uploaded dispute evidence metadata."
        }
      },
      "description": "Defines fields in a CreateDisputeEvidenceText response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "evidence": {
          "evidence_id": "TOomLInj6iWmP3N8qfCXrB",
          "dispute_id": "bVTprrwk0gygTLZ96VX1oB",
          "evidence_text": "1Z8888888888888888",
          "uploaded_at": "2018-10-18T16:01:10.000Z"
        }
      }
    },
    "CreateInvoiceRequest": {
      "type": "object",
      "required": [
        "invoice"
      ],
      "properties": {
        "invoice": {
          "$ref": "#/definitions/Invoice",
          "description": "The invoice to create."
        },
        "idempotency_key": {
          "maxLength": 128,
          "type": "string",
          "description": "A unique string that identifies the `CreateInvoice` request. If you do not \nprovide `idempotency_key` (or provide an empty string as the value), the endpoint \ntreats each request as independent.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
        }
      },
      "description": "Describes a `CreateInvoice` request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "idempotency_key": "ce3748f9-5fc1-4762-aa12-aae5e843f1f4",
          "invoice": {
            "location_id": "ES0RJRZYEC39A",
            "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
            "scheduled_at": "2030-01-13T10:00:00Z",
            "primary_recipient": {
              "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4"
            },
            "payment_requests": [
              {
                "request_method": "EMAIL",
                "request_type": "BALANCE",
                "due_date": "2030-01-24",
                "tipping_enabled": true,
                "reminders": [
                  {
                    "message": "Your invoice is due tomorrow",
                    "relative_scheduled_days": -1
                  }
                ]
              }
            ],
            "invoice_number": "inv-100",
            "title": "Event Planning Services",
            "description": "We appreciate your business!"
          }
        }
      }
    },
    "CreateInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/Invoice",
          "description": "The newly created invoice."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        }
      },
      "description": "The response returned by the `CreateInvoice` request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "invoice": {
          "id": "gt2zv1z6mnUm1V7KMxxf3w",
          "version": 0,
          "location_id": "ES0RJRZYEC39A",
          "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
          "payment_requests": [
            {
              "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
              "request_method": "EMAIL",
              "request_type": "BALANCE",
              "due_date": "2030-01-24",
              "tipping_enabled": true,
              "reminders": [
                {
                  "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                  "relative_scheduled_days": -1,
                  "message": "Your invoice is due tomorrow",
                  "status": "PENDING"
                }
              ],
              "computed_amount_money": {
                "amount": 10000,
                "currency": "USD"
              },
              "total_completed_amount_money": {
                "amount": 0,
                "currency": "USD"
              }
            }
          ],
          "invoice_number": "inv-100",
          "title": "Event Planning Services",
          "description": "We appreciate your business!",
          "scheduled_at": "2030-01-13T10:00:00Z",
          "status": "DRAFT",
          "timezone": "America/Los_Angeles",
          "created_at": "2020-06-18T17:45:13Z",
          "updated_at": "2020-06-18T17:45:13Z",
          "primary_recipient": {
            "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "phone_number": "1-212-555-4240"
          }
        }
      }
    },
    "CreateLocationRequest": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/Location",
          "description": "The initial values of the location being created. The `name` field is required.\nAll other fields are optional. Unspecified fields will be set to default\nvalues using existing location data."
        }
      },
      "description": "Request object for the [CreateLocation](#endpoint-createlocation) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "location": {
            "name": "New location name",
            "description": "My new location.",
            "address": {
              "address_line_1": "1234 Peachtree St. NE",
              "administrative_district_level_1": "GA",
              "locality": "Atlanta",
              "postal_code": "30309"
            }
          }
        }
      }
    },
    "CreateLocationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "location": {
          "$ref": "#/definitions/Location",
          "description": "The newly created `Location`."
        }
      },
      "description": "Response object returned by the [CreateLocation](#endpoint-createlocation) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "location": {
          "id": "LOCATION_ID",
          "name": "New location name",
          "address": {
            "address_line_1": "1234 Peachtree St. NE",
            "locality": "Atlanta",
            "administrative_district_level_1": "GA",
            "postal_code": "30309"
          },
          "capabilities": [
            "CREDIT_CARD_PROCESSING"
          ],
          "status": "ACTIVE",
          "created_at": "2019-07-19T17:58:25Z",
          "merchant_id": "MERCHANT_ID",
          "country": "US",
          "language_code": "en-US",
          "currency": "USD",
          "type": "PHYSICAL",
          "description": "My new location.",
          "website_url": "examplewebsite.com",
          "twitter_username": "twitter",
          "instagram_username": "instagram",
          "coordinates": {
            "latitude": 33.788567,
            "longitude": -84.466947
          },
          "mcc": "1234"
        }
      }
    },
    "CreateLoyaltyAccountRequest": {
      "type": "object",
      "required": [
        "loyalty_account",
        "idempotency_key"
      ],
      "properties": {
        "loyalty_account": {
          "$ref": "#/definitions/LoyaltyAccount",
          "description": "The loyalty account to create."
        },
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 128,
          "type": "string",
          "description": "A unique string that identifies this `CreateLoyaltyAccount` request. \nKeys can be any valid string, but must be unique for every request."
        }
      },
      "description": "A request to create a new loyalty account.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "loyalty_account": {
            "mappings": [
              {
                "type": "PHONE",
                "value": "+14155551234"
              }
            ],
            "program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd"
          },
          "idempotency_key": "ec78c477-b1c3-4899-a209-a4e71337c996"
        }
      }
    },
    "CreateLoyaltyAccountResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "loyalty_account": {
          "$ref": "#/definitions/LoyaltyAccount",
          "description": "The newly created loyalty account."
        }
      },
      "description": "A response that includes loyalty account created.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "loyalty_account": {
          "id": "79b807d2-d786-46a9-933b-918028d7a8c5",
          "mappings": [
            {
              "id": "66aaab3f-da99-49ed-8b19-b87f851c844f",
              "type": "PHONE",
              "value": "+14155551234",
              "created_at": "2020-05-08T21:44:32Z"
            }
          ],
          "program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
          "balance": 0,
          "lifetime_points": 0,
          "created_at": "2020-05-08T21:44:32Z",
          "updated_at": "2020-05-08T21:44:32Z"
        }
      }
    },
    "CreateLoyaltyRewardRequest": {
      "type": "object",
      "required": [
        "reward",
        "idempotency_key"
      ],
      "properties": {
        "reward": {
          "$ref": "#/definitions/LoyaltyReward",
          "description": "The reward to create."
        },
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 128,
          "type": "string",
          "description": "A unique string that identifies this `CreateLoyaltyReward` request. \nKeys can be any valid string, but must be unique for every request."
        }
      },
      "description": "A request to create a loyalty reward.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "reward": {
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
            "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY"
          },
          "idempotency_key": "18c2e5ea-a620-4b1f-ad60-7b167285e451"
        }
      }
    },
    "CreateLoyaltyRewardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "reward": {
          "$ref": "#/definitions/LoyaltyReward",
          "description": "The loyalty reward created."
        }
      },
      "description": "A response that includes the loyalty reward created.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "reward": {
          "id": "a8f43ebe-2ad6-3001-bdd5-7d7c2da08943",
          "status": "ISSUED",
          "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
          "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
          "points": 10,
          "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY",
          "created_at": "2020-05-01T21:49:54Z",
          "updated_at": "2020-05-01T21:49:54Z"
        }
      }
    },
    "CreateMobileAuthorizationCodeRequest": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "The Square location ID the authorization code should be tied to."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\n__CreateMobileAuthorizationCode__ endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_url": "/mobile/authorization-code",
        "request_body": {
          "location_id": "YOUR_LOCATION_ID"
        }
      }
    },
    "CreateMobileAuthorizationCodeResponse": {
      "type": "object",
      "properties": {
        "authorization_code": {
          "type": "string",
          "description": "Generated authorization code that connects a mobile application instance\nto a Square account."
        },
        "expires_at": {
          "type": "string",
          "description": "The timestamp when `authorization_code` expires in\n[RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., \"2016-09-04T23:59:33.123Z\"."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "An error object that provides details about how creation of authorization\ncode failed."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the __CreateMobileAuthorizationCode__ endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "authorization_code": "YOUR_MOBILE_AUTHORIZATION_CODE",
        "expires_at": "2019-01-10T19:42:08Z"
      }
    },
    "CreateOrderRequest": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The order to create. If this field is set, then the only other top-level field that can be\nset is the idempotency_key."
        },
        "idempotency_key": {
          "maxLength": 192,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\norder among orders you\u0027ve created.\n\nIf you\u0027re unsure whether a particular order was created successfully,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate orders.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "8193148c-9586-11e6-99f9-28cfe92138cf",
          "order": {
            "reference_id": "my-order-001",
            "line_items": [
              {
                "name": "New York Strip Steak",
                "quantity": "1",
                "base_price_money": {
                  "amount": 1599,
                  "currency": "USD"
                }
              },
              {
                "quantity": "2",
                "catalog_object_id": "BEMYCSMIJL46OCDV4KYIKXIB",
                "modifiers": [
                  {
                    "catalog_object_id": "CHQX7Y4KY6N5KINJKZCFURPZ"
                  }
                ],
                "applied_discounts": [
                  {
                    "discount_uid": "one-dollar-off"
                  }
                ]
              }
            ],
            "taxes": [
              {
                "uid": "state-sales-tax",
                "name": "State Sales Tax",
                "percentage": "9",
                "scope": "ORDER"
              }
            ],
            "discounts": [
              {
                "uid": "labor-day-sale",
                "name": "Labor Day Sale",
                "percentage": "5",
                "scope": "ORDER"
              },
              {
                "uid": "membership-discount",
                "catalog_object_id": "DB7L55ZH2BGWI4H23ULIWOQ7",
                "scope": "ORDER"
              },
              {
                "uid": "one-dollar-off",
                "name": "Sale - $1.00 off",
                "amount_money": {
                  "amount": 100,
                  "currency": "USD"
                },
                "scope": "LINE_ITEM"
              }
            ]
          }
        }
      }
    },
    "CreateOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The newly created order."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the CreateOrder endpoint.\n\nOne of `errors` or `order` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "order": {
          "id": "CAISENgvlJ6jLWAzERDzjyHVybY",
          "location_id": "LOCATION_ID",
          "line_items": [
            {
              "uid": "8uSwfzvUImn3IRrvciqlXC",
              "name": "New York Strip Steak",
              "quantity": "1",
              "applied_taxes": [
                {
                  "uid": "aKG87ArnDpvMLSZJHxWUl",
                  "tax_uid": "state-sales-tax",
                  "applied_money": {
                    "amount": 136,
                    "currency": "USD"
                  }
                }
              ],
              "applied_discounts": [
                {
                  "uid": "jWdgP1TpHPFBuVrz81mXVC",
                  "discount_uid": "membership-discount",
                  "applied_money": {
                    "amount": 8,
                    "currency": "USD"
                  }
                },
                {
                  "uid": "jnZOjjVY57eRcQAVgEwFuC",
                  "discount_uid": "labor-day-sale",
                  "applied_money": {
                    "amount": 79,
                    "currency": "USD"
                  }
                }
              ],
              "base_price_money": {
                "amount": 1599,
                "currency": "USD"
              },
              "gross_sales_money": {
                "amount": 1599,
                "currency": "USD"
              },
              "total_tax_money": {
                "amount": 136,
                "currency": "USD"
              },
              "total_discount_money": {
                "amount": 87,
                "currency": "USD"
              },
              "total_money": {
                "amount": 1648,
                "currency": "USD"
              },
              "variation_total_price_money": {
                "amount": 1599,
                "currency": "USD"
              }
            },
            {
              "uid": "v8ZuEXpOJpb0bazLuvrLDB",
              "name": "New York Steak",
              "quantity": "2",
              "catalog_object_id": "BEMYCSMIJL46OCDV4KYIKXIB",
              "variation_name": "Larger",
              "modifiers": [
                {
                  "uid": "Lo3qMMckDluu9Qsb58d4CC",
                  "catalog_object_id": "CHQX7Y4KY6N5KINJKZCFURPZ",
                  "name": "Well",
                  "base_price_money": {
                    "amount": 50,
                    "currency": "USD"
                  },
                  "total_price_money": {
                    "amount": 100,
                    "currency": "USD"
                  }
                }
              ],
              "applied_taxes": [
                {
                  "uid": "v1dAgrfUVUPTnVTf9sRPz",
                  "tax_uid": "state-sales-tax",
                  "applied_money": {
                    "amount": 374,
                    "currency": "USD"
                  }
                }
              ],
              "applied_discounts": [
                {
                  "uid": "nUXvdsIItfKko0dbYtY58C",
                  "discount_uid": "membership-discount",
                  "applied_money": {
                    "amount": 22,
                    "currency": "USD"
                  }
                },
                {
                  "uid": "qSdkOOOernlVQqsJ94SPjB",
                  "discount_uid": "labor-day-sale",
                  "applied_money": {
                    "amount": 224,
                    "currency": "USD"
                  }
                },
                {
                  "uid": "y7bVl4njrWAnfDwmz19izB",
                  "discount_uid": "one-dollar-off",
                  "applied_money": {
                    "amount": 100,
                    "currency": "USD"
                  }
                }
              ],
              "base_price_money": {
                "amount": 2200,
                "currency": "USD"
              },
              "gross_sales_money": {
                "amount": 4500,
                "currency": "USD"
              },
              "total_tax_money": {
                "amount": 374,
                "currency": "USD"
              },
              "total_discount_money": {
                "amount": 346,
                "currency": "USD"
              },
              "total_money": {
                "amount": 4528,
                "currency": "USD"
              },
              "variation_total_price_money": {
                "amount": 4400,
                "currency": "USD"
              }
            }
          ],
          "taxes": [
            {
              "uid": "state-sales-tax",
              "name": "State Sales Tax",
              "type": "ADDITIVE",
              "percentage": "9",
              "applied_money": {
                "amount": 510,
                "currency": "USD"
              },
              "scope": "ORDER"
            }
          ],
          "discounts": [
            {
              "uid": "membership-discount",
              "catalog_object_id": "DB7L55ZH2BGWI4H23ULIWOQ7",
              "name": "Membership Discount",
              "type": "FIXED_PERCENTAGE",
              "percentage": "0.5",
              "applied_money": {
                "amount": 30,
                "currency": "USD"
              },
              "scope": "ORDER"
            },
            {
              "uid": "labor-day-sale",
              "name": "Labor Day Sale",
              "type": "FIXED_PERCENTAGE",
              "percentage": "5",
              "applied_money": {
                "amount": 303,
                "currency": "USD"
              },
              "scope": "ORDER"
            },
            {
              "uid": "one-dollar-off",
              "name": "Sale - $1.00 off",
              "type": "FIXED_AMOUNT",
              "amount_money": {
                "amount": 100,
                "currency": "USD"
              },
              "applied_money": {
                "amount": 100,
                "currency": "USD"
              },
              "scope": "LINE_ITEM"
            }
          ],
          "created_at": "2020-01-17T20:47:53.293Z",
          "updated_at": "2020-01-17T20:47:53.293Z",
          "state": "OPEN",
          "version": 1,
          "reference_id": "my-order-001",
          "total_money": {
            "amount": 6176,
            "currency": "USD"
          },
          "total_tax_money": {
            "amount": 510,
            "currency": "USD"
          },
          "total_discount_money": {
            "amount": 433,
            "currency": "USD"
          },
          "total_tip_money": {
            "amount": 0,
            "currency": "USD"
          },
          "total_service_charge_money": {
            "amount": 0,
            "currency": "USD"
          },
          "net_amounts": {
            "total_money": {
              "amount": 6176,
              "currency": "USD"
            },
            "tax_money": {
              "amount": 510,
              "currency": "USD"
            },
            "discount_money": {
              "amount": 433,
              "currency": "USD"
            },
            "tip_money": {
              "amount": 0,
              "currency": "USD"
            },
            "service_charge_money": {
              "amount": 0,
              "currency": "USD"
            }
          },
          "source": {
            "name": "My App"
          }
        }
      }
    },
    "CreatePaymentRequest": {
      "type": "object",
      "required": [
        "source_id",
        "idempotency_key",
        "amount_money"
      ],
      "properties": {
        "source_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID for the source of funds for this payment.  This can be a nonce\ngenerated by the Payment Form or a card on file made with the Customers API."
        },
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 45,
          "type": "string",
          "description": "A unique string that identifies this CreatePayment request. Keys can be any valid string\nbut must be unique for every CreatePayment request.\n\nMax: 45 characters\n\nSee [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to accept for this payment, not including `tip_money`.\n\nMust be specified in the smallest denomination of the applicable currency.\nFor example, US dollar amounts are specified in cents. See\n[Working with monetary amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts) for details.\n\nThe currency code must match the currency associated with the business\nthat is accepting the payment."
        },
        "tip_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount designated as a tip, in addition to `amount_money`\n\nMust be specified in the smallest denomination of the applicable currency.\nFor example, US dollar amounts are specified in cents. See\n[Working with monetary amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts) for details.\n\nThe currency code must match the currency associated with the business\nthat is accepting the payment.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "app_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money the developer is taking as a fee\nfor facilitating the payment on behalf of the seller.\n\nCannot be more than 90% of the total amount of the Payment.\n\nMust be specified in the smallest denomination of the applicable currency.\nFor example, US dollar amounts are specified in cents. See\n[Working with monetary amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts) for details.\n\nThe fee currency code must match the currency associated with the merchant\nthat is accepting the payment. The application must be from a developer\naccount in the same country, and using the same currency code, as the merchant.\n\nFor more information about the application fee scenario, see\n[Collect Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees)."
        },
        "delay_duration": {
          "type": "string",
          "description": "The duration of time after the payment\u0027s creation when Square automatically cancels the\npayment. This automatic cancellation applies only to payments that don\u0027t reach a terminal state\n(COMPLETED, CANCELED, or FAILED) before the `delay_duration` time period.\n\nThis parameter should be specified as a time duration, in RFC 3339 format, with a minimum value\nof 1 minute.\n\nNotes:\nThis feature is only supported for card payments. This parameter can only be set for a delayed\ncapture payment (`autocomplete\u003dfalse`).\n\nDefault:\n\n- Card Present payments: \"PT36H\" (36 hours) from the creation time.\n- Card Not Present payments: \"P7D\" (7 days) from the creation time.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "autocomplete": {
          "type": "boolean",
          "description": "If set to `true`, this payment will be completed when possible. If\nset to `false`, this payment will be held in an approved state until either\nexplicitly completed (captured) or canceled (voided). For more information, see\n[Delayed Payments](https://developer.squareup.com/docs/payments-api/take-payments#delayed-payments).\n\nDefault: true"
        },
        "order_id": {
          "type": "string",
          "description": "Associate a previously created order with this payment"
        },
        "customer_id": {
          "type": "string",
          "description": "The `Customer` ID of the customer associated with the payment.\nRequired if the `source_id` refers to a card on file created using the Customers API."
        },
        "location_id": {
          "type": "string",
          "description": "The location ID to associate with the payment. If not specified, the default location is\nused."
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "A user-defined ID to associate with the payment.\nYou can use this field to associate the payment to an entity in an external system.\nFor example, you might specify an order ID that is generated by a third-party shopping cart.\n\nLimit 40 characters."
        },
        "verification_token": {
          "type": "string",
          "description": "An identifying token generated by `SqPaymentForm.verifyBuyer()`.\nVerification tokens encapsulate customer device information and 3-D Secure\nchallenge results to indicate that Square has verified the buyer identity.\n\nSee the [SCA Overview](https://developer.squareup.com/docs/sca-overview)."
        },
        "accept_partial_authorization": {
          "type": "boolean",
          "description": "If set to true and charging a Square Gift Card, a payment may be returned with\namount_money equal to less than what was requested.  Example, a request for $20 when charging\na Square Gift Card with balance of $5 wil result in an APPROVED payment of $5.  You may choose\nto prompt the buyer for an additional payment to cover the remainder, or cancel the gift card\npayment.  Cannot be `true` when `autocomplete \u003d true`.\n\nFor more information, see\n[Partial amount with Square gift cards](https://developer.squareup.com/docs/payments-api/take-payments#partial-payment-gift-card).\n\nDefault: false",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "buyer_email_address": {
          "maxLength": 255,
          "type": "string",
          "description": "The buyer\u0027s e-mail address"
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s billing address."
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s shipping address."
        },
        "note": {
          "maxLength": 500,
          "type": "string",
          "description": "An optional note to be entered by the developer when creating a payment\n\nLimit 500 characters."
        },
        "statement_description_identifier": {
          "maxLength": 20,
          "type": "string",
          "description": "Optional additional payment information to include on the customer\u0027s card statement\nas part of statement description. This can be, for example, an invoice number, ticket number,\nor short description that uniquely identifies the purchase.\n\nNote that the `statement_description_identifier` may get truncated on the statement description\nto fit the required information including the Square identifier (SQ *) and name of the\nmerchant taking the payment.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "Creates a payment from the source (nonce, card on file, etc.)\n\nThe `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission is required\nto enable application fees.\n\nFor more information, see [Payments and Refunds Overview](/payments-api/overview).\n\nFor information about application fees in a payment, see\n[Collect Fees](/payments-api/take-payments-and-collect-fees).",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "4935a656-a929-4792-b97c-8848be85c27c",
          "amount_money": {
            "amount": 200,
            "currency": "USD"
          },
          "source_id": "ccof:uIbfJXhXETSP197M3GB",
          "autocomplete": true,
          "customer_id": "VDKXEEKPJN48QDG3BGGFAK05P8",
          "location_id": "XK3DBG77NJBFX",
          "reference_id": "123456",
          "note": "Brief description",
          "app_fee_money": {
            "amount": 10,
            "currency": "USD"
          }
        }
      }
    },
    "CreatePaymentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The newly created payment."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreatePayment](#endpoint-payments-createpayment) endpoint.\n\nNote: if there are errors processing the request, the payment field may not be\npresent, or it may be present with a status of `FAILED`.",
      "x-release-status": "PUBLIC",
      "example": {
        "payment": {
          "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
          "created_at": "2019-07-10T13:23:49.154Z",
          "updated_at": "2019-07-10T13:23:49.446Z",
          "amount_money": {
            "amount": 200,
            "currency": "USD"
          },
          "app_fee_money": {
            "amount": 10,
            "currency": "USD"
          },
          "total_money": {
            "amount": 200,
            "currency": "USD"
          },
          "status": "COMPLETED",
          "source_type": "CARD",
          "card_details": {
            "status": "CAPTURED",
            "card": {
              "card_brand": "VISA",
              "last_4": "1111",
              "exp_month": 7,
              "exp_year": 2026,
              "fingerprint": "sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw",
              "card_type": "DEBIT",
              "prepaid_type": "PREPAID",
              "bin": "411111"
            },
            "entry_method": "ON_FILE",
            "cvv_status": "CVV_ACCEPTED",
            "avs_status": "AVS_ACCEPTED",
            "auth_result_code": "nsAyY2",
            "statement_description": "SQ *MY MERCHANT"
          },
          "location_id": "XTI0H92143A39",
          "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
          "reference_id": "123456",
          "note": "Brief description",
          "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I",
          "receipt_number": "GQTF",
          "receipt_url": "https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf"
        }
      }
    },
    "CreateRefundRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "tender_id",
        "amount_money"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\nrefund among refunds you\u0027ve created for the tender.\n\nIf you\u0027re unsure whether a particular refund succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about duplicating the refund.\n\nSee [Idempotency keys](#idempotencykeys) for more information."
        },
        "tender_id": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the tender to refund.\n\nA ``Transaction`` has one or more `tenders` (i.e., methods\nof payment) associated with it, and you refund each tender separately with\nthe Connect API."
        },
        "reason": {
          "maxLength": 192,
          "type": "string",
          "description": "A description of the reason for the refund.\n\nDefault value: `Refund via API`"
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to refund.\n\nNote that you specify the amount in the\n__smallest denomination of the applicable currency__. For example, US dollar\namounts are specified in cents. See\n[Working with monetary amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts) for details.\n\nThis amount cannot exceed the amount that was originally charged to the\ntender that corresponds to `tender_id`."
        }
      },
      "description": "Defines the body parameters that can be included in\na request to the [CreateRefund](#endpoint-createrefund) endpoint.\n\nDeprecated - recommend using [RefundPayment](#endpoint-refunds-refundpayment)",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "request_body": {
          "idempotency_key": "86ae1696-b1e3-4328-af6d-f1e04d947ad2",
          "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
          "reason": "a reason",
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          }
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateRefund/CreateRefundRequest.python",
        "csharp": "/sdk_samples/CreateRefund/CreateRefundRequest.csharp",
        "java": "/sdk_samples/CreateRefund/CreateRefundRequest.java",
        "php": "/sdk_samples/CreateRefund/CreateRefundRequest.php",
        "javascript": "/sdk_samples/CreateRefund/CreateRefundRequest.javascript",
        "ruby": "/sdk_samples/CreateRefund/CreateRefundRequest.ruby"
      }
    },
    "CreateRefundResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "refund": {
          "$ref": "#/definitions/Refund",
          "description": "The created refund."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [CreateRefund](#endpoint-createrefund) endpoint.\n\nOne of `errors` or `refund` is present in a given response (never both).",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "refund": {
          "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
          "location_id": "18YC4JDH91E1H",
          "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
          "created_at": "2016-02-12T00:28:18Z",
          "reason": "some reason",
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          },
          "additional_recipients": [
            {
              "location_id": "057P5VYJ4A5X1",
              "description": "Application fees",
              "amount_money": {
                "amount": 10,
                "currency": "USD"
              },
              "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF"
            }
          ],
          "status": "PENDING"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/CreateRefund/CreateRefundResponse.python",
        "csharp": "/sdk_samples/CreateRefund/CreateRefundResponse.csharp",
        "java": "/sdk_samples/CreateRefund/CreateRefundResponse.java",
        "php": "/sdk_samples/CreateRefund/CreateRefundResponse.php",
        "javascript": "/sdk_samples/CreateRefund/CreateRefundResponse.javascript",
        "ruby": "/sdk_samples/CreateRefund/CreateRefundResponse.ruby"
      }
    },
    "CreateShiftRequest": {
      "type": "object",
      "required": [
        "shift"
      ],
      "properties": {
        "idempotency_key": {
          "maxLength": 128,
          "type": "string",
          "description": "Unique string value to insure the idempotency of the operation."
        },
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The `Shift` to be created"
        }
      },
      "description": "Represents a request to create a `Shift`",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "HIDSNG5KS478L",
          "shift": {
            "employee_id": "ormj0jJJZ5OZIzxrZYJI",
            "location_id": "PAA1RJZZKXBFG",
            "start_at": "2019-01-25T03:11:00-05:00",
            "end_at": "2019-01-25T13:11:00-05:00",
            "wage": {
              "title": "Barista",
              "hourly_rate": {
                "amount": 1100,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "start_at": "2019-01-25T06:11:00-05:00",
                "end_at": "2019-01-25T06:16:00-05:00",
                "break_type_id": "REGS1EQR1TPZ5",
                "name": "Tea Break",
                "expected_duration": "PT5M",
                "is_paid": true
              }
            ]
          }
        }
      }
    },
    "CreateShiftResponse": {
      "type": "object",
      "properties": {
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The `Shift` that was created on the request."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to the request to create a `Shift`. Contains\nthe created `Shift` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "shift": {
          "id": "K0YH4CV5462JB",
          "employee_id": "ormj0jJJZ5OZIzxrZYJI",
          "location_id": "PAA1RJZZKXBFG",
          "timezone": "America/New_York",
          "start_at": "2019-01-25T03:11:00-05:00",
          "end_at": "2019-01-25T13:11:00-05:00",
          "wage": {
            "title": "Barista",
            "hourly_rate": {
              "amount": 1100,
              "currency": "USD"
            }
          },
          "breaks": [
            {
              "id": "X7GAQYVVRRG6P",
              "start_at": "2019-01-25T06:11:00-05:00",
              "end_at": "2019-01-25T06:16:00-05:00",
              "break_type_id": "REGS1EQR1TPZ5",
              "name": "Tea Break",
              "expected_duration": "PT5M",
              "is_paid": true
            }
          ],
          "status": "CLOSED",
          "version": 1,
          "created_at": "2019-02-28T00:39:02Z",
          "updated_at": "2019-02-28T00:39:02Z"
        }
      }
    },
    "CreateSubscriptionRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "location_id",
        "plan_id",
        "customer_id"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "type": "string",
          "description": "A unique string that identifies this `CreateSubscription` request.\nIf you do not provide a unique string (or provide an empty string as the value),\nthe endpoint treats each request as independent.\n\nFor more information, see [Idempotency keys](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
        },
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the location the subscription is associated with."
        },
        "plan_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the subscription plan. For more information, see \n[Subscription Plan Overview](https://developer.squareup.com/docs/docs/subscriptions/overview)."
        },
        "customer_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the `customer` profile."
        },
        "start_date": {
          "type": "string",
          "description": "The start date of the subscription, in YYYY-MM-DD format. For example,\n2013-01-15. If the start date is left empty, the subscription begins \nimmediately."
        },
        "canceled_date": {
          "type": "string",
          "description": "The date when the subscription should be canceled, in \nYYYY-MM-DD format (for example, 2025-02-29). This overrides the plan configuration \nif it comes before the date the subscription would otherwise end."
        },
        "tax_percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "The tax to add when billing the subscription.\nThe percentage is expressed in decimal form, using a `\u0027.\u0027` as the decimal\nseparator and without a `\u0027%\u0027` sign. For example, a value of 7.5\ncorresponds to 7.5%."
        },
        "price_override_money": {
          "$ref": "#/definitions/Money",
          "description": "A custom price to apply for the subscription. If specified, \nit overrides the price configured by the subscription plan."
        },
        "card_id": {
          "type": "string",
          "description": "The ID of the `customer](#type-customer) [card` to charge.\nIf not specified, Square sends an invoice via email. For an example to\ncreate a customer and add a card on file, see [Subscriptions Walkthrough](https://developer.squareup.com/docs/docs/subscriptions-api/walkthrough)."
        },
        "timezone": {
          "type": "string",
          "description": "The timezone that is used in date calculations for the subscription. If unset, defaults to\nthe location timezone. If a timezone is not configured for the location, defaults to \"America/New_York\".\nFormat: the IANA Timezone Database identifier for the location timezone. For\na list of time zones, see [List of tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)."
        }
      },
      "description": "Defines parameters in a \n[CreateSubscription](#endpoint-subscriptions-createsubscription) endpoint request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "idempotency_key": "8193148c-9586-11e6-99f9-28cfe92138cf",
          "location_id": "S8GWD5R9QB376",
          "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
          "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
          "card_id": "ccof:qy5x8hHGYsgLrp4Q4GB",
          "start_date": "2020-08-01",
          "tax_percentage": "5",
          "price_override_money": {
            "amount": 100,
            "currency": "USD"
          },
          "timezone": "America/Los_Angeles"
        }
      }
    },
    "CreateSubscriptionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        },
        "subscription": {
          "$ref": "#/definitions/Subscription",
          "description": "The newly created subscription. \n\nFor more information, see \n[Subscription object](https://developer.squareup.com/docs/docs/subscriptions-api/overview#subscription-object)."
        }
      },
      "description": "Defines the fields that are included in the response from the\n[CreateSubscription](#endpoint-subscriptions-createsubscription) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "subscription": {
          "id": "56214fb2-cc85-47a1-93bc-44f3766bb56f",
          "location_id": "S8GWD5R9QB376",
          "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
          "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
          "start_date": "2020-08-01",
          "status": "PENDING",
          "tax_percentage": "5",
          "price_override_money": {
            "amount": 100,
            "currency": "USD"
          },
          "version": 1594155459464,
          "created_at": "2020-08-03T21:53:10Z",
          "card_id": "ccof:qy5x8hHGYsgLrp4Q4GB",
          "timezone": "America/Los_Angeles"
        }
      }
    },
    "CreateTeamMemberRequest": {
      "type": "object",
      "properties": {
        "idempotency_key": {
          "type": "string",
          "description": "A unique string that identifies this CreateTeamMember request.\nKeys can be any valid string but must be unique for every request.\nSee [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.\n\u003cbr\u003e\n\u003cb\u003eMin Length 1    Max Length 45\u003c/b\u003e"
        },
        "team_member": {
          "$ref": "#/definitions/TeamMember",
          "description": "\u003cb\u003eRequired\u003c/b\u003e The data which will be used to create the `TeamMember` object."
        }
      },
      "description": "Represents a create request for a `TeamMember` object.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "idempotency-key-0",
          "team_member": {
            "reference_id": "reference_id_1",
            "status": "ACTIVE",
            "given_name": "Joe",
            "family_name": "Doe",
            "email_address": "joe_doe@gmail.com",
            "phone_number": "+14159283333",
            "assigned_locations": {
              "location_ids": [
                "YSGH2WBKG94QZ",
                "GA2Y9HSJ8KRYT"
              ],
              "assignment_type": "EXPLICIT_LOCATIONS"
            }
          }
        }
      }
    },
    "CreateTeamMemberResponse": {
      "type": "object",
      "properties": {
        "team_member": {
          "$ref": "#/definitions/TeamMember",
          "description": "The successfully created `TeamMember` object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The errors that occurred during the request."
        }
      },
      "description": "Represents a response from a create request, containing the created `TeamMember` object or error messages.",
      "x-release-status": "PUBLIC",
      "example": {
        "team_member": {
          "id": "1yJlHapkseYnNPETIU1B",
          "reference_id": "reference_id_1",
          "is_owner": false,
          "status": "ACTIVE",
          "given_name": "Joe",
          "family_name": "Doe",
          "email_address": "joe_doe@gmail.com",
          "phone_number": "+14159283333",
          "assigned_locations": {
            "assignment_type": "EXPLICIT_LOCATIONS",
            "location_ids": [
              "GA2Y9HSJ8KRYT",
              "YSGH2WBKG94QZ"
            ]
          }
        }
      }
    },
    "CreateTerminalCheckoutRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "checkout"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 64,
          "type": "string",
          "description": "A unique string that identifies this CreateCheckout request. Keys can be any valid string but\nmust be unique for every CreateCheckout request.\n\nSee [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
        },
        "checkout": {
          "$ref": "#/definitions/TerminalCheckout",
          "description": "The checkout to create."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "idempotency_key": "28a0c3bc-7839-11ea-bc55-0242ac130003",
          "checkout": {
            "amount_money": {
              "amount": 2610,
              "currency": "USD"
            },
            "reference_id": "id11572",
            "device_options": {
              "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003"
            },
            "note": "A brief note"
          }
        }
      }
    },
    "CreateTerminalCheckoutResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "checkout": {
          "$ref": "#/definitions/TerminalCheckout",
          "description": "The created `TerminalCheckout`"
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "checkout": {
          "id": "08YceKh7B3ZqO",
          "amount_money": {
            "amount": 2610,
            "currency": "USD"
          },
          "reference_id": "id11572",
          "note": "A brief note",
          "device_options": {
            "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
            "tip_settings": {
              "allow_tipping": false
            },
            "skip_receipt_screen": false
          },
          "status": "PENDING",
          "created_at": "2020-04-06T16:39:32.545Z",
          "updated_at": "2020-04-06T16:39:32.545Z",
          "app_id": "APP_ID",
          "deadline_duration": "PT10M"
        }
      }
    },
    "CustomAttributeFilter": {
      "type": "object",
      "properties": {
        "custom_attribute_definition_id": {
          "type": "string",
          "description": "A query expression to filter items or item variations by matching their custom attributes\u0027 \n`custom_attribute_definition_id`  \nproperty value against the the specified id."
        },
        "key": {
          "type": "string",
          "description": "A query expression to filter items or item variations by matching their custom attributes\u0027\n`key` property value against \nthe specified key."
        },
        "string_filter": {
          "type": "string",
          "description": "A query expression to filter items or item variations by matching their custom attributes\u0027 \n`string_value`  property value \nagainst the specified text."
        },
        "number_filter": {
          "$ref": "#/definitions/Range",
          "description": "A query expression to filter items or item variations with their custom attributes\ncontaining a number value within the specified range."
        },
        "selection_uids_filter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A query expression to filter items or item variations by matching  their custom attributes\u0027 \n`selection_uid_values` \nvalues against the specified selection uids."
        },
        "bool_filter": {
          "type": "boolean",
          "description": "A query expression to filter items or item variations by matching their custom attributes\u0027\n`boolean_value` property values \nagainst the specified Boolean expression."
        }
      },
      "description": "Supported custom attribute query expressions for calling the \n[SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems) \nendpoint to search for items or item variations.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "Customer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique Square-assigned ID for the customer profile."
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp when the customer profile was created, in RFC 3339 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The timestamp when the customer profile was last updated, in RFC 3339 format."
        },
        "cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          },
          "description": "Payment details of cards stored on file for the customer profile."
        },
        "given_name": {
          "type": "string",
          "description": "The given (i.e., first) name associated with the customer profile."
        },
        "family_name": {
          "type": "string",
          "description": "The family (i.e., last) name associated with the customer profile."
        },
        "nickname": {
          "type": "string",
          "description": "A nickname for the customer profile."
        },
        "company_name": {
          "type": "string",
          "description": "A business name associated with the customer profile."
        },
        "email_address": {
          "type": "string",
          "description": "The email address associated with the customer profile."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The physical address associated with the customer profile."
        },
        "phone_number": {
          "type": "string",
          "description": "The 11-digit phone number associated with the customer profile."
        },
        "birthday": {
          "type": "string",
          "description": "The birthday associated with the customer profile, in RFC-3339 format.\nYear is optional, timezone and times are not allowed.\nFor example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.\n`1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional, second ID used to associate the customer profile with an\nentity in another system."
        },
        "note": {
          "type": "string",
          "description": "A custom note associated with the customer profile."
        },
        "preferences": {
          "$ref": "#/definitions/CustomerPreferences",
          "description": "Represents general customer preferences."
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerGroupInfo"
          },
          "description": "The customer groups and segments the customer belongs to. This deprecated field has been replaced with  the dedicated `group_ids` for customer groups and the dedicated `segment_ids` field for customer segments. You can retrieve information about a given customer group and segment respectively using the Customer Groups API and Customer Segments API.",
          "x-release-status": "DEPRECATED",
          "x-is-deprecated": true
        },
        "creation_source": {
          "type": "string",
          "description": "A creation source represents the method used to create the\ncustomer profile.\nSee [CustomerCreationSource](#type-customercreationsource) for possible values"
        },
        "group_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of customer groups the customer belongs to.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "segment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of segments the customer belongs to.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "Represents a Square customer profile, which can have one or more\ncards on file associated with it.",
      "x-release-status": "PUBLIC"
    },
    "CustomerCreationSourceFilter": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of creation sources used as filtering criteria.\nSee [CustomerCreationSource](#type-customercreationsource) for possible values"
        },
        "rule": {
          "type": "string",
          "description": "Indicates whether a customer profile matching the filter criteria\nshould be included in the result or excluded from the result.\n\nDefault: `INCLUDE`.\nSee [CustomerInclusionExclusion](#type-customerinclusionexclusion) for possible values"
        }
      },
      "description": "Creation source filter.\n\nIf one or more creation sources are set, customer profiles are included in,\nor excluded from, the result if they match at least one of the filter\ncriteria.",
      "x-release-status": "PUBLIC"
    },
    "CustomerFilter": {
      "type": "object",
      "properties": {
        "creation_source": {
          "$ref": "#/definitions/CustomerCreationSourceFilter",
          "description": "A filter to select customers based on their creation source."
        },
        "created_at": {
          "$ref": "#/definitions/TimeRange",
          "description": "A filter to select customers based on when they were created."
        },
        "updated_at": {
          "$ref": "#/definitions/TimeRange",
          "description": "A filter to select customers based on when they were updated."
        },
        "email_address": {
          "$ref": "#/definitions/CustomerTextFilter",
          "description": "A filter to [select customers by email address](https://developer.squareup.com/docs/docs/customers-api/cookbook/search-customers#search-by-email-address) \nvisible to the seller. \nThis filter is case insensitive.\n\nFor [exact matching](https://developer.squareup.com/docs/docs/customers-api/cookbook/search-customers#exact-search-by-email-address), this filter causes the search to return customer profiles \nwhose `email_address` field value are identical to the email address provided\nin the query.\n\nFor [fuzzy matching](https://developer.squareup.com/docs/docs/customers-api/cookbook/search-customers#fuzzy-search-by-email-address), \nthis filter causes the search to return customer profiles \nwhose `email_address` field value has a token-wise partial match against the filtering \nexpression in the query. For example, with `Steven gmail` provided in a search\nquery, the search returns customers whose email address can be `steven.johnson\u0026#64;gmail.com` \nor `mygmail\u0026#64;stevensbakery.com`. Email addresses are tokenized by replacing, by spaces, \npunctuations including periods (`.`), underscores (`_`), and the `\u0026#64;` symbols. A match is\nfound if a tokenized email address contains all the tokens in the search query, \nirrespective of the token order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "phone_number": {
          "$ref": "#/definitions/CustomerTextFilter",
          "description": "A filter to [select customers by their phone numbers](https://developer.squareup.com/docs/docs/customers-api/cookbook/search-customers#search-by-phone-number) visible to the seller. \nThis filter is case insensitive. \n\nFor [exact matching](https://developer.squareup.com/docs/docs/customers-api/cookbook/search-customers#exact-search-by-phone-number), \nthis filter causes the search to return customers whose phone number\nmatches the specified query expression. The number in the query must be of an E.164-compliant\nform. In particular, it must include the leading `+` sign followed by a contry code and then a\nsubscriber number. The standard E.614 form of a US phone number is `+12061112222` of\nthe domestic version or `+0012061112222` of the international version. The E.164-compliant\nvariations include `+1 (206) 111-2222` or `+001 (206) 111-2222`, respectively. To match\nthe query expression, stored customers\u0027 phone numbers are converted to the standard\nE.164 form of the national and internationalized versions.\n\n\nFor [fuzzy matching](https://developer.squareup.com/docs/docs/customers-api/cookbook/search-customers#fuzzy-search-by-phone-number), \nthis filter causes the search to return customers whose phone number matches partially \nthe token or tokens provided in the query expression. For example, if the search query contains \n`415-123-45`, the filter selects those customers with phone numbers of `415-123-4567` or \n`234-151-2345`. The search does not return customers with the phone number of `415-123-4678`.\nSimilarly, if the search query contains `415` as part of the phone number, the search returns\nthose customers with phone numbers of `(415)-123-4567`, `(123) 415-1567`, and `1 (415) 123-4567`.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "reference_id": {
          "$ref": "#/definitions/CustomerTextFilter",
          "description": "A filter to [select customers by their reference IDs](https://developer.squareup.com/docs/docs/customers-api/cookbook/search-customers#search-by-reference-id).\nThis filter is case insensitive.\n\n[Exact matching](https://developer.squareup.com/docs/docs/customers-api/cookbook/search-customers#exact-search-by-reference-id) \nof a customer\u0027s reference ID against a query\u0027s reference ID is evaluated as\nexact match between two strings, character by character in the given order.\n\n[Fuzzy matching](https://developer.squareup.com/docs/docs/customers-api/cookbook/search-customers#fuzzy-search-by-reference-id) of stored reference IDs against queried reference IDs works \nexactly the same as fuzzy matching on email addresses. Non-alphanumeric characters \nare replaced by spaces to tokenize stored and queried reference IDs. A match is found\nif a tokenized stored reference ID contains all tokens specified in any order in the query. For example,\na query of `NYC M` will match customer profiles with the `reference_id` value of `NYC_M_35_JOHNSON`\nand `NYC_27_MURRAY`.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "group_ids": {
          "$ref": "#/definitions/FilterValue",
          "description": "A filter to select customers based on their group membership.\n\nThe `group_ids` is a JSON object of the following general format:\n```\n\"group_ids\": {\n\"any\":  [\"{group_a_id}\", \"{group_b_id}\", ...],\n\"all\":  [\"{group_1_id}\", \"{group_2_id}\", ...],\n\u0027none\": [\"{group_i_id}\", \"{group_ii_id}\", ...]\n}\n```\n\nYou can use any combination of the above `group_ids` fields (also known as `FilterValue` properties) \nto specify how customers are selected based on their group membership.  \nWith the `any` option, the search returns customers in Groups `A` or `B` or ... of the list.\nWith the `all` option, the search returns customers in Groups `1` and `2` and ... of the list.\nWith the `none` option, the search returns customers not in Groups `i` and not in `ii` and not in ... of the list.\n\nIf any of the search conditions are not met, including when an invalid or non-existent group ID is provided, the result is an empty list. \n\nYou can use the `group_ids` search filter with other available filters. \n\nYou cannot use the `group_ids` filter to select customers based on segment membership.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "Represents a set of `CustomerQuery` filters used to limit the set of\n`Customers` returned by `SearchCustomers`.",
      "x-release-status": "PUBLIC"
    },
    "CustomerGroup": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "maxLength": 255,
          "type": "string",
          "description": "Unique Square-generated ID for the customer group.",
          "x-read-only": true
        },
        "name": {
          "type": "string",
          "description": "Name of the customer group."
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp when the customer group was created, in RFC 3339 format.",
          "x-read-only": true
        },
        "updated_at": {
          "type": "string",
          "description": "The timesamp when the customer group was last updated, in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "Represents a group of customer profiles. \n\nCustomer groups can be created, modified, and have their membership defined either via \nthe Customers API or within Customer Directory in the Square Dashboard or Point of Sale.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CustomerGroupInfo": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the Customer Group."
        },
        "name": {
          "type": "string",
          "description": "The name of the Customer Group."
        }
      },
      "description": "Contains some brief information about a Customer Group with its identifier included.",
      "x-release-status": "PUBLIC"
    },
    "CustomerPreferences": {
      "type": "object",
      "properties": {
        "email_unsubscribed": {
          "type": "boolean",
          "description": "The customer has unsubscribed from receiving marketing campaign emails."
        }
      },
      "description": "Represents communication preferences for the customer profile.",
      "x-release-status": "PUBLIC"
    },
    "CustomerQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/CustomerFilter",
          "description": "A list of filtering criteria."
        },
        "sort": {
          "$ref": "#/definitions/CustomerSort",
          "description": "Sorting criteria for query results. The default behavior is to sort \ncustomers alphabetically by `given_name` and `family_name`."
        }
      },
      "description": "Represents a query (including filtering criteria, sorting criteria, or both) used to search\nfor customer profiles.",
      "x-release-status": "PUBLIC"
    },
    "CustomerSegment": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "maxLength": 255,
          "type": "string",
          "description": "Unique Square-generated ID for the segment.",
          "x-read-only": true
        },
        "name": {
          "type": "string",
          "description": "Name of the segment.",
          "x-read-only": true
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp when the segment was created, in RFC 3339 format.",
          "x-read-only": true
        },
        "updated_at": {
          "type": "string",
          "description": "The timestamp when the segment was last updated, in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "Represents a group of customer profiles that match one or more predefined filter criteria. \n\nSegments (also known as Smart Groups) are defined and created within Customer Directory in the Square Dashboard or Point of Sale.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "CustomerSort": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": " Use one or more customer attributes as the sort key to sort searched customer profiles. \nFor example, use creation date (`created_at`) of customers or default attributes as the sort key.\n\n\nDefault: `DEFAULT`.\nSee [CustomerSortField](#type-customersortfield) for possible values"
        },
        "order": {
          "type": "string",
          "description": "Indicates the order in which results should be sorted based on the\nsort field value. Strings use standard alphabetic comparison\nto determine order. Strings representing numbers are sorted as strings.\n\nDefault: `ASC`.\nSee [SortOrder](#type-sortorder) for possible values"
        }
      },
      "description": "Specifies how searched customers profiles are sorted, including the sort key and sort order.",
      "x-release-status": "PUBLIC"
    },
    "CustomerTextFilter": {
      "type": "object",
      "properties": {
        "exact": {
          "type": "string",
          "description": "Use the exact filter to select customers whose attributes match exactly the specified query."
        },
        "fuzzy": {
          "type": "string",
          "description": "Use the fuzzy filter to select customers whose attributes match the specified query \nin a fuzzy manner. When the fuzzy option is used, search queries are tokenized, and then \neach query token must be matched somewhere in the searched attribute. For single token queries, \nthis is effectively the same behavior as a partial match operation."
        }
      },
      "description": "A filter to select customers based on exact or fuzzy matching of\ncustomer attributes against a specified query. Depending on customer attributes, \nthe filter can be case sensitive. This filter can be either exact or fuzzy. It cannot be both.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DateRange": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string",
          "description": "String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601\nextended format for calendar dates.\nThe beginning of a date range (inclusive)"
        },
        "end_date": {
          "type": "string",
          "description": "String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601\nextended format for calendar dates.\nThe end of a date range (inclusive)"
        }
      },
      "description": "A range defined by two dates. Used for filtering a query for Connect v2 \nobjects that have date properties.",
      "x-release-status": "PUBLIC"
    },
    "DeleteBreakTypeRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to delete a `BreakType`",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "DeleteBreakTypeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to delete a `BreakType`. May contain a set \nof `Error` objects if the request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "DeleteCatalogObjectRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.python",
        "csharp": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.csharp",
        "java": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.java",
        "php": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.php",
        "javascript": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.javascript",
        "ruby": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.ruby"
      }
    },
    "DeleteCatalogObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on any errors encountered."
        },
        "deleted_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all catalog objects deleted by this request.\nMultiple IDs may be returned when associated objects are also deleted, for example\na catalog item variation will be deleted (and its ID included in this field)\nwhen its parent catalog item is deleted."
        },
        "deleted_at": {
          "type": "string",
          "description": "The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nof this deletion in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "deleted_object_ids": [
          "7SB3ZQYJ5GDMVFL7JK46JCHT",
          "KQLFFHA6K6J3YQAQAWDQAL57"
        ],
        "deleted_at": "2016-11-16T22:25:24.878Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.python",
        "csharp": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.csharp",
        "java": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.java",
        "php": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.php",
        "javascript": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.javascript",
        "ruby": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.ruby"
      }
    },
    "DeleteCustomerCardRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the fields that are included in requests to the\nDeleteCustomerCard endpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.python",
        "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.csharp",
        "java": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.java",
        "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.php",
        "javascript": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.javascript",
        "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.ruby"
      }
    },
    "DeleteCustomerCardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the DeleteCustomerCard endpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.python",
        "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.csharp",
        "java": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.java",
        "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.php",
        "javascript": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.javascript",
        "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.ruby"
      }
    },
    "DeleteCustomerGroupRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the fields that can be provided in a request to the\n[DeleteCustomerGroup](#endpoint-deletecustomergroup) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "DeleteCustomerGroupResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [DeleteCustomerGroup](#endpoint-deletecustomergroup) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {}
    },
    "DeleteCustomerRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the fields that are included in a request to the DeleteCustomer\nendpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.python",
        "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.csharp",
        "java": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.java",
        "php": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.php",
        "javascript": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.javascript",
        "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.ruby"
      }
    },
    "DeleteCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the DeleteCustomer endpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.python",
        "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.csharp",
        "java": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.java",
        "php": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.php",
        "javascript": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.javascript",
        "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.ruby"
      }
    },
    "DeleteInvoiceRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "description": "The version of the `invoice` to delete.\nIf you do not know the version, you can call `GetInvoice` or \n`ListInvoices`."
        }
      },
      "description": "Describes a `DeleteInvoice` request.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DeleteInvoiceResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        }
      },
      "description": "Describes a `DeleteInvoice` response.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DeleteLoyaltyRewardRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to delete a loyalty reward.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_params": "?reward_id\u003d9f18ac21-233a-31c3-be77-b45840f5a810"
      }
    },
    "DeleteLoyaltyRewardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "A response returned by the API call.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {}
    },
    "DeleteShiftRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to delete a `Shift`",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "DeleteShiftResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to delete a `Shift`. May contain a set of \n`Error` objects if the request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "Device": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The device\u0027s Square-issued ID."
        },
        "name": {
          "type": "string",
          "description": "The device\u0027s merchant-specified name."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "DeviceCheckoutOptions": {
      "type": "object",
      "required": [
        "device_id"
      ],
      "properties": {
        "device_id": {
          "type": "string",
          "description": "The unique Id of the device intended for this `TerminalCheckout`.\nThe Id can be retrieved from /v2/devices api."
        },
        "skip_receipt_screen": {
          "type": "boolean",
          "description": "Instruct the device to skip the receipt screen. Defaults to false."
        },
        "tip_settings": {
          "$ref": "#/definitions/TipSettings",
          "description": "Tip specific settings"
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DeviceCode": {
      "type": "object",
      "required": [
        "product_type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique id for this device code.",
          "x-read-only": true
        },
        "name": {
          "maxLength": 128,
          "type": "string",
          "description": "An optional user-defined name for the device code."
        },
        "code": {
          "type": "string",
          "description": "The unique code that can be used to login.",
          "x-read-only": true
        },
        "device_id": {
          "type": "string",
          "description": "The unique id of the device that used this code. Populated when the device is paired up.",
          "x-read-only": true
        },
        "product_type": {
          "type": "string",
          "description": "The targeting product type of the device code.\nSee [ProductType](#type-producttype) for possible values"
        },
        "location_id": {
          "maxLength": 50,
          "type": "string",
          "description": "The location assigned to this code."
        },
        "status": {
          "type": "string",
          "description": "The pairing status of the device code.\nSee [DeviceCodeStatus](#type-devicecodestatus) for possible values",
          "x-read-only": true
        },
        "pair_by": {
          "type": "string",
          "description": "When this DeviceCode will expire and no longer login. Timestamp in RFC 3339 format.",
          "x-read-only": true
        },
        "created_at": {
          "type": "string",
          "description": "When this DeviceCode was created. Timestamp in RFC 3339 format.",
          "x-read-only": true
        },
        "status_changed_at": {
          "type": "string",
          "description": "When this DeviceCode\u0027s status was last changed. Timestamp in RFC 3339 format.",
          "x-read-only": true
        },
        "paired_at": {
          "type": "string",
          "description": "When this DeviceCode was paired. Timestamp in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DeviceDetails": {
      "type": "object",
      "properties": {
        "device_id": {
          "maxLength": 255,
          "type": "string",
          "description": "Square-issued ID of the device."
        },
        "device_name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the device set by the merchant."
        }
      },
      "description": "Details about the device that took the payment.",
      "x-release-status": "PUBLIC"
    },
    "Dispute": {
      "type": "object",
      "properties": {
        "dispute_id": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "Unique ID for this `Dispute`, generated by Square."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The disputed amount. The amount can be less than the entire transaction amount.\nFor example, a cardholder\npurchased multiple items, however initiated dispute only for some of the items."
        },
        "reason": {
          "type": "string",
          "description": "The dispute reason why cardholder initiated dispute with their bank.\nSee [DisputeReason](#type-disputereason) for possible values"
        },
        "state": {
          "type": "string",
          "description": "The current state of this dispute.\nSee [DisputeState](#type-disputestate) for possible values"
        },
        "due_at": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "The time when the next action is due, in RFC 3339 format."
        },
        "disputed_payment": {
          "$ref": "#/definitions/DisputedPayment",
          "description": "The payment challenged in this dispute."
        },
        "evidence_ids": {
          "type": "array",
          "items": {
            "minLength": 1,
            "maxLength": 40,
            "type": "string"
          },
          "description": "The IDs of the evidence associated with the dispute."
        },
        "card_brand": {
          "type": "string",
          "description": "The card brand used in the disputed payment.\nSee [CardBrand](#type-cardbrand) for possible values"
        },
        "created_at": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "Timestamp when the dispute was created, in RFC 3339 format."
        },
        "updated_at": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "Timestamp when dispute was last updated, in RFC 3339 format."
        },
        "brand_dispute_id": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "ID of the dispute in the card brand system, generated by the card brand."
        },
        "reported_date": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "Timestamp when the dispute was reported, in RFC 3339 format."
        },
        "version": {
          "type": "integer",
          "description": "The current version of the `Dispute`."
        },
        "location_id": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "The ID of location where dispute originated."
        }
      },
      "description": "Represents a dispute a cardholder initiated with their bank.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DisputeEvidence": {
      "type": "object",
      "properties": {
        "evidence_id": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "The Square-generated ID of the evidence."
        },
        "dispute_id": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "The ID of the dispute the evidence is associated with."
        },
        "uploaded_at": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "The time when the next action is due, in RFC 3339 format."
        },
        "evidence_type": {
          "type": "string",
          "description": "The type of the evidence.\nSee [DisputeEvidenceType](#type-disputeevidencetype) for possible values"
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DisputeEvidenceFile": {
      "type": "object",
      "properties": {
        "filename": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "The file name including the file extension. For example: \"receipt.tiff\"."
        },
        "filetype": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "Dispute evidence files must one of application/pdf, image/heic, image/heif, image/jpeg, image/png, image/tiff formats."
        }
      },
      "description": "A file to be uploaded as dispute evidence.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "DisputedPayment": {
      "type": "object",
      "properties": {
        "payment_id": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "Square-generated unique ID of the payment being disputed."
        }
      },
      "description": "The payment the cardholder disputed.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "Employee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID for this object."
        },
        "first_name": {
          "type": "string",
          "description": "The employee\u0027s first name."
        },
        "last_name": {
          "type": "string",
          "description": "The employee\u0027s last name."
        },
        "email": {
          "type": "string",
          "description": "The employee\u0027s email address"
        },
        "phone_number": {
          "type": "string",
          "description": "The employee\u0027s phone number in E.164 format, i.e. \"+12125554250\""
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of location IDs where this employee has access to."
        },
        "status": {
          "type": "string",
          "description": "Specifies the status of the employees being fetched.\nSee [EmployeeStatus](#type-employeestatus) for possible values"
        },
        "is_owner": {
          "type": "boolean",
          "description": "Whether this employee is the owner of the merchant. Each merchant\nhas one owner employee, and that employee has full authority over\nthe account."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format."
        },
        "updated_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format."
        }
      },
      "description": "An employee object that is used by the external API.",
      "x-release-status": "PUBLIC"
    },
    "EmployeeWage": {
      "type": "object",
      "required": [
        "employee_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID for this object."
        },
        "employee_id": {
          "minLength": 1,
          "type": "string",
          "description": "The `Employee` that this wage is assigned to."
        },
        "title": {
          "type": "string",
          "description": "The job title that this wage relates to."
        },
        "hourly_rate": {
          "$ref": "#/definitions/Money",
          "description": "Can be a custom-set hourly wage or the calculated effective hourly\nwage based on annual wage and hours worked per week."
        }
      },
      "description": "The hourly wage rate that an employee will earn on a `Shift` for doing the job\nspecified by the `title` property of this object.",
      "x-release-status": "PUBLIC"
    },
    "Error": {
      "type": "object",
      "required": [
        "category",
        "code"
      ],
      "properties": {
        "category": {
          "type": "string",
          "description": "The high-level category for the error. See `ErrorCategory`\nfor possible values.\nSee [ErrorCategory](#type-errorcategory) for possible values"
        },
        "code": {
          "type": "string",
          "description": "The specific code of the error. See `ErrorCode` for possible\nvalues\nSee [ErrorCode](#type-errorcode) for possible values"
        },
        "detail": {
          "type": "string",
          "description": "A human-readable description of the error for debugging purposes."
        },
        "field": {
          "type": "string",
          "description": "The name of the field provided in the original request (if any) that\nthe error pertains to."
        }
      },
      "description": "Represents an error encountered during a request to the Connect API.\n\nSee [Handling errors](#handlingerrors) for more information.",
      "x-release-status": "PUBLIC"
    },
    "FilterValue": {
      "type": "object",
      "properties": {
        "all": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of terms that must be present on the field of the resource."
        },
        "any": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of terms where at least one of them must be present on the\nfield of the resource."
        },
        "none": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of terms that must not be present on the field the resource"
        }
      },
      "description": "A filter to select resources based on an exact field value. For any given\nvalue, the value can only be in one property. Depending on the field, either\nall properties can be set or only a subset will be available.\n\nRefer to the documentation of the field.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "GetBankAccountByV1IdRequest": {
      "type": "object",
      "properties": {},
      "description": "Request object for fetching a specific `BankAccount`\nby the object ID.",
      "x-release-status": "PUBLIC"
    },
    "GetBankAccountByV1IdResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "bank_account": {
          "$ref": "#/definitions/BankAccount",
          "description": "The requested `BankAccount` object."
        }
      },
      "description": "Response object returned by GetBankAccountByV1Id.",
      "x-release-status": "PUBLIC",
      "example": {
        "bank_account": {
          "id": "w3yRgCGYQnwmdl0R3GB",
          "account_number_suffix": "971",
          "country": "US",
          "currency": "USD",
          "account_type": "CHECKING",
          "holder_name": "Jane Doe",
          "primary_bank_identification_number": "112200303",
          "location_id": "S8GWD5example",
          "status": "VERIFICATION_IN_PROGRESS",
          "creditable": false,
          "debitable": false,
          "version": 5,
          "bank_name": "Bank Name"
        }
      }
    },
    "GetBankAccountRequest": {
      "type": "object",
      "properties": {},
      "description": "Request object to fetch a specific `BankAccount`\nby the object ID.",
      "x-release-status": "PUBLIC"
    },
    "GetBankAccountResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "bank_account": {
          "$ref": "#/definitions/BankAccount",
          "description": "The requested `BankAccount` object."
        }
      },
      "description": "Response object returned by `GetBankAccount`.",
      "x-release-status": "PUBLIC",
      "example": {
        "bank_account": {
          "id": "w3yRgCGYQnwmdl0R3GB",
          "account_number_suffix": "971",
          "country": "US",
          "currency": "USD",
          "account_type": "CHECKING",
          "holder_name": "Jane Doe",
          "primary_bank_identification_number": "112200303",
          "location_id": "S8GWD5example",
          "status": "VERIFICATION_IN_PROGRESS",
          "creditable": false,
          "debitable": false,
          "version": 5,
          "bank_name": "Bank Name"
        }
      }
    },
    "GetBreakTypeRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to GET a `BreakType` by ID",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "GetBreakTypeResponse": {
      "type": "object",
      "properties": {
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The response object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to get a `BreakType`. Contains\nthe requested `BreakType` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "break_type": {
          "id": "lA0mj_RSOprNPwMUXdYp",
          "location_id": "059SB0E0WCNWS",
          "break_name": "Lunch Break",
          "expected_duration": "PT30M",
          "is_paid": true,
          "version": 1,
          "created_at": "2019-02-21T17:50:00Z",
          "updated_at": "2019-02-21T17:50:00Z"
        }
      }
    },
    "GetDeviceCodeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "GetDeviceCodeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "device_code": {
          "$ref": "#/definitions/DeviceCode",
          "description": "The queried DeviceCode."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "device_code": {
          "id": "B3Z6NAMYQSMTM",
          "name": "Counter 1",
          "code": "EBCARJ",
          "product_type": "TERMINAL_API",
          "location_id": "B5E4484SHHNYH",
          "created_at": "2020-02-06T18:44:33.000Z",
          "pair_by": "2020-02-06T18:49:33.000Z",
          "status": "PAIRED",
          "device_id": "907CS13101300122",
          "status_changed_at": "2020-02-06T18:47:28.000Z"
        }
      }
    },
    "GetEmployeeWageRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to get an `EmployeeWage`",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "GetEmployeeWageResponse": {
      "type": "object",
      "properties": {
        "employee_wage": {
          "$ref": "#/definitions/EmployeeWage",
          "description": "The requested `EmployeeWage` object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "A response to a request to get an `EmployeeWage`. Contains\nthe requested `EmployeeWage` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "employee_wage": {
          "id": "pXS3qCv7BERPnEGedM4S8mhm",
          "employee_id": "33fJchumvVdJwxV0H6L9",
          "title": "Manager",
          "hourly_rate": {
            "amount": 2000,
            "currency": "USD"
          }
        }
      }
    },
    "GetInvoiceRequest": {
      "type": "object",
      "properties": {},
      "description": "Describes a `GetInvoice` request.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "GetInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/Invoice",
          "description": "The invoice requested."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        }
      },
      "description": "Describes a `GetInvoice` response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "invoice": {
          "id": "gt2zv1z6mnUm1V7KMxxf3w",
          "version": 0,
          "location_id": "ES0RJRZYEC39A",
          "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
          "payment_requests": [
            {
              "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
              "request_method": "EMAIL",
              "request_type": "BALANCE",
              "due_date": "2030-01-24",
              "tipping_enabled": true,
              "reminders": [
                {
                  "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                  "relative_scheduled_days": -1,
                  "message": "Your invoice is due tomorrow",
                  "status": "PENDING"
                }
              ],
              "computed_amount_money": {
                "amount": 10000,
                "currency": "USD"
              },
              "total_completed_amount_money": {
                "amount": 0,
                "currency": "USD"
              }
            }
          ],
          "invoice_number": "inv-100",
          "title": "Event Planning Services",
          "description": "We appreciate your business!",
          "scheduled_at": "2030-01-13T10:00:00Z",
          "status": "DRAFT",
          "timezone": "America/Los_Angeles",
          "created_at": "2020-06-18T17:45:13Z",
          "updated_at": "2020-06-18T17:45:13Z",
          "primary_recipient": {
            "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "phone_number": "1-212-555-4240"
          }
        }
      }
    },
    "GetPaymentRefundRequest": {
      "type": "object",
      "properties": {},
      "description": "Retrieves a specific `Refund` using the `refund_id`.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {}
      }
    },
    "GetPaymentRefundResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "refund": {
          "$ref": "#/definitions/PaymentRefund",
          "description": "The requested `PaymentRefund`."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [GetRefund](#endpoint-refunds-getpaymentrefund) endpoint.\n\nNote: if there are errors processing the request, the refund field may not be\npresent, or it may be present in a FAILED state.",
      "x-release-status": "PUBLIC",
      "example": {
        "refund": {
          "id": "O2QAAhTYs7rUfzlxT38GMO7LvaB_q7JwCHtxmgXrh8fAhV468WQ44VxDtL7CU4yVRlsbXmI",
          "created_at": "2019-07-06T18:01:22.123Z",
          "updated_at": "2019-07-06T18:06:03.874Z",
          "status": "COMPLETED",
          "amount_money": {
            "amount": 1000,
            "currency": "USD"
          },
          "payment_id": "O2QAAhTYs7rUfzlxT38GMO7LvaB",
          "order_id": "2duiyoqbfeXY0DBi15GEyk5Epa4F",
          "location_id": "XK3DBG77NJBFX",
          "processing_fee": [
            {
              "effective_at": "2019-07-06T20:01:12.000Z",
              "type": "INITIAL",
              "amount_money": {
                "amount": -59,
                "currency": "USD"
              }
            }
          ]
        }
      }
    },
    "GetPaymentRequest": {
      "type": "object",
      "properties": {},
      "description": "Retrieve details for a specific Payment.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {}
      }
    },
    "GetPaymentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "payment": {
          "$ref": "#/definitions/Payment",
          "description": "The requested `Payment`."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [GetPayment](#endpoint-payments-getpayment) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "payment": {
          "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
          "created_at": "2019-07-10T13:23:49.154Z",
          "updated_at": "2019-07-10T13:23:49.446Z",
          "amount_money": {
            "amount": 200,
            "currency": "USD"
          },
          "app_fee_money": {
            "amount": 10,
            "currency": "USD"
          },
          "total_money": {
            "amount": 200,
            "currency": "USD"
          },
          "status": "COMPLETED",
          "source_type": "CARD",
          "card_details": {
            "status": "CAPTURED",
            "card": {
              "card_brand": "VISA",
              "last_4": "1111",
              "exp_month": 7,
              "exp_year": 2026,
              "fingerprint": "sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw",
              "card_type": "DEBIT",
              "prepaid_type": "PREPAID",
              "bin": "411111"
            },
            "entry_method": "ON_FILE",
            "cvv_status": "CVV_ACCEPTED",
            "avs_status": "AVS_ACCEPTED",
            "auth_result_code": "nsAyY2",
            "statement_description": "SQ *MY MERCHANT"
          },
          "location_id": "XTI0H92143A39",
          "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
          "reference_id": "123456",
          "note": "Brief description",
          "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I",
          "processing_fee": [
            {
              "effective_at": "2019-07-10T15:23:49.000Z",
              "type": "INITIAL",
              "amount_money": {
                "amount": 36,
                "currency": "USD"
              }
            }
          ],
          "receipt_number": "GQTF",
          "receipt_url": "https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf"
        }
      }
    },
    "GetShiftRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to get a `Shift` by ID",
      "x-release-status": "PUBLIC",
      "example": {}
    },
    "GetShiftResponse": {
      "type": "object",
      "properties": {
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The requested `Shift`."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "A response to request to get a `Shift`. Contains\nthe requested `Shift` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "shift": {
          "id": "T35HMQSN89SV4",
          "employee_id": "D71KRMQof6cXGUW0aAv7",
          "location_id": "PAA1RJZZKXBFG",
          "timezone": "America/New_York",
          "start_at": "2019-02-23T18:00:00-05:00",
          "end_at": "2019-02-23T21:00:00-05:00",
          "wage": {
            "title": "Cashier",
            "hourly_rate": {
              "amount": 1457,
              "currency": "USD"
            }
          },
          "breaks": [
            {
              "id": "M9BBKEPQAQD2T",
              "start_at": "2019-02-23T19:00:00-05:00",
              "end_at": "2019-02-23T20:00:00-05:00",
              "break_type_id": "92EPDRQKJ5088",
              "name": "Lunch Break",
              "expected_duration": "PT1H",
              "is_paid": true
            }
          ],
          "status": "CLOSED",
          "version": 1,
          "created_at": "2019-02-27T00:12:12Z",
          "updated_at": "2019-02-27T00:12:12Z"
        }
      }
    },
    "GetTerminalCheckoutRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "GetTerminalCheckoutResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "checkout": {
          "$ref": "#/definitions/TerminalCheckout",
          "description": "The requested `Checkout`"
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "checkout": {
          "id": "08YceKh7B3ZqO",
          "amount_money": {
            "amount": 2610,
            "currency": "USD"
          },
          "reference_id": "id11572",
          "note": "A brief note",
          "device_options": {
            "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
            "tip_settings": {
              "allow_tipping": false
            },
            "skip_receipt_screen": false
          },
          "status": "IN_PROGRESS",
          "created_at": "2020-04-06T16:39:32.545Z",
          "updated_at": "2020-04-06T16:39:323.001Z",
          "app_id": "APP_ID",
          "deadline_duration": "PT10M"
        }
      }
    },
    "InventoryAdjustment": {
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 100,
          "type": "string",
          "description": "A unique ID generated by Square for the\n`InventoryAdjustment`."
        },
        "reference_id": {
          "maxLength": 255,
          "type": "string",
          "description": "An optional ID provided by the application to tie the\n`InventoryAdjustment` to an external\nsystem."
        },
        "from_state": {
          "type": "string",
          "description": "The `InventoryState` of the related quantity\nof items before the adjustment.\nSee [InventoryState](#type-inventorystate) for possible values"
        },
        "to_state": {
          "type": "string",
          "description": "The `InventoryState` of the related quantity\nof items after the adjustment.\nSee [InventoryState](#type-inventorystate) for possible values"
        },
        "location_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square ID of the `Location` where the related\nquantity of items are being tracked."
        },
        "catalog_object_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square generated ID of the\n`CatalogObject` being tracked."
        },
        "catalog_object_type": {
          "maxLength": 14,
          "type": "string",
          "description": "The `CatalogObjectType` of the\n`CatalogObject` being tracked. Tracking is only\nsupported for the `ITEM_VARIATION` type."
        },
        "quantity": {
          "maxLength": 26,
          "type": "string",
          "description": "The number of items affected by the adjustment as a decimal string.\nCan support up to 5 digits after the decimal point."
        },
        "total_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The read-only total price paid for goods associated with the\nadjustment. Present if and only if `to_state` is `SOLD`. Always\nnon-negative."
        },
        "occurred_at": {
          "maxLength": 34,
          "type": "string",
          "description": "A client-generated timestamp in RFC 3339 format that indicates when\nthe adjustment took place. For write actions, the `occurred_at`\ntimestamp cannot be older than 24 hours or in the future relative to the\ntime of the request."
        },
        "created_at": {
          "maxLength": 34,
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the adjustment."
        },
        "source": {
          "$ref": "#/definitions/SourceApplication",
          "description": "Read-only information about the application that caused the\ninventory adjustment."
        },
        "employee_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square ID of the `Employee` responsible for the\ninventory adjustment."
        },
        "transaction_id": {
          "maxLength": 255,
          "type": "string",
          "description": "The read-only Square ID of the [Transaction][#type-transaction] that\ncaused the adjustment. Only relevant for payment-related state\ntransitions."
        },
        "refund_id": {
          "maxLength": 255,
          "type": "string",
          "description": "The read-only Square ID of the [Refund][#type-refund] that\ncaused the adjustment. Only relevant for refund-related state\ntransitions."
        },
        "purchase_order_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The read-only Square ID of the purchase order that caused the\nadjustment. Only relevant for state transitions from the Square for Retail\napp."
        },
        "goods_receipt_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The read-only Square ID of the Square goods receipt that caused the\nadjustment. Only relevant for state transitions from the Square for Retail\napp."
        }
      },
      "description": "Represents a change in state or quantity of product inventory at a\nparticular time and location.",
      "x-release-status": "PUBLIC"
    },
    "InventoryChange": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Indicates how the inventory change was applied. See\n`InventoryChangeType` for all possible values.\nSee [InventoryChangeType](#type-inventorychangetype) for possible values"
        },
        "physical_count": {
          "$ref": "#/definitions/InventoryPhysicalCount",
          "description": "Contains details about the physical count when `type` is\n`PHYSICAL_COUNT` and unset for all other types."
        },
        "adjustment": {
          "$ref": "#/definitions/InventoryAdjustment",
          "description": "Contains details about the inventory adjustment when `type` is\n`ADJUSTMENT` and unset for all other types."
        },
        "transfer": {
          "$ref": "#/definitions/InventoryTransfer",
          "description": "Contains details about the inventory transfer when `type` is\n`TRANSFER` and unset for all other types.\n\n_Note:_ An `InventoryTransfer` object is read-only and can only be present in a\n`RetrieveInventoryChangesResponse` and `BatchRetrieveInventoryChangesResponse` object."
        }
      },
      "description": "Represents a single physical count, inventory, adjustment, or transfer\nthat is part of the history of inventory changes for a particular\n`CatalogObject`.",
      "x-release-status": "PUBLIC"
    },
    "InventoryCount": {
      "type": "object",
      "properties": {
        "catalog_object_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square generated ID of the\n`CatalogObject` being tracked."
        },
        "catalog_object_type": {
          "maxLength": 14,
          "type": "string",
          "description": "The `CatalogObjectType` of the\n`CatalogObject` being tracked. Tracking is only\nsupported for the `ITEM_VARIATION` type."
        },
        "state": {
          "type": "string",
          "description": "The current `InventoryState` for the related\nquantity of items.\nSee [InventoryState](#type-inventorystate) for possible values"
        },
        "location_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square ID of the `Location` where the related\nquantity of items are being tracked."
        },
        "quantity": {
          "maxLength": 26,
          "type": "string",
          "description": "The number of items affected by the estimated count as a decimal string.\nCan support up to 5 digits after the decimal point."
        },
        "calculated_at": {
          "maxLength": 34,
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the most recent physical count or adjustment that had an affect\non the estimated count."
        }
      },
      "description": "Represents Square\u0027s estimated quantity of items in a particular state at a\nparticular location based on the known history of physical counts and\ninventory adjustments.",
      "x-release-status": "PUBLIC"
    },
    "InventoryPhysicalCount": {
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 100,
          "type": "string",
          "description": "A unique ID generated by Square for the\n`InventoryPhysicalCount`."
        },
        "reference_id": {
          "maxLength": 255,
          "type": "string",
          "description": "An optional ID provided by the application to tie the\n`InventoryPhysicalCount` to an external\nsystem."
        },
        "catalog_object_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square generated ID of the\n`CatalogObject` being tracked."
        },
        "catalog_object_type": {
          "maxLength": 14,
          "type": "string",
          "description": "The `CatalogObjectType` of the\n`CatalogObject` being tracked. Tracking is only\nsupported for the `ITEM_VARIATION` type."
        },
        "state": {
          "type": "string",
          "description": "The current `InventoryState` for the related\nquantity of items.\nSee [InventoryState](#type-inventorystate) for possible values"
        },
        "location_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square ID of the `Location` where the related\nquantity of items are being tracked."
        },
        "quantity": {
          "maxLength": 26,
          "type": "string",
          "description": "The number of items affected by the physical count as a decimal string.\nCan support up to 5 digits after the decimal point."
        },
        "source": {
          "$ref": "#/definitions/SourceApplication",
          "description": "Read-only information about the application that submitted the\nphysical count."
        },
        "employee_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square ID of the `Employee` responsible for the\nphysical count."
        },
        "occurred_at": {
          "maxLength": 34,
          "type": "string",
          "description": "A client-generated timestamp in RFC 3339 format that indicates when\nthe physical count took place. For write actions, the `occurred_at`\ntimestamp cannot be older than 24 hours or in the future relative to the\ntime of the request."
        },
        "created_at": {
          "maxLength": 34,
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the physical count."
        }
      },
      "description": "Represents the quantity of an item variation that is physically present\nat a specific location, verified by a seller or a seller\u0027s employee. For example,\na physical count might come from an employee counting the item variations on\nhand or from syncing with an external system.",
      "x-release-status": "PUBLIC"
    },
    "InventoryTransfer": {
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 100,
          "type": "string",
          "description": "A unique ID generated by Square for the\n`InventoryTransfer`."
        },
        "reference_id": {
          "maxLength": 255,
          "type": "string",
          "description": "An optional ID provided by the application to tie the\n`InventoryTransfer` to an external system."
        },
        "state": {
          "type": "string",
          "description": "The `InventoryState` for the quantity of\nitems being transferred.\nSee [InventoryState](#type-inventorystate) for possible values"
        },
        "from_location_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square ID of the `Location` where the related\nquantity of items were tracked before the transfer."
        },
        "to_location_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square ID of the `Location` where the related\nquantity of items were tracked after the transfer."
        },
        "catalog_object_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square generated ID of the\n`CatalogObject` being tracked."
        },
        "catalog_object_type": {
          "maxLength": 14,
          "type": "string",
          "description": "The `CatalogObjectType` of the\n`CatalogObject` being tracked.Tracking is only\nsupported for the `ITEM_VARIATION` type."
        },
        "quantity": {
          "maxLength": 26,
          "type": "string",
          "description": "The number of items affected by the transfer as a decimal string.\nCan support up to 5 digits after the decimal point."
        },
        "occurred_at": {
          "maxLength": 34,
          "type": "string",
          "description": "A client-generated timestamp in RFC 3339 format that indicates when\nthe transfer took place. For write actions, the `occurred_at` timestamp\ncannot be older than 24 hours or in the future relative to the time of the\nrequest."
        },
        "created_at": {
          "maxLength": 34,
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the transfer request."
        },
        "source": {
          "$ref": "#/definitions/SourceApplication",
          "description": "Read-only information about the application that initiated the\ninventory transfer."
        },
        "employee_id": {
          "maxLength": 100,
          "type": "string",
          "description": "The Square ID of the `Employee` responsible for the\ninventory transfer."
        }
      },
      "description": "Represents the transfer of a quantity of product inventory at a\nparticular time from one location to another.",
      "x-release-status": "PUBLIC"
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Square-assigned ID of the invoice.",
          "x-read-only": true
        },
        "version": {
          "type": "integer",
          "description": "The version number, which is incremented each time an update is committed to the invoice.",
          "x-read-only": true
        },
        "location_id": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "The ID of the location that this invoice is associated with.\nThis field is required when creating an invoice."
        },
        "order_id": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "The ID of the `order` for which the invoice is created.\n\nThis order must be in the `OPEN` state and must belong to the `location_id`\nspecified for this invoice. This field is required when creating an invoice."
        },
        "primary_recipient": {
          "$ref": "#/definitions/InvoiceRecipient",
          "description": "The customer who gets the invoice. Square uses the contact information\nto deliver the invoice. This field is required when creating an invoice."
        },
        "payment_requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoicePaymentRequest"
          },
          "description": "An array of `InvoicePaymentRequest` objects. Each object defines\na payment request in an invoice payment schedule. It provides information\nsuch as when and how Square processes payments. You can specify maximum of\nnine payment requests. All all the payment requests must specify the\nsame `request_method`.\n\nThis field is required when creating an invoice."
        },
        "invoice_number": {
          "minLength": 1,
          "maxLength": 191,
          "type": "string",
          "description": "A user-friendly invoice number. The value is unique within a location.\nIf not provided when creating an invoice, Square assigns a value.\nIt increments from 1 and padded with zeros making it 7 characters long\nfor example, 0000001, 0000002."
        },
        "title": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "The title of the invoice."
        },
        "description": {
          "minLength": 1,
          "maxLength": 65536,
          "type": "string",
          "description": "The description of the invoice. This is visible the customer receiving the invoice."
        },
        "scheduled_at": {
          "type": "string",
          "description": "The timestamp when the invoice is scheduled for processing, in RFC 3339 format.\nAt the specified time, depending on the `request_method`, Square sends the\ninvoice to the customer\u0027s email address or charge the customer\u0027s card on file.\n\nIf the field is not set, Square processes the invoice immediately after publication."
        },
        "public_url": {
          "type": "string",
          "description": "The URL of the Square-hosted invoice page.\nAfter you publish the invoice using the `PublishInvoice` endpoint, Square hosts the invoice\npage and returns the page URL in the response.",
          "x-read-only": true
        },
        "next_payment_amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The current amount due for the invoice. In addition to the\namount due on the next payment request, this also includes any overdue payment amounts.",
          "x-read-only": true
        },
        "status": {
          "type": "string",
          "description": "The status of the invoice.\nSee [InvoiceStatus](#type-invoicestatus) for possible values",
          "x-read-only": true
        },
        "timezone": {
          "type": "string",
          "description": "The time zone of the date values (for example, `due_date`) specified in the invoice.",
          "x-read-only": true
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp when the invoice was created, in RFC 3339 format.",
          "x-read-only": true
        },
        "updated_at": {
          "type": "string",
          "description": "The timestamp when the invoice was last updated, in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "Stores information about an invoice. You use the Invoices API to create and process\ninvoices. For more information, see [Manage Invoices Using the Invoices API](/docs/invoices-api/overview).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoiceFilter": {
      "type": "object",
      "required": [
        "location_ids"
      ],
      "properties": {
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Limits the search to the specified locations. A location is required. \nIn the current implementation, only one location can be specified."
        },
        "customer_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Limits the search to the specified customers, within the specified locations. \nSpecifying a customer is optional. In the current implementation, \na maximum of one customer can be specified."
        }
      },
      "description": "Describes query filters to apply.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoicePaymentReminder": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "description": "A Square-assigned ID that uniquely identifies the reminder within the\n`InvoicePaymentRequest`.",
          "x-read-only": true
        },
        "relative_scheduled_days": {
          "maximum": 32767,
          "minimum": -32767,
          "type": "integer",
          "description": "The number of days before (a negative number) or after (a positive number)\nthe payment request `due_date` when the reminder is sent. For example, -3 indicates that\nthe reminder should be sent 3 days before the payment request `due_date`."
        },
        "message": {
          "minLength": 1,
          "maxLength": 1000,
          "type": "string",
          "description": "The reminder message."
        },
        "status": {
          "type": "string",
          "description": "The status of the reminder.\nSee [InvoicePaymentReminderStatus](#type-invoicepaymentreminderstatus) for possible values",
          "x-read-only": true
        },
        "sent_at": {
          "type": "string",
          "description": "If sent, the timestamp when the reminder was sent, in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "Describes a payment request reminder (automatic notification) that Square sends\nto the customer. You configure a reminder relative to the payment request\n`due_date`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoicePaymentRequest": {
      "type": "object",
      "properties": {
        "uid": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "The Square-generated ID of the payment request in an `invoice`.",
          "x-read-only": true
        },
        "request_method": {
          "type": "string",
          "description": "Indicates how Square processes the payment request.\nSee [InvoiceRequestMethod](#type-invoicerequestmethod) for possible values"
        },
        "request_type": {
          "type": "string",
          "description": "Identifies the payment request type. This type defines how the payment request amount is determined.\nSee [InvoiceRequestType](#type-invoicerequesttype) for possible values"
        },
        "due_date": {
          "type": "string",
          "description": "The due date (in the invoice location\u0027s time zone) for the payment request. \nAfter this date, the invoice becomes overdue."
        },
        "fixed_amount_requested_money": {
          "$ref": "#/definitions/Money",
          "description": "If the payment request specifies `DEPOSIT` or `INSTALLMENT` as the \n`request_type`, \nthis indicates the request amount.\nYou cannot specify this when `request_type` is `BALANCE` or when the \npayment request includes the `percentage_requested` field."
        },
        "percentage_requested": {
          "type": "string",
          "description": "Specifies the amount for the payment request in percentage:\n\n- When the payment `request_type` is `DEPOSIT`, it is the percentage of the order total amount.\n- When the payment `request_type` is `INSTALLMENT`, it is the percentage of the order total less \nthe deposit, if requested. The sum of the `percentage_requested` in all installment \npayment requests must be equal to 100.\n\nYou cannot specify this when the payment `request_type` is `BALANCE` or when the \npayment request specifies the `fixed_amount_requested_money` field."
        },
        "tipping_enabled": {
          "type": "boolean",
          "description": "If set to true, the Square-hosted invoice page (the `public_url` field of the invoice) \nprovides a place for the customer to pay a tip. \n\nThis field is allowed only on the final payment request  \nand the payment `request_type` must be `BALANCE` or `INSTALLMENT`."
        },
        "card_id": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "If the request method is `CHARGE_CARD_ON_FILE`, this field provides the \ncard to charge."
        },
        "reminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoicePaymentReminder"
          },
          "description": "A list of one or more reminders to send for the payment request."
        },
        "computed_amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The payment request amount, computed using the order amount and information from the various payment request fields (`invoice_request_type`, \n`fixed_amount_requested_money`, and `percentage_requested`).",
          "x-read-only": true
        },
        "total_completed_amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money already paid for the specific payment request. \nThis amount might include a rounding adjustment if the most recent invoice payment \nwas in cash in a currency that rounds cash payments (such as, `CAD` or `AUD`).",
          "x-read-only": true
        },
        "rounding_adjustment_included_money": {
          "$ref": "#/definitions/Money",
          "description": "If the most recent payment was a cash payment \nin a currency that rounds cash payments (such as, `CAD` or `AUD`) and the payment \nis rounded from `computed_amount_money` in the payment request, then this \nfield specifies the rounding adjustment applied. This amount \nmight be negative.",
          "x-read-only": true
        }
      },
      "description": "Describes a specific payment request in an invoice. You can have \nup to nine payment requests for an invoice.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoiceQuery": {
      "type": "object",
      "required": [
        "filter"
      ],
      "properties": {
        "filter": {
          "$ref": "#/definitions/InvoiceFilter",
          "description": "Query filters to apply in  searching invoices. \nFor more information, see [Retrieve invoices](https://developer.squareup.com/docs/docs/invoices-api/overview#retrieve-invoices)."
        },
        "sort": {
          "$ref": "#/definitions/InvoiceSort",
          "description": "Describes the sort order for the search result."
        }
      },
      "description": "Describes query criteria for searching invoices.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoiceRecipient": {
      "type": "object",
      "properties": {
        "customer_id": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "The ID of the customer. This is the customer profile ID that \nyou provide when creating a draft invoice."
        },
        "given_name": {
          "type": "string",
          "description": "The recipient\u0027s given (that is, first) name.",
          "x-read-only": true
        },
        "family_name": {
          "type": "string",
          "description": "The recipient\u0027s family (that is, last) name.",
          "x-read-only": true
        },
        "email_address": {
          "type": "string",
          "description": "The recipient\u0027s email address.",
          "x-read-only": true
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The recipient\u0027s physical address.",
          "x-read-only": true
        },
        "phone_number": {
          "type": "string",
          "description": "The recipient\u0027s phone number.",
          "x-read-only": true
        },
        "company_name": {
          "type": "string",
          "description": "The name of the recipient\u0027s company.",
          "x-read-only": true
        }
      },
      "description": "Provides customer data that Square uses to deliver an invoice.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "InvoiceSort": {
      "type": "object",
      "required": [
        "field"
      ],
      "properties": {
        "field": {
          "type": "string",
          "description": "The field to sort on.\nSee [InvoiceSortField](#type-invoicesortfield) for possible values"
        },
        "order": {
          "type": "string",
          "description": "The order to use for sorting the results.\nSee [SortOrder](#type-sortorder) for possible values"
        }
      },
      "description": "Identifies the  sort field and sort order.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "ItemVariationLocationOverrides": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "The ID of the `Location`."
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The price of the `CatalogItemVariation` at the given `Location`, or blank for variable pricing."
        },
        "pricing_type": {
          "type": "string",
          "description": "The pricing type (fixed or variable) for the `CatalogItemVariation` at the given `Location`.\nSee [CatalogPricingType](#type-catalogpricingtype) for possible values"
        },
        "track_inventory": {
          "type": "boolean",
          "description": "If `true`, inventory tracking is active for the `CatalogItemVariation` at this `Location`."
        },
        "inventory_alert_type": {
          "type": "string",
          "description": "Indicates whether the `CatalogItemVariation` displays an alert when its inventory\nquantity is less than or equal to its `inventory_alert_threshold`.\nSee [InventoryAlertType](#type-inventoryalerttype) for possible values"
        },
        "inventory_alert_threshold": {
          "type": "integer",
          "format": "int64",
          "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer."
        }
      },
      "description": "Price and inventory alerting overrides for a `CatalogItemVariation` at a specific `Location`.",
      "x-release-status": "PUBLIC"
    },
    "JobAssignment": {
      "type": "object",
      "required": [
        "job_title",
        "pay_type"
      ],
      "properties": {
        "job_title": {
          "minLength": 1,
          "type": "string",
          "description": "The title of the job."
        },
        "pay_type": {
          "type": "string",
          "description": "The current pay type for the job assignment used to\ncalculate the pay amount in a pay period.\nSee [JobAssignmentPayType](#type-jobassignmentpaytype) for possible values"
        },
        "hourly_rate": {
          "$ref": "#/definitions/Money",
          "description": "The hourly pay rate of the job."
        },
        "annual_rate": {
          "$ref": "#/definitions/Money",
          "description": "The total pay amount for a 12 month period on the job. Set if the job `PayType` is `SALARY`."
        },
        "weekly_hours": {
          "type": "integer",
          "description": "The planned hours per week for the job. Set if the job `PayType` is `SALARY`."
        }
      },
      "description": "An object describing a job that a team member is assigned to.",
      "x-release-status": "PUBLIC"
    },
    "ListAdditionalRecipientReceivableRefundsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListAdditionalRecipientReceivableRefunds](#endpoint-listadditionalrecipientreceivablerefunds) endpoint.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "request_params": "?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.python",
        "csharp": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.csharp",
        "java": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.java",
        "php": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.php",
        "javascript": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.javascript",
        "ruby": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsRequest.ruby"
      }
    },
    "ListAdditionalRecipientReceivableRefundsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "receivable_refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipientReceivableRefund"
          },
          "description": "An array of AdditionalRecipientReceivableRefunds that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListAdditionalRecipientReceivableRefunds](#endpoint-listadditionalrecipientreceivablerefunds) endpoint.\n\nOne of `errors` or `additional_recipient_receivable_refunds` is present in a given response (never both).",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "receivable_refunds": [
          {
            "id": "Ge2OT7KA6XAg1GC15qs5S",
            "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF",
            "refund_id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
            "transaction_location_id": "18YC4JDH91E1H",
            "amount_money": {
              "amount": 10,
              "currency": "USD"
            },
            "created_at": "2016-01-20T22:57:56Z"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.python",
        "csharp": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.csharp",
        "java": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.java",
        "php": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.php",
        "javascript": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.javascript",
        "ruby": "/sdk_samples/ListAdditionalRecipientReceivableRefunds/ListAdditionalRecipientReceivableRefundsResponse.ruby"
      }
    },
    "ListAdditionalRecipientReceivablesRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListAdditionalRecipientReceivables](#endpoint-listadditionalrecipientreceivables) endpoint.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "request_params": "?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.python",
        "csharp": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.csharp",
        "java": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.java",
        "php": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.php",
        "javascript": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.javascript",
        "ruby": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesRequest.ruby"
      }
    },
    "ListAdditionalRecipientReceivablesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "receivables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipientReceivable"
          },
          "description": "An array of AdditionalRecipientReceivables that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListAdditionalRecipientReceivables](#endpoint-listadditionalrecipientreceivables) endpoint.\n\nOne of `errors` or `additional_recipient_receivables` is present in a given response (never both).",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "receivables": [
          {
            "id": "ISu5xwxJ5v0CMJTQq7RvqyMF",
            "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "transaction_location_id": "18YC4JDH91E1H",
            "amount_money": {
              "amount": 20,
              "currency": "USD"
            },
            "created_at": "2016-01-19T15:12:41Z",
            "refunds": [
              {
                "id": "Ge2OT7KA6XAg1GC15qs5S",
                "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF",
                "refund_id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
                "transaction_location_id": "18YC4JDH91E1H",
                "amount_money": {
                  "amount": 10,
                  "currency": "USD"
                },
                "created_at": "2016-01-20T22:57:56Z"
              }
            ]
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.python",
        "csharp": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.csharp",
        "java": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.java",
        "php": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.php",
        "javascript": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.javascript",
        "ruby": "/sdk_samples/ListAdditionalRecipientReceivables/ListAdditionalRecipientReceivablesResponse.ruby"
      }
    },
    "ListBankAccountsRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "The pagination cursor returned by a previous call to this endpoint.\nUse it in the next `ListBankAccounts` request to retrieve the next set \nof results.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information."
        },
        "limit": {
          "type": "integer",
          "description": "Upper limit on the number of bank accounts to return in the response. \nCurrently, 1000 is the largest supported limit. You can specify a limit \nof up to 1000 bank accounts. This is also the default limit."
        },
        "location_id": {
          "type": "string",
          "description": "Location ID. You can specify this optional filter \nto retrieve only the linked bank accounts belonging to a specific location."
        }
      },
      "description": "Request object for fetching all `BankAccount`\nobjects linked to a account.",
      "x-release-status": "PUBLIC"
    },
    "ListBankAccountsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "bank_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "description": "List of BankAccounts associated with this account."
        },
        "cursor": {
          "type": "string",
          "description": "When a response is truncated, it includes a cursor that you can \nuse in a subsequent request to fetch next set of bank accounts.\nIf empty, this is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        }
      },
      "description": "Response object returned by ListBankAccounts.",
      "x-release-status": "PUBLIC",
      "example": {
        "bank_accounts": [
          {
            "id": "ao6iaQ9vhDiaQD7n3GB",
            "account_number_suffix": "971",
            "country": "US",
            "currency": "USD",
            "account_type": "CHECKING",
            "holder_name": "Jane Doe",
            "primary_bank_identification_number": "112200303",
            "location_id": "S8GWD5example",
            "status": "VERIFICATION_IN_PROGRESS",
            "creditable": false,
            "debitable": false,
            "version": 5,
            "bank_name": "Bank Name"
          },
          {
            "id": "4x7WXuaxrkQkVlka3GB",
            "account_number_suffix": "972",
            "country": "US",
            "currency": "USD",
            "account_type": "CHECKING",
            "holder_name": "Jane Doe",
            "primary_bank_identification_number": "112200303",
            "location_id": "S8GWD5example",
            "status": "VERIFICATION_IN_PROGRESS",
            "creditable": false,
            "debitable": false,
            "version": 5,
            "bank_name": "Bank Name"
          }
        ]
      }
    },
    "ListBreakTypesRequest": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "Filter Break Types returned to only those that are associated with the\nspecified location."
        },
        "limit": {
          "maximum": 200,
          "minimum": 1,
          "type": "integer",
          "description": "Maximum number of Break Types to return per page. Can range between 1\nand 200. The default is the maximum at 200."
        },
        "cursor": {
          "type": "string",
          "description": "Pointer to the next page of Break Type results to fetch."
        }
      },
      "description": "A request for a filtered set of `BreakType` objects",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?location_id\u003dPAA1RJZZKXBFG\u0026limit\u003d2\u0026cursor\u003ds4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
      }
    },
    "ListBreakTypesResponse": {
      "type": "object",
      "properties": {
        "break_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BreakType"
          },
          "description": " A page of `BreakType` results."
        },
        "cursor": {
          "type": "string",
          "description": "Value supplied in the subsequent request to fetch the next next page\nof Break Type results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request for a set of `BreakTypes`. Contains\nthe requested `BreakType` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "break_types": [
          {
            "id": "REGS1EQR1TPZ5",
            "location_id": "PAA1RJZZKXBFG",
            "break_name": "Coffee Break",
            "expected_duration": "PT5M",
            "is_paid": false,
            "version": 1,
            "created_at": "2019-01-22T20:47:37Z",
            "updated_at": "2019-01-22T20:47:37Z"
          },
          {
            "id": "92EPDRQKJ5088",
            "location_id": "PAA1RJZZKXBFG",
            "break_name": "Lunch Break",
            "expected_duration": "PT1H",
            "is_paid": true,
            "version": 3,
            "created_at": "2019-01-25T19:26:30Z",
            "updated_at": "2019-01-25T19:26:30Z"
          }
        ],
        "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
      }
    },
    "ListCashDrawerShiftEventsRequest": {
      "type": "object",
      "required": [
        "location_id"
      ],
      "properties": {
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the location to list cash drawer shifts for."
        },
        "limit": {
          "maximum": 1000,
          "type": "integer",
          "description": "Number of resources to be returned in a page of results (200 by\ndefault, 1000 max)."
        },
        "cursor": {
          "type": "string",
          "description": "Opaque cursor for fetching the next page of results."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "ListCashDrawerShiftEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashDrawerShiftEvent"
          },
          "description": "All of the events (payments, refunds, etc.) for a cash drawer during\nthe shift."
        },
        "cursor": {
          "type": "string",
          "description": "Opaque cursor for fetching the next page. Cursor is not present in\nthe last page of results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "ListCashDrawerShiftsRequest": {
      "type": "object",
      "required": [
        "location_id"
      ],
      "properties": {
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the location to query for a list of cash drawer shifts."
        },
        "sort_order": {
          "type": "string",
          "description": "The order in which cash drawer shifts are listed in the response,\nbased on their opened_at field. Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_time": {
          "type": "string",
          "description": "The inclusive start time of the query on opened_at, in ISO 8601 format."
        },
        "end_time": {
          "type": "string",
          "description": "The exclusive end date of the query on opened_at, in ISO 8601 format."
        },
        "limit": {
          "maximum": 1000,
          "type": "integer",
          "description": "Number of cash drawer shift events in a page of results (200 by\ndefault, 1000 max)."
        },
        "cursor": {
          "type": "string",
          "description": "Opaque cursor for fetching the next page of results."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "ListCashDrawerShiftsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashDrawerShiftSummary"
          },
          "description": "A collection of CashDrawerShiftSummary objects for shifts that match\nthe query."
        },
        "cursor": {
          "type": "string",
          "description": "Opaque cursor for fetching the next page of results. Cursor is not\npresent in the last page of results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "ListCatalogRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        "types": {
          "type": "string",
          "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.\n\nThe legal values are taken from the CatalogObjectType enum:\n`ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`,\n`MODIFIER`, `MODIFIER_LIST`, or `IMAGE`."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?types\u003dcategory,tax"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.python",
        "csharp": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.csharp",
        "java": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.java",
        "php": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.php",
        "javascript": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.javascript",
        "ruby": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.ruby"
      }
    },
    "ListCatalogResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on any errors encountered."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The CatalogObjects returned."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "objects": [
          {
            "type": "CATEGORY",
            "id": "5ZYQZZ2IECPVJ2IJ5KQPRDC3",
            "updated_at": "2017-02-21T14:50:26.495Z",
            "version": 1487688626495,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "L5R47DGBZOOVKCAFIXC56AEN",
            "updated_at": "2017-02-21T14:50:26.495Z",
            "version": 1487688626495,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "enabled": true
            }
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.python",
        "csharp": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.csharp",
        "java": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.java",
        "php": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.php",
        "javascript": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.javascript",
        "ruby": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.ruby"
      }
    },
    "ListCustomerGroupsRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
        }
      },
      "description": "Defines the query parameters that can be provided in a request to the\n[ListCustomerGroups](#endpoint-listcustomergroups) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "ListCustomerGroupsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerGroup"
          },
          "description": "A list of customer groups belonging to the current merchant."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint. This value is present only if the request\nsucceeded and additional results are available.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListCustomerGroups](#endpoint-listcustomergroups) endpoint.\n\nOne of `errors` or `groups` is present in a given response (never both).",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "groups": [
          {
            "id": "2TAT3CMH4Q0A9M87XJZED0WMR3",
            "name": "Loyal Customers",
            "created_at": "2020-04-13T21:54:57.863Z",
            "updated_at": "2020-04-13T21:54:58Z"
          },
          {
            "id": "4XMEHESXJBNE9S9JAKZD2FGB14",
            "name": "Super Loyal Customers",
            "created_at": "2020-04-13T21:55:18.795Z",
            "updated_at": "2020-04-13T21:55:19Z"
          }
        ]
      }
    },
    "ListCustomerSegmentsRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by previous calls to __ListCustomerSegments__.\nUsed to retrieve the next set of query results.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/docs/working-with-apis/pagination) for more information."
        }
      },
      "description": "Defines the valid parameters for requests to __ListCustomerSegments__.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "ListCustomerSegmentsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerSegment"
          },
          "description": "The list of customer segments belonging to the associated Square account."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor to be used in subsequent calls to __ListCustomerSegments__\nto retrieve the next set of query results. Only present only if the request succeeded and\nadditional results are available.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/docs/working-with-apis/pagination) for more information."
        }
      },
      "description": "Defines the fields included in the response body for requests to __ListCustomerSegments__.\n\nOne of `errors` or `segments` is present in a given response (never both).",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "segments": [
          {
            "id": "GMNXRZVEXNQDF.CHURN_RISK",
            "name": "Lapsed",
            "created_at": "2020-01-09T19:33:24.469Z",
            "updated_at": "2020-04-13T21:47:04Z"
          },
          {
            "id": "GMNXRZVEXNQDF.LOYAL",
            "name": "Regulars",
            "created_at": "2020-01-09T19:33:24.486Z",
            "updated_at": "2020-04-13T21:47:04Z"
          },
          {
            "id": "GMNXRZVEXNQDF.REACHABLE",
            "name": "Reachable",
            "created_at": "2020-01-09T19:33:21.813Z",
            "updated_at": "2020-04-13T21:47:04Z"
          },
          {
            "id": "gv2:KF92J19VXN5FK30GX2E8HSGQ20",
            "name": "Instant Profile",
            "created_at": "2020-01-09T19:33:25Z",
            "updated_at": "2020-04-13T23:01:03Z"
          }
        ]
      }
    },
    "ListCustomersRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
        },
        "sort_field": {
          "type": "string",
          "description": "Indicates how Customers should be sorted.\n\nDefault: `DEFAULT`.\nSee [CustomerSortField](#type-customersortfield) for possible values"
        },
        "sort_order": {
          "type": "string",
          "description": "Indicates whether Customers should be sorted in ascending (`ASC`) or\ndescending (`DESC`) order.\n\nDefault: `ASC`.\nSee [SortOrder](#type-sortorder) for possible values"
        }
      },
      "description": "Defines the query parameters that can be provided in a request to the\nListCustomers endpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListCustomers/ListCustomersRequest.python",
        "csharp": "/sdk_samples/ListCustomers/ListCustomersRequest.csharp",
        "java": "/sdk_samples/ListCustomers/ListCustomersRequest.java",
        "php": "/sdk_samples/ListCustomers/ListCustomersRequest.php",
        "javascript": "/sdk_samples/ListCustomers/ListCustomersRequest.javascript",
        "ruby": "/sdk_samples/ListCustomers/ListCustomersRequest.ruby"
      }
    },
    "ListCustomersResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          },
          "description": "An array of `Customer` objects that match the provided query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for the\noriginal query. Only present if the request succeeded and additional results\nare available.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the ListCustomers endpoint.\n\nOne of `errors` or `customers` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customers": [
          {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2016-03-23T20:21:54.859Z",
            "updated_at": "2016-03-23T20:21:55Z",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4240",
            "reference_id": "YOUR_REFERENCE_ID",
            "note": "a customer",
            "groups": [
              {
                "id": "545AXB44B4XXWMVQ4W8SBT3HHF",
                "name": "Aviation Enthusiasts"
              },
              {
                "id": "1KB9JE5EGJXCW.REACHABLE",
                "name": "Reachable"
              }
            ],
            "group_ids": [
              "545AXB44B4XXWMVQ4W8SBT3HHF"
            ],
            "segment_ids": [
              "1KB9JE5EGJXCW.REACHABLE"
            ]
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListCustomers/ListCustomersResponse.python",
        "csharp": "/sdk_samples/ListCustomers/ListCustomersResponse.csharp",
        "java": "/sdk_samples/ListCustomers/ListCustomersResponse.java",
        "php": "/sdk_samples/ListCustomers/ListCustomersResponse.php",
        "javascript": "/sdk_samples/ListCustomers/ListCustomersResponse.javascript",
        "ruby": "/sdk_samples/ListCustomers/ListCustomersResponse.ruby"
      }
    },
    "ListDeviceCodesRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
        },
        "location_id": {
          "type": "string",
          "description": "If specified, only returns DeviceCodes of the specified location.\nReturns DeviceCodes of all locations if empty."
        },
        "product_type": {
          "type": "string",
          "description": "If specified, only returns DeviceCodes targeting the specified product type.\nReturns DeviceCodes of all product types if empty.\nSee [ProductType](#type-producttype) for possible values"
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "ListDeviceCodesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "device_codes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCode"
          },
          "description": "The queried DeviceCode."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint. This value is present only if the request\nsucceeded and additional results are available.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "device_codes": [
          {
            "id": "B3Z6NAMYQSMTM",
            "name": "Counter 1",
            "code": "EBCARJ",
            "product_type": "TERMINAL_API",
            "location_id": "B5E4484SHHNYH",
            "created_at": "2020-02-06T18:44:33.000Z",
            "pair_by": "2020-02-06T18:49:33.000Z",
            "status": "PAIRED",
            "device_id": "907CS13101300122",
            "status_changed_at": "2020-02-06T18:47:28.000Z"
          },
          {
            "id": "YKGMJMYK8H4PQ",
            "name": "Unused device code",
            "code": "GVXNYN",
            "product_type": "TERMINAL_API",
            "location_id": "A6SYFRSV4WAFW",
            "pair_by": "2020-02-07T20:00:04.000Z",
            "created_at": "2020-02-07T19:55:04.000Z",
            "status": "UNPAIRED",
            "status_changed_at": "2020-02-07T19:55:04.000Z"
          }
        ]
      }
    },
    "ListDisputeEvidenceRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines parameters for a ListDisputeEvidence request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "ListDisputeEvidenceResponse": {
      "type": "object",
      "properties": {
        "evidence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisputeEvidence"
          },
          "description": "The list of evidence previously uploaded to the specified dispute."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        }
      },
      "description": "Defines fields in a ListDisputeEvidence response.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "ListDisputesRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\nFor more information, see [Paginating](https://developer.squareup.com/docs/basics/api101/pagination)."
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The dispute states to filter the result.\nIf not specified, the endpoint\nreturns all open disputes (dispute status is not\n`INQUIRY_CLOSED`, `WON`, or `LOST`).\nSee [DisputeState](#type-disputestate) for possible values"
        },
        "location_id": {
          "minLength": 1,
          "maxLength": 40,
          "type": "string",
          "description": "The ID of the location for which to return \na list of disputes. If not specified,\nthe endpoint returns all open disputes\n(dispute status is not `INQUIRY_CLOSED`, `WON`, or \n`LOST`) associated with all locations."
        }
      },
      "description": "Defines request parameters for the ListDisputes endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "ListDisputesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "disputes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dispute"
          },
          "description": "The list of Disputes."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request.\nIf unset, this is the final response.\nFor more information, see [Paginating](https://developer.squareup.com/docs/basics/api101/pagination)."
        }
      },
      "description": "Defines fields in a ListDisputes response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "disputes": [
          {
            "dispute_id": "OnY1AZwhSi775rbNIK4gv",
            "amount_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "reason": "NO_KNOWLEDGE",
            "state": "EVIDENCE_REQUIRED",
            "due_at": "2018-10-11T00:00:00.000Z",
            "disputed_payments": [
              {
                "payment_id": "APgIq6RX2jM6DKDhMHiC6QEkuaB"
              }
            ],
            "card_brand": "visa",
            "created_at": "2018-10-12T02:20:25.577Z",
            "updated_at": "2018-10-12T02:20:25.577Z",
            "brand_dispute_id": "100000809947"
          }
        ],
        "cursor": "G1aSTRm48CLjJsg6Sg3hQN1b1OMaoVuG"
      }
    },
    "ListEmployeeWagesRequest": {
      "type": "object",
      "properties": {
        "employee_id": {
          "type": "string",
          "description": "Filter wages returned to only those that are associated with the\nspecified employee."
        },
        "limit": {
          "maximum": 200,
          "minimum": 1,
          "type": "integer",
          "description": "Maximum number of Employee Wages to return per page. Can range between\n1 and 200. The default is the maximum at 200."
        },
        "cursor": {
          "type": "string",
          "description": "Pointer to the next page of Employee Wage results to fetch."
        }
      },
      "description": "A request for a set of `EmployeeWage` objects",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?employee_id\u003d33fJchumvVdJwxV0H6L9\u0026limit\u003d4\u0026cursor\u003ds4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
      }
    },
    "ListEmployeeWagesResponse": {
      "type": "object",
      "properties": {
        "employee_wages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeWage"
          },
          "description": "A page of Employee Wage results."
        },
        "cursor": {
          "type": "string",
          "description": "Value supplied in the subsequent request to fetch the next next page\nof Employee Wage results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request for a set of `EmployeeWage` objects. Contains \na set of `EmployeeWage`.",
      "x-release-status": "PUBLIC",
      "example": {
        "employee_wages": [
          {
            "id": "pXS3qCv7BERPnEGedM4S8mhm",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "title": "Manager",
            "hourly_rate": {
              "amount": 3250,
              "currency": "USD"
            }
          },
          {
            "id": "rZduCkzYDUVL3ovh1sQgbue6",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "title": "Cook",
            "hourly_rate": {
              "amount": 2600,
              "currency": "USD"
            }
          },
          {
            "id": "FxLbs5KpPUHa8wyt5ctjubDX",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "title": "Barista",
            "hourly_rate": {
              "amount": 1600,
              "currency": "USD"
            }
          },
          {
            "id": "vD1wCgijMDR3cX5TPnu7VXto",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "title": "Cashier",
            "hourly_rate": {
              "amount": 1700,
              "currency": "USD"
            }
          }
        ],
        "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
      }
    },
    "ListEmployeesRequest": {
      "type": "object",
      "properties": {
        "location_id": {
          "type": "string",
          "description": "Filter employees returned to only those that are associated with the specified location."
        },
        "status": {
          "type": "string",
          "description": "Specifies the EmployeeStatus to filter the employee by.\nSee [EmployeeStatus](#type-employeestatus) for possible values"
        },
        "limit": {
          "type": "integer",
          "description": "The number of employees to be returned on each page."
        },
        "cursor": {
          "type": "string",
          "description": "The token required to retrieve the specified page of results."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "ListEmployeesResponse": {
      "type": "object",
      "properties": {
        "employees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employee"
          },
          "description": "List of employees returned from the request."
        },
        "cursor": {
          "type": "string",
          "description": "The token to be used to retrieve the next page of results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "ListInvoicesRequest": {
      "type": "object",
      "required": [
        "location_id"
      ],
      "properties": {
        "location_id": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "The ID of the location for which to list invoices."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint. \nProvide this cursor to retrieve the next set of results for your original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of invoices to return (200 is the maximum `limit`). \nIf not provided, the server \nuses a default limit of 100 invoices."
        }
      },
      "description": "Describes a `ListInvoice` request.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "ListInvoicesResponse": {
      "type": "object",
      "properties": {
        "invoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Invoice"
          },
          "description": "The invoices retrieved."
        },
        "cursor": {
          "type": "string",
          "description": "When a response is truncated, it includes a cursor that you can use in a \nsubsequent request to fetch the next set of invoices. If empty, this is the final \nresponse. \nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        }
      },
      "description": "Describes a `ListInvoice` response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "invoices": [
          {
            "invoice": {
              "id": "gt2zv1z6mnUm1V7KMxxf3w",
              "version": 0,
              "location_id": "ES0RJRZYEC39A",
              "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
              "payment_requests": [
                {
                  "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                  "request_method": "EMAIL",
                  "request_type": "BALANCE",
                  "due_date": "2030-01-24",
                  "tipping_enabled": true,
                  "reminders": [
                    {
                      "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                      "relative_scheduled_days": -1,
                      "message": "Your invoice is due tomorrow",
                      "status": "PENDING"
                    }
                  ],
                  "computed_amount_money": {
                    "amount": 10000,
                    "currency": "USD"
                  },
                  "total_completed_amount_money": {
                    "amount": 0,
                    "currency": "USD"
                  }
                }
              ],
              "invoice_number": "inv-100",
              "title": "Event Planning Services",
              "description": "We appreciate your business!",
              "scheduled_at": "2030-01-13T10:00:00Z",
              "status": "DRAFT",
              "timezone": "America/Los_Angeles",
              "created_at": "2020-06-18T17:45:13Z",
              "updated_at": "2020-06-18T17:45:13Z",
              "primary_recipient": {
                "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
                "given_name": "Amelia",
                "family_name": "Earhart",
                "email_address": "Amelia.Earhart@example.com",
                "phone_number": "1-212-555-4240"
              }
            }
          }
        ],
        "cursor": "CURSOR"
      }
    },
    "ListLocationsRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the fields that are included in requests to\nthe __ListLocations__ endpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListLocations/ListLocationsRequest.python",
        "csharp": "/sdk_samples/ListLocations/ListLocationsRequest.csharp",
        "java": "/sdk_samples/ListLocations/ListLocationsRequest.java",
        "php": "/sdk_samples/ListLocations/ListLocationsRequest.php",
        "javascript": "/sdk_samples/ListLocations/ListLocationsRequest.javascript",
        "ruby": "/sdk_samples/ListLocations/ListLocationsRequest.ruby"
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          },
          "description": "The business locations."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the __ListLocations__ endpoint.\n\nOne of `errors` or `locations` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "locations": [
          {
            "id": "18YC4JDH91E1H",
            "name": "your location name",
            "address": {
              "address_line_1": "123 Main St",
              "locality": "San Francisco",
              "administrative_district_level_1": "CA",
              "postal_code": "94114",
              "country": "US"
            },
            "timezone": "America/Los_Angeles",
            "capabilities": [
              "CREDIT_CARD_PROCESSING"
            ],
            "status": "ACTIVE",
            "created_at": "2016-09-19T17:33:12Z",
            "merchant_id": "3MYCJG5GVYQ8Q",
            "country": "US",
            "language_code": "en-US",
            "currency": "USD",
            "phone_number": "+1 650-354-7217",
            "business_name": "Pumbaa\u0027s business name"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListLocations/ListLocationsResponse.python",
        "csharp": "/sdk_samples/ListLocations/ListLocationsResponse.csharp",
        "java": "/sdk_samples/ListLocations/ListLocationsResponse.java",
        "php": "/sdk_samples/ListLocations/ListLocationsResponse.php",
        "javascript": "/sdk_samples/ListLocations/ListLocationsResponse.javascript",
        "ruby": "/sdk_samples/ListLocations/ListLocationsResponse.ruby"
      }
    },
    "ListLoyaltyProgramsRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to list `LoyaltyProgram`.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "ListLoyaltyProgramsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "programs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyProgram"
          },
          "description": "A list of `LoyaltyProgram` for the merchant."
        }
      },
      "description": "A response that contains all loyalty programs.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "programs": [
          {
            "id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
            "status": "ACTIVE",
            "reward_tiers": [
              {
                "id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
                "points": 10,
                "name": "10% off entire sale",
                "definition": {
                  "scope": "ORDER",
                  "discount_type": "FIXED_PERCENTAGE",
                  "percentage_discount": "10"
                },
                "created_at": "2020-04-20T16:55:11Z"
              }
            ],
            "terminology": {
              "one": "Point",
              "other": "Points"
            },
            "location_ids": [
              "P034NEENMD09F"
            ],
            "created_at": "2020-04-20T16:55:11Z",
            "updated_at": "2020-05-01T02:00:02Z",
            "accrual_rules": [
              {
                "accrual_type": "SPEND",
                "points": 1,
                "spend_amount_money": {
                  "amount": 100
                }
              }
            ]
          }
        ]
      }
    },
    "ListMerchantsRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "integer",
          "description": "The cursor generated by the previous response."
        }
      },
      "description": "Request object for the [ListMerchant](#endpoint-listmerchant) endpoint.",
      "x-release-status": "PUBLIC"
    },
    "ListMerchantsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "merchant": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Merchant"
          },
          "description": "The requested `Merchant` entities."
        },
        "cursor": {
          "type": "integer",
          "description": "If the  response is truncated, the cursor to use in next  request to fetch next set of objects."
        }
      },
      "description": "The response object returned by the [ListMerchant](#endpoint-listmerchant) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "merchant": [
          {
            "id": "DM7VKY8Q63GNP",
            "business_name": "Apple A Day",
            "country": "US",
            "language_code": "en-US",
            "currency": "USD",
            "status": "ACTIVE",
            "main_location_id": "9A65CGC72ZQG1"
          }
        ]
      }
    },
    "ListPaymentRefundsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "Timestamp for the beginning of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "Timestamp for the end of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time."
        },
        "sort_order": {
          "type": "string",
          "description": "The order in which results are listed.\n- `ASC` - oldest to newest\n- `DESC` - newest to oldest (default)."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        "location_id": {
          "type": "string",
          "description": "Limit results to the location supplied. By default, results are returned\nfor all locations associated with the merchant."
        },
        "status": {
          "type": "string",
          "description": "If provided, only refunds with the given status are returned.\nFor a list of refund status values, see `PaymentRefund`.\n\nDefault: If omitted refunds are returned regardless of status."
        },
        "source_type": {
          "type": "string",
          "description": "If provided, only refunds with the given source type are returned.\n- `CARD` - List refunds only for payments where card was specified as payment\nsource.\n\nDefault: If omitted refunds are returned regardless of source type."
        }
      },
      "description": "Retrieves a list of refunds for the account making the request.\n\nMax results per page: 100",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {}
      }
    },
    "ListPaymentRefundsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentRefund"
          },
          "description": "The list of requested refunds."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If empty,\nthis is the final response.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListPaymentRefunds](#endpoint-refunds-listpaymentrefunds) endpoint.\n\nOne of `errors` or `refunds` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "refunds": [
          {
            "id": "O2QAAhTYs7rUfzlxT38GMO7LvaB_q7JwCHtxmgXrh8fAhV468WQ44VxDtL7CU4yVRlsbXmI",
            "created_at": "2019-07-06T18:01:22.335Z",
            "updated_at": "2019-07-06T18:06:04.653Z",
            "status": "COMPLETED",
            "amount_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "payment_id": "O2QAAhTYs7rUfzlxT38GMO7LvaB",
            "order_id": "2duiyoqbfeXY0DBi15GEyk5Epa4F",
            "location_id": "XK3DBG77NJBFX",
            "processing_fee": [
              {
                "effective_at": "2019-07-06T20:01:12.000Z",
                "type": "INITIAL",
                "amount_money": {
                  "amount": -59,
                  "currency": "USD"
                }
              }
            ]
          },
          {
            "id": "8TDIQvFw8PeDIxhSfd5yyX7GuaB_13px5Vrz01qzzuoGzmjsZIxDjfHhbkm2XppBUX1dW7I",
            "created_at": "2019-07-06T17:01:54.232Z",
            "updated_at": "2019-07-06T17:21:04.684Z",
            "status": "COMPLETED",
            "amount_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "payment_id": "8TDIQvFw8PeDIxhSfd5yyX7GuaB",
            "order_id": "w6EXfEwS03oTQsnZTCqfE6f67e4F",
            "processing_fee": [
              {
                "effective_at": "2019-07-06T19:01:45.000Z",
                "type": "INITIAL",
                "amount_money": {
                  "amount": -59,
                  "currency": "USD"
                }
              }
            ],
            "location_id": "XK3DBG77NJBFX"
          }
        ],
        "cursor": "5evquW1YswHoT4EoyUhzMmTsCnsSXBU9U0WJ4FU4623nrMQcocH0RGU6Up1YkwfiMcF59ood58EBTEGgzMTGHQJpocic7ExOL0NtrTXCeWcv0UJIJNk8eXb"
      }
    },
    "ListPaymentsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "Timestamp for the beginning of the reporting period, in RFC 3339 format.\nInclusive. Default: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "Timestamp for the end of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time."
        },
        "sort_order": {
          "type": "string",
          "description": "The order in which results are listed.\n- `ASC` - oldest to newest\n- `DESC` - newest to oldest (default)."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        "location_id": {
          "type": "string",
          "description": "Limit results to the location supplied. By default, results are returned\nfor all locations associated with the merchant."
        },
        "total": {
          "minimum": 0,
          "type": "integer",
          "format": "int64",
          "description": "The exact amount in the total_money for a `Payment`."
        },
        "last_4": {
          "type": "string",
          "description": "The last 4 digits of `Payment` card."
        },
        "card_brand": {
          "type": "string",
          "description": "The brand of `Payment` card. For example, `VISA`"
        }
      },
      "description": "Retrieves a list of payments taken by the account making the request.\n\nMax results per page: 100",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {}
      }
    },
    "ListPaymentsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "description": "The requested list of `Payment`s."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If empty,\nthis is the final response.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListPayments](#endpoint-payments-listpayments) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "payments": [
          {
            "id": "ifrBnAil7rRfDtd27cdf9g9WO8paB",
            "created_at": "2019-07-09T14:36:13.745Z",
            "updated_at": "2019-07-09T14:36:13.883Z",
            "amount_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "total_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "status": "APPROVED",
            "source_type": "CARD",
            "card_details": {
              "status": "AUTHORIZED",
              "card": {
                "card_brand": "VISA",
                "last_4": "1111",
                "exp_month": 2,
                "exp_year": 2022,
                "fingerprint": "sq-1-lHpUJIUyqOPQmH89b6GuQEljmc-mZmu4kSTaMlkLDkJI7NVjAl4Zirn2sk3OeyVKVA"
              },
              "entry_method": "KEYED",
              "cvv_status": "CVV_ACCEPTED",
              "avs_status": "AVS_ACCEPTED",
              "auth_result_code": "NQbV3A"
            },
            "location_id": "QLIJX16Q3UZ0A",
            "order_id": "MvfIilKnIYKBium4rauH67wFzRxv"
          },
          {
            "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
            "created_at": "2019-07-08T01:00:51.607Z",
            "updated_at": "2019-07-08T01:13:58.508Z",
            "amount_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "total_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "status": "COMPLETED",
            "source_type": "CARD",
            "card_details": {
              "status": "CAPTURED",
              "card": {
                "card_brand": "VISA",
                "last_4": "2796",
                "exp_month": 7,
                "exp_year": 2026,
                "fingerprint": "sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw"
              },
              "entry_method": "ON_FILE",
              "cvv_status": "CVV_ACCEPTED",
              "avs_status": "AVS_ACCEPTED",
              "auth_result_code": "vPIr0K"
            },
            "location_id": "XTI0H92143A39",
            "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
            "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I",
            "processing_fee": [
              {
                "effective_at": "2019-07-08T03:00:53.000Z",
                "type": "INITIAL",
                "amount_money": {
                  "amount": 59,
                  "currency": "USD"
                }
              }
            ]
          }
        ],
        "cursor": "2TTnuq0yRYDdBRSFF2XuFkgO1Bclt4ZHNI7YrFNeyZ6rL1WZXkdnLn10H8fBIwFKdKW1Af6ifRa"
      }
    },
    "ListRefundsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.\n\nDeprecated - recommend using [SearchOrders](#endpoint-orders-searchorders)",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "request_params": "?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListRefunds/ListRefundsRequest.python",
        "csharp": "/sdk_samples/ListRefunds/ListRefundsRequest.csharp",
        "java": "/sdk_samples/ListRefunds/ListRefundsRequest.java",
        "php": "/sdk_samples/ListRefunds/ListRefundsRequest.php",
        "javascript": "/sdk_samples/ListRefunds/ListRefundsRequest.javascript",
        "ruby": "/sdk_samples/ListRefunds/ListRefundsRequest.ruby"
      }
    },
    "ListRefundsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "description": "An array of refunds that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.\n\nOne of `errors` or `refunds` is present in a given response (never both).",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "refunds": [
          {
            "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
            "location_id": "18YC4JDH91E1H",
            "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
            "created_at": "2016-01-20T00:28:18Z",
            "reason": "some reason",
            "amount_money": {
              "amount": 100,
              "currency": "USD"
            },
            "additional_recipients": [
              {
                "location_id": "057P5VYJ4A5X1",
                "description": "Application fees",
                "amount_money": {
                  "amount": 10,
                  "currency": "USD"
                }
              }
            ],
            "status": "APPROVED"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListRefunds/ListRefundsResponse.python",
        "csharp": "/sdk_samples/ListRefunds/ListRefundsResponse.csharp",
        "java": "/sdk_samples/ListRefunds/ListRefundsResponse.java",
        "php": "/sdk_samples/ListRefunds/ListRefundsResponse.php",
        "javascript": "/sdk_samples/ListRefunds/ListRefundsResponse.javascript",
        "ruby": "/sdk_samples/ListRefunds/ListRefundsResponse.ruby"
      }
    },
    "ListSubscriptionEventsRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        },
        "limit": {
          "minimum": 1,
          "type": "integer",
          "description": "The upper limit on the number of subscription events to return \nin the response. \n\nDefault: `200`"
        }
      },
      "description": "Defines parameters in a \n[ListSubscriptionEvents](#endpoint-subscriptions-listsubscriptionevents)\nendpoint request.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "ListSubscriptionEventsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        },
        "subscription_events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionEvent"
          },
          "description": "The `SubscriptionEvents` retrieved."
        },
        "cursor": {
          "type": "string",
          "description": "When a response is truncated, it includes a cursor that you can \nuse in a subsequent request to fetch the next set of events. \nIf empty, this is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        }
      },
      "description": "Defines the fields that are included in the response from the\n[ListSubscriptionEvents](#endpoint-subscriptions-listsubscriptionevents)\nendpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "subscription_events": [
          {
            "id": "06809161-3867-4598-8269-8aea5be4f9de",
            "subscription_event_type": "START_SUBSCRIPTION",
            "effective_date": "2020-04-24",
            "plan_id": "6JHXF3B2CW3YKHDV4XEM674H"
          },
          {
            "id": "a0c08083-5db0-4800-85c7-d398de4fbb6e",
            "subscription_event_type": "STOP_SUBSCRIPTION",
            "effective_date": "2020-05-06",
            "plan_id": "6JHXF3B2CW3YKHDV4XEM674H"
          }
        ]
      }
    },
    "ListTransactionsRequest": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
        },
        "sort_order": {
          "type": "string",
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the query parameters that can be included in\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.\n\nDeprecated - recommend using [SearchOrders](#endpoint-orders-searchorders)",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "request_params": "?begin_time\u003d2016-01-15T00:00:00Z\u0026end_time\u003d2016-01-31T00:00:00Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListTransactions/ListTransactionsRequest.python",
        "csharp": "/sdk_samples/ListTransactions/ListTransactionsRequest.csharp",
        "java": "/sdk_samples/ListTransactions/ListTransactionsRequest.java",
        "php": "/sdk_samples/ListTransactions/ListTransactionsRequest.php",
        "javascript": "/sdk_samples/ListTransactions/ListTransactionsRequest.javascript",
        "ruby": "/sdk_samples/ListTransactions/ListTransactionsRequest.ruby"
      }
    },
    "ListTransactionsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "description": "An array of transactions that match your query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.\n\nOne of `errors` or `transactions` is present in a given response (never both).",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "transactions": [
          {
            "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "location_id": "18YC4JDH91E1H",
            "created_at": "2016-01-20T22:57:56Z",
            "tenders": [
              {
                "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "location_id": "18YC4JDH91E1H",
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                "created_at": "2016-01-20T22:57:56Z",
                "note": "some optional note",
                "amount_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "processing_fee_money": {
                  "amount": 138,
                  "currency": "USD"
                },
                "type": "CARD",
                "card_details": {
                  "status": "CAPTURED",
                  "card": {
                    "card_brand": "VISA",
                    "last_4": "1111"
                  },
                  "entry_method": "KEYED"
                },
                "additional_recipients": [
                  {
                    "location_id": "057P5VYJ4A5X1",
                    "description": "Application fees",
                    "amount_money": {
                      "amount": 20,
                      "currency": "USD"
                    }
                  }
                ]
              }
            ],
            "refunds": [
              {
                "id": "7a5RcVI0CxbOcJ2wMOkE",
                "location_id": "18YC4JDH91E1H",
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "created_at": "2016-01-20T22:59:20Z",
                "reason": "some reason why",
                "amount_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "status": "APPROVED",
                "processing_fee_money": {
                  "amount": 138,
                  "currency": "USD"
                },
                "additional_recipients": [
                  {
                    "location_id": "057P5VYJ4A5X1",
                    "description": "Application fees",
                    "amount_money": {
                      "amount": 100,
                      "currency": "USD"
                    }
                  }
                ]
              }
            ],
            "reference_id": "some optional reference id",
            "product": "EXTERNAL_API"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ListTransactions/ListTransactionsResponse.python",
        "csharp": "/sdk_samples/ListTransactions/ListTransactionsResponse.csharp",
        "java": "/sdk_samples/ListTransactions/ListTransactionsResponse.java",
        "php": "/sdk_samples/ListTransactions/ListTransactionsResponse.php",
        "javascript": "/sdk_samples/ListTransactions/ListTransactionsResponse.javascript",
        "ruby": "/sdk_samples/ListTransactions/ListTransactionsResponse.ruby"
      }
    },
    "ListWorkweekConfigsRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "Maximum number of Workweek Configs to return per page."
        },
        "cursor": {
          "type": "string",
          "description": "Pointer to the next page of Workweek Config results to fetch."
        }
      },
      "description": "A request for a set of `WorkweekConfig` objects",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?limit\u003d1\u0026cursor\u003ds4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
      }
    },
    "ListWorkweekConfigsResponse": {
      "type": "object",
      "properties": {
        "workweek_configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkweekConfig"
          },
          "description": "A page of Employee Wage results."
        },
        "cursor": {
          "type": "string",
          "description": "Value supplied in the subsequent request to fetch the next page of\nEmployee Wage results."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request for a set of `WorkweekConfig` objects. Contains\nthe requested `WorkweekConfig` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "workweek_configs": [
          {
            "id": "FY4VCAQN700GM",
            "start_of_week": "MON",
            "start_of_day_local_time": "10:00",
            "version": 11,
            "created_at": "2016-02-04T00:58:24Z",
            "updated_at": "2019-02-28T01:04:35Z"
          }
        ],
        "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Square-issued ID of the location.",
          "x-read-only": true
        },
        "name": {
          "type": "string",
          "description": "The name of the location.\nThis information appears in the dashboard as the nickname."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The physical address of the location."
        },
        "timezone": {
          "type": "string",
          "description": "The [IANA Timezone](https://www.iana.org/time-zones) identifier for\nthe timezone of the location."
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The Square features that are enabled for the location.\nSee `LocationCapability` for possible values.\nSee [LocationCapability](#type-locationcapability) for possible values",
          "x-read-only": true
        },
        "status": {
          "type": "string",
          "description": "The status of the location, either active or inactive.\nSee [LocationStatus](#type-locationstatus) for possible values"
        },
        "created_at": {
          "type": "string",
          "description": "The time when the location was created, in RFC 3339 format.",
          "x-read-only": true
        },
        "merchant_id": {
          "type": "string",
          "description": "The ID of the merchant that owns the location.",
          "x-read-only": true
        },
        "country": {
          "type": "string",
          "description": "The country of the location, in ISO 3166-1-alpha-2 format.\n\nSee `Country` for possible values.\nSee [Country](#type-country) for possible values",
          "x-read-only": true
        },
        "language_code": {
          "type": "string",
          "description": "The language associated with the location, in\n[BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A)."
        },
        "currency": {
          "type": "string",
          "description": "The currency used for all transactions at this location,\nin ISO 4217 format.\nSee `Currency` for possible values.\nSee [Currency](#type-currency) for possible values",
          "x-read-only": true
        },
        "phone_number": {
          "type": "string",
          "description": "The phone number of the location in human readable format."
        },
        "business_name": {
          "type": "string",
          "description": "The business name of the location\nThis is the name visible to the customers of the location.\nFor example, this name appears on customer receipts."
        },
        "type": {
          "type": "string",
          "description": "The type of the location, either physical or mobile.\nSee [LocationType](#type-locationtype) for possible values"
        },
        "website_url": {
          "type": "string",
          "description": "The website URL of the location."
        },
        "business_hours": {
          "$ref": "#/definitions/BusinessHours",
          "description": "\nRepresents the hours of operation for the location."
        },
        "business_email": {
          "type": "string",
          "description": "The email of the location.\nThis email is visible to the customers of the location.\nFor example, the email appears on customer receipts."
        },
        "description": {
          "type": "string",
          "description": "The description of the location."
        },
        "twitter_username": {
          "type": "string",
          "description": "The Twitter username of the location without the \u0027\u0026#64;\u0027 symbol."
        },
        "instagram_username": {
          "type": "string",
          "description": "The Instagram username of the location without the \u0027\u0026#64;\u0027 symbol."
        },
        "facebook_url": {
          "type": "string",
          "description": "The Facebook profile URL of the location. The URL should begin with \u0027facebook.com/\u0027."
        },
        "coordinates": {
          "$ref": "#/definitions/Coordinates",
          "description": "The physical coordinates (latitude and longitude) of the location."
        },
        "logo_url": {
          "type": "string",
          "description": "The URL of the logo image for the location.",
          "x-read-only": true
        },
        "pos_background_url": {
          "type": "string",
          "description": "The URL of the Point of Sale background image for the location.",
          "x-read-only": true
        },
        "mcc": {
          "type": "string",
          "description": "The merchant category code (MCC) of the location, as standardized by ISO 18245.\nThe MCC describes the kind of goods or services sold at the location.",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "LoyaltyAccount": {
      "type": "object",
      "required": [
        "mappings",
        "program_id"
      ],
      "properties": {
        "id": {
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the loyalty account.",
          "x-read-only": true
        },
        "mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyAccountMapping"
          },
          "description": "The list of mappings that the account is associated with. \nCurrently, a buyer can only be mapped to a loyalty account using \na phone number. Therefore, the list can only have one mapping."
        },
        "program_id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the `loyalty program` to which the account belongs."
        },
        "balance": {
          "type": "integer",
          "description": "The available point balance in the loyalty account.",
          "x-read-only": true
        },
        "lifetime_points": {
          "minimum": 0,
          "type": "integer",
          "description": "The total points accrued during the lifetime of the account.",
          "x-read-only": true
        },
        "customer_id": {
          "type": "string",
          "description": "The Square-assigned ID of the `customer` that is associated with the account."
        },
        "enrolled_at": {
          "type": "string",
          "description": "The timestamp when enrollment occurred, in RFC 3339 format.",
          "x-read-only": true
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp when the loyalty account was created, in RFC 3339 format.",
          "x-read-only": true
        },
        "updated_at": {
          "type": "string",
          "description": "The timestamp when the loyalty account was last updated, in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "Describes a loyalty account. For more information, see \n[Loyalty Overview](/docs/loyalty/overview).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyAccountMapping": {
      "type": "object",
      "required": [
        "type",
        "value"
      ],
      "properties": {
        "id": {
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the mapping.",
          "x-read-only": true
        },
        "type": {
          "type": "string",
          "description": "The type of mapping.\nSee [LoyaltyAccountMappingType](#type-loyaltyaccountmappingtype) for possible values"
        },
        "value": {
          "minLength": 1,
          "type": "string",
          "description": "The phone number, in E.164 format. For example, \"+14155551111\"."
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp when the mapping was created, in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "Associates a loyalty account with the buyer\u0027s phone number.\nor more information, see \n[Loyalty Overview](/docs/loyalty/overview).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEvent": {
      "type": "object",
      "required": [
        "id",
        "type",
        "created_at",
        "loyalty_account_id",
        "source"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "type": "string",
          "description": "The Square-assigned ID of the loyalty event.",
          "x-read-only": true
        },
        "type": {
          "type": "string",
          "description": "The type of the loyalty event.\nSee [LoyaltyEventType](#type-loyaltyeventtype) for possible values",
          "x-read-only": true
        },
        "created_at": {
          "minLength": 1,
          "type": "string",
          "description": "The timestamp when the event was created, in RFC 3339 format.",
          "x-read-only": true
        },
        "accumulate_points": {
          "$ref": "#/definitions/LoyaltyEventAccumulatePoints",
          "description": "Provides metadata when the event `type` is `ACCUMULATE_POINTS`.",
          "x-read-only": true
        },
        "create_reward": {
          "$ref": "#/definitions/LoyaltyEventCreateReward",
          "description": "Provides metadata when the event `type` is `CREATE_REWARD`.",
          "x-read-only": true
        },
        "redeem_reward": {
          "$ref": "#/definitions/LoyaltyEventRedeemReward",
          "description": "Provides metadata when the event `type` is `REDEEM_REWARD`.",
          "x-read-only": true
        },
        "delete_reward": {
          "$ref": "#/definitions/LoyaltyEventDeleteReward",
          "description": "Provides metadata when the event `type` is `DELETE_REWARD`.",
          "x-read-only": true
        },
        "adjust_points": {
          "$ref": "#/definitions/LoyaltyEventAdjustPoints",
          "description": "Provides metadata when the event `type` is `ADJUST_POINTS`.",
          "x-read-only": true
        },
        "loyalty_account_id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The ID of the `loyalty account` in which the event occurred.",
          "x-read-only": true
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the `location` where the event occurred.",
          "x-read-only": true
        },
        "source": {
          "type": "string",
          "description": "Defines whether the event was generated by the Square Point of Sale.\nSee [LoyaltyEventSource](#type-loyaltyeventsource) for possible values",
          "x-read-only": true
        },
        "expire_points": {
          "$ref": "#/definitions/LoyaltyEventExpirePoints",
          "description": "Provides metadata when the event `type` is `EXPIRE_POINTS`.",
          "x-read-only": true
        },
        "other_event": {
          "$ref": "#/definitions/LoyaltyEventOther",
          "description": "Provides metadata when the event `type` is `OTHER`.",
          "x-read-only": true
        }
      },
      "description": "Provides information about a loyalty event. \nFor more information, see [Loyalty events](/docs/loyalty-api/overview/#loyalty-events).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventAccumulatePoints": {
      "type": "object",
      "properties": {
        "loyalty_program_id": {
          "maxLength": 36,
          "type": "string",
          "description": "The ID of the `loyalty program`.",
          "x-read-only": true
        },
        "points": {
          "minimum": 1,
          "type": "integer",
          "description": "The number of points accumulated by the event."
        },
        "order_id": {
          "type": "string",
          "description": "The ID of the `order` for which the buyer accumulated the points.\nThis field is returned only if the Orders API is used to process orders."
        }
      },
      "description": "Provides metadata when the event `type` is `ACCUMULATE_POINTS`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventAdjustPoints": {
      "type": "object",
      "required": [
        "points"
      ],
      "properties": {
        "loyalty_program_id": {
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the `loyalty program`.",
          "x-read-only": true
        },
        "points": {
          "type": "integer",
          "description": "The number of points added or removed."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the adjustment of points."
        }
      },
      "description": "Provides metadata when the event `type` is `ADJUST_POINTS`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventCreateReward": {
      "type": "object",
      "required": [
        "loyalty_program_id",
        "points"
      ],
      "properties": {
        "loyalty_program_id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The ID of the `loyalty program`.",
          "x-read-only": true
        },
        "reward_id": {
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the created `loyalty reward`.\nThis field is returned only if the event source is `LOYALTY_API`.",
          "x-read-only": true
        },
        "points": {
          "maximum": 0,
          "type": "integer",
          "description": "The loyalty points used to create the reward.",
          "x-read-only": true
        }
      },
      "description": "Provides metadata when the event `type` is `CREATE_REWARD`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventDateTimeFilter": {
      "type": "object",
      "required": [
        "created_at"
      ],
      "properties": {
        "created_at": {
          "$ref": "#/definitions/TimeRange",
          "description": "The `created_at` date time range used to filter the result."
        }
      },
      "description": "Filter events by date time range.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventDeleteReward": {
      "type": "object",
      "required": [
        "loyalty_program_id",
        "points"
      ],
      "properties": {
        "loyalty_program_id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The ID of the `loyalty program`.",
          "x-read-only": true
        },
        "reward_id": {
          "maxLength": 36,
          "type": "string",
          "description": "The ID of the deleted `loyalty reward`.\nThis field is returned only if the event source is `LOYALTY_API`.",
          "x-read-only": true
        },
        "points": {
          "minimum": 0,
          "type": "integer",
          "description": "The number of points returned to the loyalty account.",
          "x-read-only": true
        }
      },
      "description": "Provides metadata when the event `type` is `DELETE_REWARD`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventExpirePoints": {
      "type": "object",
      "required": [
        "loyalty_program_id",
        "points"
      ],
      "properties": {
        "loyalty_program_id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the `loyalty program`.",
          "x-read-only": true
        },
        "points": {
          "maximum": 0,
          "type": "integer",
          "description": "The number of points expired."
        }
      },
      "description": "Provides metadata when the event `type` is `EXPIRE_POINTS`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventFilter": {
      "type": "object",
      "properties": {
        "loyalty_account_filter": {
          "$ref": "#/definitions/LoyaltyEventLoyaltyAccountFilter",
          "description": "Filter events by loyalty account."
        },
        "type_filter": {
          "$ref": "#/definitions/LoyaltyEventTypeFilter",
          "description": "Filter events by event type."
        },
        "date_time_filter": {
          "$ref": "#/definitions/LoyaltyEventDateTimeFilter",
          "description": "Filter events by date time range. \nFor each range, the start time is inclusive and the end time \nis exclusive."
        },
        "location_filter": {
          "$ref": "#/definitions/LoyaltyEventLocationFilter",
          "description": "Filter events by location."
        },
        "order_filter": {
          "$ref": "#/definitions/LoyaltyEventOrderFilter",
          "description": "Filter events by the order associated with the event."
        }
      },
      "description": "The filtering criteria. If the request specifies multiple filters, \nthe endpoint uses a logical AND to evaluate them.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventLocationFilter": {
      "type": "object",
      "required": [
        "location_ids"
      ],
      "properties": {
        "location_ids": {
          "type": "array",
          "items": {
            "minLength": 1,
            "type": "string"
          },
          "description": "The `location` IDs for loyalty events to query.\nIf multiple values are specified, the endpoint uses \na logical OR to combine them."
        }
      },
      "description": "Filter events by location.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventLoyaltyAccountFilter": {
      "type": "object",
      "required": [
        "loyalty_account_id"
      ],
      "properties": {
        "loyalty_account_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the `loyalty account` associated with loyalty events."
        }
      },
      "description": "Filter events by loyalty account.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventOrderFilter": {
      "type": "object",
      "required": [
        "order_id"
      ],
      "properties": {
        "order_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the `order` associated with the event."
        }
      },
      "description": "Filter events by the order associated with the event.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventOther": {
      "type": "object",
      "required": [
        "loyalty_program_id",
        "points"
      ],
      "properties": {
        "loyalty_program_id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the `loyalty program`.",
          "x-read-only": true
        },
        "points": {
          "type": "integer",
          "description": "The number of points added or removed."
        }
      },
      "description": "Provides metadata when the event `type` is `OTHER`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/LoyaltyEventFilter",
          "description": "The query filter criteria."
        }
      },
      "description": "Represents a query used to search for loyalty events.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventRedeemReward": {
      "type": "object",
      "required": [
        "loyalty_program_id"
      ],
      "properties": {
        "loyalty_program_id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The ID of the `loyalty program`.",
          "x-read-only": true
        },
        "reward_id": {
          "maxLength": 36,
          "type": "string",
          "description": "The ID of the redeemed `loyalty reward`.\nThis field is returned only if the event source is `LOYALTY_API`.",
          "x-read-only": true
        },
        "order_id": {
          "type": "string",
          "description": "The ID of the `order` that redeemed the reward.\nThis field is returned only if the Orders API is used to process orders.",
          "x-read-only": true
        }
      },
      "description": "Provides metadata when the event `type` is `REDEEM_REWARD`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyEventTypeFilter": {
      "type": "object",
      "required": [
        "types"
      ],
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The loyalty event types used to filter the result.\nIf multiple values are specified, the endpoint uses a \nlogical OR to combine them.\nSee [LoyaltyEventType](#type-loyaltyeventtype) for possible values"
        }
      },
      "description": "Filter events by event type.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgram": {
      "type": "object",
      "required": [
        "id",
        "status",
        "reward_tiers",
        "terminology",
        "location_ids",
        "created_at",
        "updated_at",
        "accrual_rules"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the loyalty program. Updates to \nthe loyalty program do not modify the identifier.",
          "x-read-only": true
        },
        "status": {
          "type": "string",
          "description": "Whether the program is currently active.\nSee [LoyaltyProgramStatus](#type-loyaltyprogramstatus) for possible values",
          "x-read-only": true
        },
        "reward_tiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyProgramRewardTier"
          },
          "description": "The list of rewards for buyers, sorted by ascending points.",
          "x-read-only": true
        },
        "expiration_policy": {
          "$ref": "#/definitions/LoyaltyProgramExpirationPolicy",
          "description": "If present, details for how points expire.",
          "x-read-only": true
        },
        "terminology": {
          "$ref": "#/definitions/LoyaltyProgramTerminology",
          "description": "A cosmetic name for the “points” currency.",
          "x-read-only": true
        },
        "location_ids": {
          "type": "array",
          "items": {
            "minLength": 1,
            "type": "string"
          },
          "description": "The `locations` at which the program is active.",
          "x-read-only": true
        },
        "created_at": {
          "minLength": 1,
          "type": "string",
          "description": "The timestamp when the program was created, in RFC 3339 format.",
          "x-read-only": true
        },
        "updated_at": {
          "minLength": 1,
          "type": "string",
          "description": "The timestamp when the reward was last updated, in RFC 3339 format.",
          "x-read-only": true
        },
        "accrual_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyProgramAccrualRule"
          },
          "description": "Defines how buyers can earn loyalty points.",
          "x-read-only": true
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgramAccrualRule": {
      "type": "object",
      "required": [
        "accrual_type"
      ],
      "properties": {
        "accrual_type": {
          "type": "string",
          "description": "The type of the accrual rule that defines how buyers can earn points.\nSee [LoyaltyProgramAccrualRuleType](#type-loyaltyprogramaccrualruletype) for possible values",
          "x-read-only": true
        },
        "points": {
          "minimum": 1,
          "type": "integer",
          "description": "The number of points that \nbuyers earn based on the `accrual_type`.",
          "x-read-only": true
        },
        "visit_minimum_amount_money": {
          "$ref": "#/definitions/Money",
          "description": "When the accrual rule is visit-based (`accrual_type` is `VISIT`),\nthis field indicates the minimum purchase required during the visit to \nquality for the reward.",
          "x-read-only": true
        },
        "spend_amount_money": {
          "$ref": "#/definitions/Money",
          "description": "When the accrual rule is spend-based (`accrual_type` is `SPEND`),\nthis field indicates the amount that a buyer must spend \nto earn the points. For example,\nsuppose the accrual rule is \"earn 1 point for every $10 you spend\". \nThen, buyer earns a point for every $10 they spend. If \nbuyer spends $105, the buyer earns 10 points.",
          "x-read-only": true
        },
        "catalog_object_id": {
          "type": "string",
          "description": "The ID of the `catalog object` to purchase to earn the number of points defined by the\nrule. This is either an item variation or a category, depending on the type. This is defined on\n`ITEM_VARIATION` rules and `CATEGORY` rules.",
          "x-read-only": true
        }
      },
      "description": "Defines an accrual rule, which is how buyers can earn points.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgramExpirationPolicy": {
      "type": "object",
      "required": [
        "expiration_duration"
      ],
      "properties": {
        "expiration_duration": {
          "minLength": 1,
          "type": "string",
          "description": "The duration of time before points expire, in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "Describes when the loyalty program expires.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgramRewardDefinition": {
      "type": "object",
      "required": [
        "scope",
        "discount_type"
      ],
      "properties": {
        "scope": {
          "type": "string",
          "description": "Indicates the scope of the reward tier.\nSee [LoyaltyProgramRewardDefinitionScope](#type-loyaltyprogramrewarddefinitionscope) for possible values",
          "x-read-only": true
        },
        "discount_type": {
          "type": "string",
          "description": "The type of discount the reward tier offers.\nSee [LoyaltyProgramRewardDefinitionType](#type-loyaltyprogramrewarddefinitiontype) for possible values",
          "x-read-only": true
        },
        "percentage_discount": {
          "type": "string",
          "description": "Present if `discount_type` is `FIXED_PERCENTAGE`.\nFor example, a 7.25% off discount will be represented as \"7.25\".",
          "x-read-only": true
        },
        "catalog_object_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of `catalog object` ids to which this reward can be applied. They are either all item-variation ids or category ids, depending on the `type` field.",
          "x-read-only": true
        },
        "fixed_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "Present if `discount_type` is `FIXED_AMOUNT`. For example, $5 off.",
          "x-read-only": true
        },
        "max_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "When `discount_type` is `FIXED_PERCENTAGE`, the maximum discount amount that can be applied.",
          "x-read-only": true
        }
      },
      "description": "Provides details about the loyalty program reward tier definition.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgramRewardTier": {
      "type": "object",
      "required": [
        "id",
        "points",
        "name",
        "definition",
        "created_at"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the reward tier.",
          "x-read-only": true
        },
        "points": {
          "minimum": 1,
          "type": "integer",
          "description": "The points exchanged for the reward tier.",
          "x-read-only": true
        },
        "name": {
          "minLength": 1,
          "type": "string",
          "description": "The name of the reward tier.",
          "x-read-only": true
        },
        "definition": {
          "$ref": "#/definitions/LoyaltyProgramRewardDefinition",
          "description": "Provides details about the reward tier definition.",
          "x-read-only": true
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp when the reward tier was created, in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "Describes a loyalty program reward tier.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyProgramTerminology": {
      "type": "object",
      "required": [
        "one",
        "other"
      ],
      "properties": {
        "one": {
          "minLength": 1,
          "type": "string",
          "description": "A singular unit for a point (for example, 1 point is called 1 star).",
          "x-read-only": true
        },
        "other": {
          "minLength": 1,
          "type": "string",
          "description": "A plural unit for point (for example, 10 points is called 10 stars).",
          "x-read-only": true
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "LoyaltyReward": {
      "type": "object",
      "required": [
        "loyalty_account_id",
        "reward_tier_id"
      ],
      "properties": {
        "id": {
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the loyalty reward.",
          "x-read-only": true
        },
        "status": {
          "type": "string",
          "description": "The status of a loyalty reward.\nSee [LoyaltyRewardStatus](#type-loyaltyrewardstatus) for possible values",
          "x-read-only": true
        },
        "loyalty_account_id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the `loyalty account` to which the reward belongs."
        },
        "reward_tier_id": {
          "minLength": 1,
          "maxLength": 36,
          "type": "string",
          "description": "The Square-assigned ID of the `reward tier` used to create the reward."
        },
        "points": {
          "minimum": 1,
          "type": "integer",
          "description": "The number of loyalty points used for the reward.",
          "x-read-only": true
        },
        "order_id": {
          "type": "string",
          "description": "The Square-assigned ID of the `order` to which the reward is attached."
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp when the reward was created, in RFC 3339 format.",
          "x-read-only": true
        },
        "updated_at": {
          "type": "string",
          "description": "The timestamp when the reward was last updated, in RFC 3339 format.",
          "x-read-only": true
        },
        "redeemed_at": {
          "type": "string",
          "description": "The timestamp when the reward was redeemed, in RFC 3339 format.",
          "x-read-only": true
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MeasurementUnit": {
      "type": "object",
      "properties": {
        "custom_unit": {
          "$ref": "#/definitions/MeasurementUnitCustom",
          "description": "A custom unit of measurement defined by the seller using the Point of Sale\napp or ad-hoc as an order line item."
        },
        "area_unit": {
          "type": "string",
          "description": "Represents a standard area unit.\nSee [MeasurementUnitArea](#type-measurementunitarea) for possible values"
        },
        "length_unit": {
          "type": "string",
          "description": "Represents a standard length unit.\nSee [MeasurementUnitLength](#type-measurementunitlength) for possible values"
        },
        "volume_unit": {
          "type": "string",
          "description": "Represents a standard volume unit.\nSee [MeasurementUnitVolume](#type-measurementunitvolume) for possible values"
        },
        "weight_unit": {
          "type": "string",
          "description": "Represents a standard unit of weight or mass.\nSee [MeasurementUnitWeight](#type-measurementunitweight) for possible values"
        },
        "generic_unit": {
          "type": "string",
          "description": "Reserved for API integrations that lack the ability to specify a real measurement unit\nSee [MeasurementUnitGeneric](#type-measurementunitgeneric) for possible values"
        },
        "time_unit": {
          "type": "string",
          "description": "Represents a standard unit of time.\nSee [MeasurementUnitTime](#type-measurementunittime) for possible values"
        },
        "type": {
          "type": "string",
          "description": "Represents the type of the measurement unit.\nSee [MeasurementUnitUnitType](#type-measurementunitunittype) for possible values"
        }
      },
      "description": "Represents a unit of measurement to use with a quantity, such as ounces\nor inches. Exactly one of the following fields are required: `custom_unit`,\n`area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "MeasurementUnitCustom": {
      "type": "object",
      "required": [
        "name",
        "abbreviation"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the custom unit, for example \"bushel\"."
        },
        "abbreviation": {
          "type": "string",
          "description": "The abbreviation of the custom unit, such as \"bsh\" (bushel). This appears\nin the cart for the Point of Sale app, and in reports."
        }
      },
      "description": "The information needed to define a custom unit, provided by the seller.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "Merchant": {
      "type": "object",
      "required": [
        "country"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The Square-issued ID of the merchant."
        },
        "business_name": {
          "type": "string",
          "description": "The business name of the merchant."
        },
        "country": {
          "type": "string",
          "description": "The country code associated with the merchant account, in ISO 3166 format.\nSee [Country](#type-country) for possible values"
        },
        "language_code": {
          "type": "string",
          "description": "The language code associated with the merchant account, in BCP 47 format."
        },
        "currency": {
          "type": "string",
          "description": "The currency associated with the merchant account, in ISO 4217 format.\nSee [Currency](#type-currency) for possible values"
        },
        "status": {
          "type": "string",
          "description": "The merchant status, active or inactive.\nSee [MerchantStatus](#type-merchantstatus) for possible values"
        },
        "main_location_id": {
          "type": "string",
          "description": "The ID of the main `Location` for this merchant."
        }
      },
      "description": "Represents a Square seller.",
      "x-release-status": "PUBLIC"
    },
    "MethodErrorCodes": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "\nSee [ErrorCode](#type-errorcode) for possible values"
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "Money": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case."
        },
        "currency": {
          "type": "string",
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee `Currency` for possible values.\nSee [Currency](#type-currency) for possible values"
        }
      },
      "description": "Represents an amount of money. `Money` fields can be signed or unsigned.\nFields that do not explicitly define whether they are signed or unsigned are\nconsidered unsigned and can only hold positive amounts. For signed fields, the\nsign of the value indicates the purpose of the money transfer. See\n[Working with Monetary Amounts](/build-basics/working-with-monetary-amounts)\nfor more information.",
      "x-release-status": "PUBLIC"
    },
    "ObtainTokenRequest": {
      "type": "object",
      "required": [
        "client_id",
        "client_secret",
        "grant_type"
      ],
      "properties": {
        "client_id": {
          "type": "string",
          "description": "The Square-issued ID of your application, available from the\n[application dashboard](https://connect.squareup.com/apps)."
        },
        "client_secret": {
          "type": "string",
          "description": "The Square-issued application secret for your application, available\nfrom the [application dashboard](https://connect.squareup.com/apps)."
        },
        "code": {
          "type": "string",
          "description": "The authorization code to exchange.\nThis is required if `grant_type` is set to `authorization_code`, to indicate that\nthe application wants to exchange an authorization code for an OAuth access token."
        },
        "redirect_uri": {
          "type": "string",
          "description": "The redirect URL assigned in the [application dashboard](https://connect.squareup.com/apps)."
        },
        "grant_type": {
          "type": "string",
          "description": "Specifies the method to request an OAuth access token.\nValid values are: `authorization_code`, `refresh_token`, and `migration_token`"
        },
        "refresh_token": {
          "type": "string",
          "description": "A valid refresh token for generating a new OAuth access token.\nA valid refresh token is required if `grant_type` is set to `refresh_token` ,\nto indicate the application wants a replacement for an expired OAuth access token."
        },
        "migration_token": {
          "type": "string",
          "description": "Legacy OAuth access token obtained using a Connect API version prior\nto 2019-03-13. This parameter is required if `grant_type` is set to\n`migration_token` to indicate that the application wants to get a replacement\nOAuth access token. The response also returns a refresh token.\nFor more information, see [Migrate to Using Refresh Tokens](https://developer.squareup.com/docs/authz/oauth/migration)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "client_id": "APPLICATION_ID",
          "client_secret": "APPLICATION_SECRET",
          "code": "CODE_FROM_AUTHORIZE",
          "grant_type": "authorization_code"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ObtainToken/ObtainTokenRequest.python",
        "csharp": "/sdk_samples/ObtainToken/ObtainTokenRequest.csharp",
        "java": "/sdk_samples/ObtainToken/ObtainTokenRequest.java",
        "php": "/sdk_samples/ObtainToken/ObtainTokenRequest.php",
        "javascript": "/sdk_samples/ObtainToken/ObtainTokenRequest.javascript",
        "ruby": "/sdk_samples/ObtainToken/ObtainTokenRequest.ruby"
      }
    },
    "ObtainTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "A valid OAuth access token. OAuth access tokens are 64 bytes long.\nProvide the access token in a header with every request to Connect API\nendpoints. See the [Build with OAuth](https://developer.squareup.com/docs/authz/oauth/build-with-the-api) guide\nfor more information."
        },
        "token_type": {
          "type": "string",
          "description": "This value is always _bearer_."
        },
        "expires_at": {
          "type": "string",
          "description": "The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format."
        },
        "merchant_id": {
          "type": "string",
          "description": "The ID of the authorizing merchant\u0027s business."
        },
        "subscription_id": {
          "type": "string",
          "description": "__LEGACY FIELD__. The ID of a subscription plan the merchant signed up\nfor. Only present if the merchant signed up for a subscription during authorization."
        },
        "plan_id": {
          "type": "string",
          "description": "T__LEGACY FIELD__. The ID of the subscription plan the merchant signed\nup for. Only present if the merchant signed up for a subscription during\nauthorization."
        },
        "id_token": {
          "type": "string",
          "description": "Then OpenID token belonging to this this person. Only present if the\nOPENID scope is included in the authorize request."
        },
        "refresh_token": {
          "type": "string",
          "description": "A refresh token. OAuth refresh tokens are 64 bytes long.\nFor more information, see [OAuth access token management](https://developer.squareup.com/docs/authz/oauth/how-it-works#oauth-access-token-management)."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "access_token": "ACCESS_TOKEN",
        "token_type": "bearer",
        "expires_at": "2006-01-02T15:04:05Z",
        "merchant_id": "MERCHANT_ID",
        "refresh_token": "REFRESH_TOKEN"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ObtainToken/ObtainTokenResponse.python",
        "csharp": "/sdk_samples/ObtainToken/ObtainTokenResponse.csharp",
        "java": "/sdk_samples/ObtainToken/ObtainTokenResponse.java",
        "php": "/sdk_samples/ObtainToken/ObtainTokenResponse.php",
        "javascript": "/sdk_samples/ObtainToken/ObtainTokenResponse.javascript",
        "ruby": "/sdk_samples/ObtainToken/ObtainTokenResponse.ruby"
      }
    },
    "Order": {
      "type": "object",
      "required": [
        "location_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The order\u0027s unique ID.",
          "x-read-only": true
        },
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the merchant location this order is associated with."
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "A client specified identifier to associate an entity in another system\nwith this order."
        },
        "source": {
          "$ref": "#/definitions/OrderSource",
          "description": "The origination details of the order."
        },
        "customer_id": {
          "maxLength": 191,
          "type": "string",
          "description": "The `Customer` ID of the customer associated with the order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "line_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItem"
          },
          "description": "The line items included in the order."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemTax"
          },
          "description": "The list of all taxes associated with the order.\n\nTaxes can be scoped to either `ORDER` or `LINE_ITEM`. For taxes with `LINE_ITEM` scope, an\n`OrderLineItemAppliedTax` must be added to each line item that the tax applies to. For taxes\nwith `ORDER` scope, the server will generate an `OrderLineItemAppliedTax` for every line item.\n\nOn reads, each tax in the list will include the total amount of that tax applied to the order.\n\n__IMPORTANT__: If `LINE_ITEM` scope is set on any taxes in this field, usage of the deprecated\n`line_items.taxes` field will result in an error. Please use `line_items.applied_taxes`\ninstead."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemDiscount"
          },
          "description": "The list of all discounts associated with the order.\n\nDiscounts can be scoped to either `ORDER` or `LINE_ITEM`. For discounts scoped to `LINE_ITEM`,\nan `OrderLineItemAppliedDiscount` must be added to each line item that the discount applies to.\nFor discounts with `ORDER` scope, the server will generate an `OrderLineItemAppliedDiscount`\nfor every line item.\n\n__IMPORTANT__: If `LINE_ITEM` scope is set on any discounts in this field, usage of the deprecated\n`line_items.discounts` field will result in an error. Please use `line_items.applied_discounts`\ninstead."
        },
        "service_charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderServiceCharge"
          },
          "description": "A list of service charges applied to the order."
        },
        "fulfillments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderFulfillment"
          },
          "description": "Details on order fulfillment.\n\nOrders can only be created with at most one fulfillment. However, orders returned\nby the API may contain multiple fulfillments."
        },
        "returns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderReturn"
          },
          "description": "Collection of items from sale Orders being returned in this one. Normally part of an\nItemized Return or Exchange.  There will be exactly one `Return` object per sale Order being\nreferenced.",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        },
        "return_amounts": {
          "$ref": "#/definitions/OrderMoneyAmounts",
          "description": "Rollup of returned money amounts.",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        },
        "net_amounts": {
          "$ref": "#/definitions/OrderMoneyAmounts",
          "description": "Net money amounts (sale money - return money).",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        },
        "rounding_adjustment": {
          "$ref": "#/definitions/OrderRoundingAdjustment",
          "description": "A positive or negative rounding adjustment to the total of the order, commonly used to\napply Cash Rounding when the minimum unit of account is smaller than the lowest physical\ndenomination of currency.",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        },
        "tenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tender"
          },
          "description": "The Tenders which were used to pay for the Order.",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "description": "The Refunds that are part of this Order.",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-defined data attached to this order. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a \u0027:\u0027 character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "created_at": {
          "type": "string",
          "description": "Timestamp for when the order was created. In RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "updated_at": {
          "type": "string",
          "description": "Timestamp for when the order was last updated. In RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "closed_at": {
          "type": "string",
          "description": "Timestamp for when the order reached a terminal [state](#property-state). In RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "state": {
          "type": "string",
          "description": "The current state of the order. `OPEN`,`COMPLETED`,`CANCELED`\nSee [OrderState](#type-orderstate) for possible values"
        },
        "version": {
          "type": "integer",
          "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders).",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for the order.",
          "x-read-only": true
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total tax amount of money to collect for the order.",
          "x-read-only": true
        },
        "total_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total discount amount of money to collect for the order.",
          "x-read-only": true
        },
        "total_service_charge_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money collected in service charges for the order.\n\nNote: `total_service_charge_money` is the sum of `applied_money` fields for each individual\nservice charge. Therefore, `total_service_charge_money` will only include inclusive tax amounts,\nnot additive tax amounts.",
          "x-read-only": true
        },
        "pricing_options": {
          "$ref": "#/definitions/OrderPricingOptions",
          "description": "Pricing options for an order. The options affect how the order\u0027s price is calculated.\nThey can be used, for example, to apply automatic price adjustments that are based on pre-configured\n[pricing rules](https://developer.squareup.com/docs/reference/square/objects/CatalogPricingRule)."
        },
        "rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderReward"
          },
          "description": "A set-like list of rewards that have been added to the order.",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        }
      },
      "description": "Contains all information related to a single order to process with Square,\nincluding line items that specify the products to purchase. Order objects also\ninclude information on any associated tenders, refunds, and returns.\n\nAll Connect V2 Transactions have all been converted to Orders including all associated\nitemization data.",
      "x-release-status": "PUBLIC"
    },
    "OrderCreated": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string",
          "description": "The order\u0027s unique ID."
        },
        "version": {
          "type": "integer",
          "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/docs/orders-api/manage-orders#update-orders)"
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the merchant location this order is associated with."
        },
        "state": {
          "type": "string",
          "description": "The state of the order.\nSee [OrderState](#type-orderstate) for possible values"
        },
        "created_at": {
          "type": "string",
          "description": "Timestamp for when the order was created in RFC 3339 format."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderCreatedObject": {
      "type": "object",
      "properties": {
        "order_created": {
          "$ref": "#/definitions/OrderCreated",
          "description": "Information about the created order."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderEntry": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string",
          "description": "The id of the Order"
        },
        "version": {
          "type": "integer",
          "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders).",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "location_id": {
          "type": "string",
          "description": "The location id the Order belongs to."
        }
      },
      "description": "A lightweight description of an [Order](#type-order) that is returned when `returned_entries` is true on a\n[SearchOrderRequest](#type-searchorderrequest)",
      "x-release-status": "PUBLIC"
    },
    "OrderFulfillment": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the fulfillment only within this order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "type": {
          "type": "string",
          "description": "The type of the fulfillment.\nSee [OrderFulfillmentType](#type-orderfulfillmenttype) for possible values"
        },
        "state": {
          "type": "string",
          "description": "The state of the fulfillment.\nSee [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-defined data attached to this fulfillment. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a \u0027:\u0027 character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "pickup_details": {
          "$ref": "#/definitions/OrderFulfillmentPickupDetails",
          "description": "Contains details for a pickup fulfillment. Required when fulfillment\ntype is `PICKUP`."
        },
        "shipment_details": {
          "$ref": "#/definitions/OrderFulfillmentShipmentDetails",
          "description": "Contains details for a shipment fulfillment. Required when fulfillment type\nis `SHIPMENT`.\n\nA shipment fulfillment\u0027s relationship to fulfillment `state`:\n`PROPOSED`: A shipment is requested.\n`RESERVED`: Fulfillment accepted. Shipment processing.\n`PREPARED`: Shipment packaged. Shipping label created.\n`COMPLETED`: Package has been shipped.\n`CANCELED`: Shipment has been canceled.\n`FAILED`: Shipment has failed.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "Contains details on how to fulfill this order.",
      "x-release-status": "PUBLIC"
    },
    "OrderFulfillmentPickupDetails": {
      "type": "object",
      "properties": {
        "recipient": {
          "$ref": "#/definitions/OrderFulfillmentRecipient",
          "description": "Information on the person meant to pick up this fulfillment from a physical\nlocation."
        },
        "expires_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when this fulfillment\nwill expire if it is not accepted. Must be in RFC 3339 format\ne.g., \"2016-09-04T23:59:33.123Z\". Expiration time can only be set up to 7\ndays in the future. If `expires_at` is not set, this pickup fulfillment\nwill be automatically accepted when placed."
        },
        "auto_complete_duration": {
          "type": "string",
          "description": "The duration of time after which an open and accepted pickup fulfillment\nwill automatically move to the `COMPLETED` state. Must be in RFC3339\nduration format e.g., \"P1W3D\".\n\nIf not set, this pickup fulfillment will remain accepted until it is canceled or completed."
        },
        "schedule_type": {
          "type": "string",
          "description": "The schedule type of the pickup fulfillment. Defaults to `SCHEDULED`.\nSee [OrderFulfillmentPickupDetailsScheduleType](#type-orderfulfillmentpickupdetailsscheduletype) for possible values"
        },
        "pickup_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) that represents the start of the pickup window.\nMust be in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".\nFor fulfillments with the schedule type `ASAP`, this is automatically set\nto the current time plus the expected duration to prepare the fulfillment."
        },
        "pickup_window_duration": {
          "type": "string",
          "description": "The window of time in which the order should be picked up after the `pickup_at` timestamp.\nMust be in RFC3339 duration format, e.g., \"P1W3D\". Can be used as an\ninformational guideline for merchants."
        },
        "prep_time_duration": {
          "type": "string",
          "description": "The duration of time it takes to prepare this fulfillment.\nMust be in RFC3339 duration format, e.g., \"P1W3D\"."
        },
        "note": {
          "maxLength": 500,
          "type": "string",
          "description": "A note meant to provide additional instructions about the pickup\nfulfillment displayed in the Square Point of Sale and set by the API."
        },
        "placed_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when the fulfillment\nwas placed. Must be in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "accepted_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when the fulfillment\nwas accepted. In RFC3339 timestamp format,\ne.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "rejected_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when the fulfillment\nwas rejected. In RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "ready_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when the fulfillment is\nmarked as ready for pickup. In RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "expired_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when the fulfillment expired.\nIn RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "picked_up_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when the fulfillment\nwas picked up by the recipient. In RFC3339 timestamp format,\ne.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "canceled_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the fulfillment was canceled.",
          "x-read-only": true
        },
        "cancel_reason": {
          "maxLength": 100,
          "type": "string",
          "description": "A description of why the pickup was canceled. Max length: 100 characters."
        },
        "is_curbside_pickup": {
          "type": "boolean",
          "description": "If true, indicates this pickup order is for curbside pickup, not in-store pickup.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "curbside_pickup_details": {
          "$ref": "#/definitions/OrderFulfillmentPickupDetailsCurbsidePickupDetails",
          "description": "Specific details for curbside pickup. Can only be populated if `is_curbside_pickup` is true.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "Contains details necessary to fulfill a pickup order.",
      "x-release-status": "PUBLIC"
    },
    "OrderFulfillmentPickupDetailsCurbsidePickupDetails": {
      "type": "object",
      "properties": {
        "curbside_details": {
          "maxLength": 250,
          "type": "string",
          "description": "Specific details for curbside pickup, such as parking number, vehicle model, etc."
        },
        "buyer_arrived_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the buyer arrived and is waiting for pickup."
        }
      },
      "description": "Specific details for curbside pickup.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderFulfillmentRecipient": {
      "type": "object",
      "properties": {
        "customer_id": {
          "maxLength": 191,
          "type": "string",
          "description": "The Customer ID of the customer associated with the fulfillment.\n\nIf `customer_id` is provided, the fulfillment recipient\u0027s `display_name`,\n`email_address`, and `phone_number` are automatically populated from the\ntargeted customer profile. If these fields are set in the request, the request\nvalues will override the information from the customer profile. If the\ntargeted customer profile does not contain the necessary information and\nthese fields are left unset, the request will result in an error."
        },
        "display_name": {
          "maxLength": 255,
          "type": "string",
          "description": "The display name of the fulfillment recipient.\n\nIf provided, overrides the value pulled from the customer profile indicated by `customer_id`."
        },
        "email_address": {
          "maxLength": 255,
          "type": "string",
          "description": "The email address of the fulfillment recipient.\n\nIf provided, overrides the value pulled from the customer profile indicated by `customer_id`."
        },
        "phone_number": {
          "maxLength": 17,
          "type": "string",
          "description": "The phone number of the fulfillment recipient.\n\nIf provided, overrides the value pulled from the customer profile indicated by `customer_id`."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The address of the fulfillment recipient.\n\nIf provided, overrides the value pulled from the customer profile indicated by `customer_id`.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "Contains information on the recipient of a fulfillment.",
      "x-release-status": "PUBLIC"
    },
    "OrderFulfillmentShipmentDetails": {
      "type": "object",
      "properties": {
        "recipient": {
          "$ref": "#/definitions/OrderFulfillmentRecipient",
          "description": "Information on the person meant to receive this shipment fulfillment."
        },
        "carrier": {
          "maxLength": 50,
          "type": "string",
          "description": "The shipping carrier being used to ship this fulfillment\ne.g. UPS, FedEx, USPS, etc."
        },
        "shipping_note": {
          "maxLength": 500,
          "type": "string",
          "description": "A note with additional information for the shipping carrier."
        },
        "shipping_type": {
          "maxLength": 50,
          "type": "string",
          "description": "A description of the type of shipping product purchased from the carrier.\ne.g. First Class, Priority, Express"
        },
        "tracking_number": {
          "maxLength": 100,
          "type": "string",
          "description": "The reference number provided by the carrier to track the shipment\u0027s progress."
        },
        "tracking_url": {
          "maxLength": 2000,
          "type": "string",
          "description": "A link to the tracking webpage on the carrier\u0027s website."
        },
        "placed_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when the shipment was\nrequested. Must be in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "in_progress_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when this fulfillment was\nmoved to the `RESERVED` state. Indicates that preparation of this shipment has begun.\nMust be in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "packaged_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when this fulfillment\nwas moved to the `PREPARED` state. Indicates that the fulfillment is packaged.\nMust be in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "expected_shipped_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when the shipment is\nexpected to be delivered to the shipping carrier. Must be in RFC3339 timestamp\nformat, e.g., \"2016-09-04T23:59:33.123Z\"."
        },
        "shipped_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when this fulfillment\nwas moved to the `COMPLETED`state. Indicates that the fulfillment has been given\nto the shipping carrier. Must be in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "canceled_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating the shipment was canceled.\nMust be in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\"."
        },
        "cancel_reason": {
          "maxLength": 100,
          "type": "string",
          "description": "A description of why the shipment was canceled."
        },
        "failed_at": {
          "type": "string",
          "description": "The [timestamp](#workingwithdates) indicating when the shipment\nfailed to be completed. Must be in RFC3339 timestamp format, e.g.,\n\"2016-09-04T23:59:33.123Z\".",
          "x-read-only": true
        },
        "failure_reason": {
          "maxLength": 100,
          "type": "string",
          "description": "A description of why the shipment failed to be completed."
        }
      },
      "description": "Contains details necessary to fulfill a shipment order.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderFulfillmentUpdated": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string",
          "description": "The order\u0027s unique ID."
        },
        "version": {
          "type": "integer",
          "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/docs/orders-api/manage-orders#update-orders)"
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the merchant location this order is associated with."
        },
        "state": {
          "type": "string",
          "description": "The state of the order.\nSee [OrderState](#type-orderstate) for possible values"
        },
        "created_at": {
          "type": "string",
          "description": "Timestamp for when the order was created in RFC 3339 format."
        },
        "updated_at": {
          "type": "string",
          "description": "Timestamp for when the order was last updated in RFC 3339 format."
        },
        "fulfillment_update": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderFulfillmentUpdatedUpdate"
          },
          "description": "The fulfillments that were updated with this version change."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderFulfillmentUpdatedObject": {
      "type": "object",
      "properties": {
        "order_fulfillment_updated": {
          "$ref": "#/definitions/OrderFulfillmentUpdated",
          "description": "Information about the updated order fulfillment."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderFulfillmentUpdatedUpdate": {
      "type": "object",
      "properties": {
        "fulfillment_uid": {
          "type": "string",
          "description": "Unique ID that identifies the fulfillment only within this order."
        },
        "old_state": {
          "type": "string",
          "description": "The state of the fulfillment before the change.\nWill not be populated if the fulfillment is created with this new Order version.\nSee [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values"
        },
        "new_state": {
          "type": "string",
          "description": "The state of the fulfillment after the change. May be equal to old_state if a non-state\nfield was changed on the fulfillment (e.g. tracking number).\nSee [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values"
        }
      },
      "description": "Information about fulfillment updates.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderLineItem": {
      "type": "object",
      "required": [
        "quantity"
      ],
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the line item only within this order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "name": {
          "maxLength": 500,
          "type": "string",
          "description": "The name of the line item."
        },
        "quantity": {
          "minLength": 1,
          "maxLength": 12,
          "type": "string",
          "description": "The quantity purchased, formatted as a decimal number.\nFor example: `\"3\"`.\n\nLine items with a `quantity_unit` can have non-integer quantities.\nFor example: `\"1.70000\"`."
        },
        "quantity_unit": {
          "$ref": "#/definitions/OrderQuantityUnit",
          "description": "The unit and precision that this line item\u0027s quantity is measured in."
        },
        "note": {
          "maxLength": 500,
          "type": "string",
          "description": "The note of the line item."
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The `CatalogItemVariation` id applied to this line item."
        },
        "variation_name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the variation applied to this line item."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-defined data attached to this line item. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a \u0027:\u0027 character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemModifier"
          },
          "description": "The `CatalogModifier`s applied to this line item."
        },
        "applied_taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemAppliedTax"
          },
          "description": "The list of references to taxes applied to this line item. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a\ntop-level `OrderLineItemTax` applied to the line item. On reads, the\namount applied is populated.\n\nAn `OrderLineItemAppliedTax` will be automatically created on every line\nitem for all `ORDER` scoped taxes added to the order. `OrderLineItemAppliedTax`\nrecords for `LINE_ITEM` scoped taxes must be added in requests for the tax\nto apply to any line items.\n\nTo change the amount of a tax, modify the referenced top-level tax.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "applied_discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemAppliedDiscount"
          },
          "description": "The list of references to discounts applied to this line item. Each\n`OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level\n`OrderLineItemDiscounts` applied to the line item. On reads, the amount\napplied is populated.\n\nAn `OrderLineItemAppliedDiscount` will be automatically created on every line item for all\n`ORDER` scoped discounts that are added to the order. `OrderLineItemAppliedDiscount` records\nfor `LINE_ITEM` scoped discounts must be added in requests for the discount to apply to any\nline items.\n\nTo change the amount of a discount, modify the referenced top-level discount.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for a single unit of the line item."
        },
        "variation_total_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The total price of all item variations sold in this line item.\nCalculated as `base_price_money` multiplied by `quantity`.\nDoes not include modifiers.",
          "x-read-only": true
        },
        "gross_sales_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money made in gross sales for this line item.\nCalculated as the sum of the variation\u0027s total price and each modifier\u0027s total price.",
          "x-read-only": true
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total tax amount of money to collect for the line item.",
          "x-read-only": true
        },
        "total_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total discount amount of money to collect for the line item.",
          "x-read-only": true
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for this line item.",
          "x-read-only": true
        }
      },
      "description": "Represents a line item in an order. Each line item describes a different\nproduct to purchase, with its own quantity and price details.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemAppliedDiscount": {
      "type": "object",
      "required": [
        "discount_uid"
      ],
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the applied discount only within this order."
        },
        "discount_uid": {
          "minLength": 1,
          "maxLength": 60,
          "type": "string",
          "description": "The `uid` of the discount the applied discount represents. Must\nreference a discount present in the `order.discounts` field.\n\nThis field is immutable. To change which discounts apply to a line item,\nyou must delete the discount and re-add it as a new `OrderLineItemAppliedDiscount`."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money applied by the discount to the line item.",
          "x-read-only": true
        }
      },
      "description": "Represents an applied portion of a discount to a line item in an order.\n\nOrder scoped discounts will automatically have applied discounts present for each line item.\nLine item scoped discounts must have applied discounts added manually for any applicable line\nitems. The corresponding applied money will automatically be computed based on participating\nline items.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderLineItemAppliedTax": {
      "type": "object",
      "required": [
        "tax_uid"
      ],
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the applied tax only within this order."
        },
        "tax_uid": {
          "minLength": 1,
          "maxLength": 60,
          "type": "string",
          "description": "The `uid` of the tax for which this applied tax represents.  Must reference\na tax present in the `order.taxes` field.\n\nThis field is immutable. To change which taxes apply to a line item, delete and add new\n`OrderLineItemAppliedTax`s."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money applied by the tax to the line item.",
          "x-read-only": true
        }
      },
      "description": "Represents an applied portion of a tax to a line item in an order.\n\nOrder-scoped taxes automatically include the applied taxes in each line item.\nLine item taxes must be referenced from any applicable line items.\nThe corresponding applied money is automatically computed, based on the\nset of participating line items.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderLineItemDiscount": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the discount only within this order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object id referencing `CatalogDiscount`."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "type": {
          "type": "string",
          "description": "The type of the discount.\n\nDiscounts that don\u0027t reference a catalog object ID must have a type of\n`FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\nSee [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for possible values"
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "The percentage of the discount, as a string representation of a decimal number.\nA value of `7.25` corresponds to a percentage of 7.25%.\n\n`percentage` is not set for amount-based discounts."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total declared monetary amount of the discount.\n\n`amount_money` is not set for percentage-based discounts."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of discount actually applied to the line item.\n\nRepresents the amount of money applied as a line item-scoped discount.\nWhen an amount-based discount is scoped to the entire order, the value\nof `applied_money` is different from `amount_money` because the total\namount of the discount is distributed across all line items."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-defined data attached to this discount. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a \u0027:\u0027 character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "scope": {
          "type": "string",
          "description": "Indicates the level at which the discount applies. For `ORDER` scoped discounts,\nSquare generates references in `applied_discounts` on all order line items that do\nnot have them. For `LINE_ITEM` scoped discounts, the discount only applies to line items\nwith a discount reference in their `applied_discounts` field.\n\nThis field is immutable. To change the scope of a discount you must delete\nthe discount and re-add it as a new discount.\nSee [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for possible values"
        },
        "reward_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The reward identifiers corresponding to this discount. The application and\nspecification of discounts that have `reward_ids` are completely controlled by the backing\ncriteria corresponding to the reward tiers of the rewards that are added to the order\nthrough the Loyalty API. To manually unapply discounts that are the result of added rewards,\nthe rewards must be removed from the order through the Loyalty API.",
          "x-release-status": "BETA",
          "x-is-beta": true,
          "x-read-only": true
        },
        "pricing_rule_id": {
          "type": "string",
          "description": "The object identifier of a `pricing rule` to be applied automatically\nto this discount. The specification and application of the discounts, to which a `pricing_rule_id` is\nassigned, are completely controlled by the corresponding pricing rule.",
          "x-read-only": true
        }
      },
      "description": "Represents a discount that applies to one or more line items in an\norder.\n\nFixed-amount, order-scoped discounts are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to the\namount contributed by the item to the order subtotal.",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemModifier": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the modifier only within this order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object id referencing `CatalogModifier`."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the item modifier."
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for the modifier.\n\n`base_price_money` is required for ad hoc modifiers.\nIf both `catalog_object_id` and `base_price_money` are set, `base_price_money` will override the predefined `CatalogModifier` price."
        },
        "total_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The total price of the item modifier for its line item.\nThis is the modifier\u0027s `base_price_money` multiplied by the line item\u0027s quantity.",
          "x-read-only": true
        }
      },
      "description": "A [CatalogModifier](#type-catalogmodifier).",
      "x-release-status": "PUBLIC"
    },
    "OrderLineItemTax": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the tax only within this order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object id referencing `CatalogTax`."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The tax\u0027s name."
        },
        "type": {
          "type": "string",
          "description": "Indicates the calculation method used to apply the tax.\nSee [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values"
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "The percentage of the tax, as a string representation of a decimal\nnumber. For example, a value of `\"7.25\"` corresponds to a percentage of\n7.25%."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-defined data attached to this tax. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a \u0027:\u0027 character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the money applied by the tax in the order."
        },
        "scope": {
          "type": "string",
          "description": "Indicates the level at which the tax applies. For `ORDER` scoped taxes,\nSquare generates references in `applied_taxes` on all order line items that do\nnot have them. For `LINE_ITEM` scoped taxes, the tax will only apply to line items\nwith references in their `applied_taxes` field.\n\nThis field is immutable. To change the scope, you must delete the tax and\nre-add it as a new tax.\nSee [OrderLineItemTaxScope](#type-orderlineitemtaxscope) for possible values"
        }
      },
      "description": "Represents a tax that applies to one or more line item in the order.\n\nFixed-amount, order-scoped taxes are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to the amount the item\ncontributes to the order subtotal.",
      "x-release-status": "PUBLIC"
    },
    "OrderMoneyAmounts": {
      "type": "object",
      "properties": {
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "Total money."
        },
        "tax_money": {
          "$ref": "#/definitions/Money",
          "description": "Money associated with taxes."
        },
        "discount_money": {
          "$ref": "#/definitions/Money",
          "description": "Money associated with discounts."
        },
        "tip_money": {
          "$ref": "#/definitions/Money",
          "description": "Money associated with tips."
        },
        "service_charge_money": {
          "$ref": "#/definitions/Money",
          "description": "Money associated with service charges."
        }
      },
      "description": "A collection of various money amounts.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderPricingOptions": {
      "type": "object",
      "properties": {
        "auto_apply_discounts": {
          "type": "boolean",
          "description": "The option to determine whether or not pricing rule-based discounts are automatically applied to an order."
        }
      },
      "description": "Pricing options for an order. The options affect how the order\u0027s price is calculated.\nThey can be used, for example, to apply automatic price adjustments that are based on pre-configured\n[pricing rules](/reference/square/objects/CatalogPricingRule).",
      "x-release-status": "PUBLIC"
    },
    "OrderQuantityUnit": {
      "type": "object",
      "properties": {
        "measurement_unit": {
          "$ref": "#/definitions/MeasurementUnit",
          "description": "A `MeasurementUnit` that represents the\nunit of measure for the quantity."
        },
        "precision": {
          "type": "integer",
          "description": "For non-integer quantities, represents the number of digits after the decimal point that are\nrecorded for this quantity.\n\nFor example, a precision of 1 allows quantities like `\"1.0\"` and `\"1.1\"`, but not `\"1.01\"`.\n\nMin: 0. Max: 5."
        }
      },
      "description": "Contains the measurement unit for a quantity and a precision which\nspecifies the number of digits after the decimal point for decimal quantities.",
      "x-release-status": "PUBLIC"
    },
    "OrderReturn": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the return only within this order."
        },
        "source_order_id": {
          "type": "string",
          "description": "Order which contains the original sale of these returned line items. This will be unset\nfor unlinked returns."
        },
        "return_line_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderReturnLineItem"
          },
          "description": "Collection of line items which are being returned."
        },
        "return_service_charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderReturnServiceCharge"
          },
          "description": "Collection of service charges which are being returned.",
          "x-read-only": true
        },
        "return_taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderReturnTax"
          },
          "description": "Collection of references to taxes being returned for an order, including the total\napplied tax amount to be returned. The taxes must reference a top-level tax ID from the source\norder."
        },
        "return_discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderReturnDiscount"
          },
          "description": "Collection of references to discounts being returned for an order, including the total\napplied discount amount to be returned. The discounts must reference a top-level discount ID\nfrom the source order."
        },
        "rounding_adjustment": {
          "$ref": "#/definitions/OrderRoundingAdjustment",
          "description": "A positive or negative rounding adjustment to the total value being returned. Commonly\nused to apply Cash Rounding when the minimum unit of account is smaller than the lowest\nphysical denomination of currency."
        },
        "return_amounts": {
          "$ref": "#/definitions/OrderMoneyAmounts",
          "description": "Aggregate monetary value being returned by this Return entry."
        }
      },
      "description": "The set of line items, service charges, taxes, discounts, tips, etc. being returned in an Order.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderReturnDiscount": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the return discount only within this order."
        },
        "source_discount_uid": {
          "maxLength": 60,
          "type": "string",
          "description": "`uid` of the Discount from the Order which contains the original application of this discount."
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object id referencing `CatalogDiscount`."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "type": {
          "type": "string",
          "description": "The type of the discount. If it is created by API, it would be either `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\n\nDiscounts that don\u0027t reference a catalog object ID must have a type of\n`FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\nSee [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for possible values"
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "The percentage of the tax, as a string representation of a decimal number.\nA value of `7.25` corresponds to a percentage of 7.25%.\n\n`percentage` is not set for amount-based discounts."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total declared monetary amount of the discount.\n\n`amount_money` is not set for percentage-based discounts."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of discount actually applied to this line item. When an amount-based\ndiscount is at order-level, this value is different from `amount_money` because the discount\nis distributed across the line items."
        },
        "scope": {
          "type": "string",
          "description": "Indicates the level at which the `OrderReturnDiscount` applies. For `ORDER` scoped\ndiscounts, the server will generate references in `applied_discounts` on all\n`OrderReturnLineItem`s. For `LINE_ITEM` scoped discounts, the discount will only apply to\n`OrderReturnLineItem`s with references in their `applied_discounts` field.\nSee [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for possible values"
        }
      },
      "description": "Represents a discount being returned that applies to one or more return line items in an\norder.\n\nFixed-amount, order-scoped discounts are distributed across all non-zero return line item totals.\nThe amount distributed to each return line item is relative to that item’s contribution to the\norder subtotal.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderReturnLineItem": {
      "type": "object",
      "required": [
        "quantity"
      ],
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique identifier for this return line item entry."
        },
        "source_line_item_uid": {
          "maxLength": 60,
          "type": "string",
          "description": "`uid` of the LineItem in the original sale Order."
        },
        "name": {
          "maxLength": 500,
          "type": "string",
          "description": "The name of the line item."
        },
        "quantity": {
          "minLength": 1,
          "maxLength": 12,
          "type": "string",
          "description": "The quantity returned, formatted as a decimal number.\nFor example: `\"3\"`.\n\nLine items with a `quantity_unit` can have non-integer quantities.\nFor example: `\"1.70000\"`."
        },
        "quantity_unit": {
          "$ref": "#/definitions/OrderQuantityUnit",
          "description": "The unit and precision that this return line item\u0027s quantity is measured in."
        },
        "note": {
          "maxLength": 500,
          "type": "string",
          "description": "The note of the returned line item."
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The `CatalogItemVariation` id applied to this returned line item."
        },
        "variation_name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the variation applied to this returned line item."
        },
        "return_modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderReturnLineItemModifier"
          },
          "description": "The `CatalogModifier`s applied to this line item."
        },
        "applied_taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemAppliedTax"
          },
          "description": "The list of references to `OrderReturnTax` entities applied to the returned line item. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level\n`OrderReturnTax` applied to the returned line item. On reads, the amount applied\nis populated."
        },
        "applied_discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemAppliedDiscount"
          },
          "description": "The list of references to `OrderReturnDiscount` entities applied to the returned line item. Each\n`OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level\n`OrderReturnDiscount` applied to the returned line item. On reads, the amount\napplied is populated."
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for a single unit of the line item."
        },
        "variation_total_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The total price of all item variations returned in this line item.\nCalculated as `base_price_money` multiplied by `quantity`.\nDoes not include modifiers.",
          "x-read-only": true
        },
        "gross_return_money": {
          "$ref": "#/definitions/Money",
          "description": "The gross return amount of money calculated as (item base price + modifiers price) * quantity.",
          "x-read-only": true
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total tax amount of money to return for the line item.",
          "x-read-only": true
        },
        "total_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total discount amount of money to return for the line item.",
          "x-read-only": true
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to return for this line item.",
          "x-read-only": true
        }
      },
      "description": "The line item being returned in an Order.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderReturnLineItemModifier": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the return modifier only within this order."
        },
        "source_modifier_uid": {
          "maxLength": 60,
          "type": "string",
          "description": "`uid` of the Modifier from the LineItem from the Order which contains the\noriginal sale of this line item modifier."
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object id referencing `CatalogModifier`."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the item modifier."
        },
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for the modifier.\n\n`base_price_money` is required for ad hoc modifiers.\nIf both `catalog_object_id` and `base_price_money` are set, `base_price_money` will override the predefined `CatalogModifier` price."
        },
        "total_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The total price of the item modifier for its line item.\nThis is the modifier\u0027s `base_price_money` multiplied by the line item\u0027s quantity.",
          "x-read-only": true
        }
      },
      "description": "A line item modifier being returned.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderReturnServiceCharge": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the return service charge only within this order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "source_service_charge_uid": {
          "maxLength": 60,
          "type": "string",
          "description": "`uid` of the Service Charge from the Order containing the original\ncharge of the service charge. `source_service_charge_uid` is `null` for\nunlinked returns."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the service charge."
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object ID of the associated `CatalogServiceCharge`."
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "The percentage of the service charge, as a string representation of\na decimal number. For example, a value of `\"7.25\"` corresponds to a\npercentage of 7.25%.\n\nExactly one of `percentage` or `amount_money` should be set."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of a non-percentage based service charge.\n\nExactly one of `percentage` or `amount_money` should be set."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money applied to the order by the service charge, including\nany inclusive tax amounts, as calculated by Square.\n\n- For fixed-amount service charges, `applied_money` is equal to `amount_money`.\n- For percentage-based service charges, `applied_money` is the money calculated using the percentage.",
          "x-read-only": true
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for the service charge.\n\n__NOTE__: if an inclusive tax is applied to the service charge, `total_money`\ndoes not equal `applied_money` plus `total_tax_money` since the inclusive\ntax amount will already be included in both `applied_money` and `total_tax_money`.",
          "x-read-only": true
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of tax money to collect for the service charge.",
          "x-read-only": true
        },
        "calculation_phase": {
          "type": "string",
          "description": "The calculation phase after which to apply the service charge.\nSee [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase) for possible values",
          "x-read-only": true
        },
        "taxable": {
          "type": "boolean",
          "description": "Indicates whether the surcharge can be taxed. Service charges\ncalculated in the `TOTAL_PHASE` cannot be marked as taxable."
        },
        "applied_taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemAppliedTax"
          },
          "description": "The list of references to `OrderReturnTax` entities applied to the\n`OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid`\nthat references the `uid` of a top-level `OrderReturnTax` that is being\napplied to the `OrderReturnServiceCharge`. On reads, the amount applied is\npopulated.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "Represents the service charge applied to the original order.",
      "x-release-status": "PUBLIC"
    },
    "OrderReturnTax": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the return tax only within this order."
        },
        "source_tax_uid": {
          "maxLength": 60,
          "type": "string",
          "description": "`uid` of the Tax from the Order which contains the original charge of this tax."
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object id referencing `CatalogTax`."
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The tax\u0027s name."
        },
        "type": {
          "type": "string",
          "description": "Indicates the calculation method used to apply the tax.\nSee [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values"
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "The percentage of the tax, as a string representation of a decimal number.\nFor example, a value of `\"7.25\"` corresponds to a percentage of 7.25%."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the money applied by the tax in an order."
        },
        "scope": {
          "type": "string",
          "description": "Indicates the level at which the `OrderReturnTax` applies. For `ORDER` scoped\ntaxes, Square generates references in `applied_taxes` on all\n`OrderReturnLineItem`s. For `LINE_ITEM` scoped taxes, the tax will only apply to\n`OrderReturnLineItem`s with references in their `applied_discounts` field.\nSee [OrderLineItemTaxScope](#type-orderlineitemtaxscope) for possible values"
        }
      },
      "description": "Represents a tax being returned that applies to one or more return line items in an order.\n\nFixed-amount, order-scoped taxes are distributed across all non-zero return line item totals.\nThe amount distributed to each return line item is relative to that item’s contribution to the\norder subtotal.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderReward": {
      "type": "object",
      "required": [
        "id",
        "reward_tier_id"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "type": "string",
          "description": "The identifier of the reward."
        },
        "reward_tier_id": {
          "minLength": 1,
          "type": "string",
          "description": "The identifier of the reward tier corresponding to this reward."
        }
      },
      "description": "Represents a reward that may be applied to an order if the necessary\nreward tier criteria are met. Rewards are created through the Loyalty API.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderRoundingAdjustment": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the rounding adjustment only within this order."
        },
        "name": {
          "type": "string",
          "description": "The name of the rounding adjustment from the original sale Order."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "Actual rounding adjustment amount."
        }
      },
      "description": "A rounding adjustment of the money being returned. Commonly used to apply Cash Rounding\nwhen the minimum unit of account is smaller than the lowest physical denomination of currency.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderServiceCharge": {
      "type": "object",
      "properties": {
        "uid": {
          "maxLength": 60,
          "type": "string",
          "description": "Unique ID that identifies the service charge only within this order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "name": {
          "maxLength": 255,
          "type": "string",
          "description": "The name of the service charge."
        },
        "catalog_object_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The catalog object ID referencing the service charge `CatalogObject`."
        },
        "percentage": {
          "maxLength": 10,
          "type": "string",
          "description": "The service charge percentage as a string representation of a\ndecimal number. For example, `\"7.25\"` indicates a service charge of 7.25%.\n\nExactly 1 of `percentage` or `amount_money` should be set."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of a non-percentage based service charge.\n\nExactly one of `percentage` or `amount_money` should be set."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money applied to the order by the service charge,\nincluding any inclusive tax amounts, as calculated by Square.\n\n- For fixed-amount service charges, `applied_money` is equal to `amount_money`.\n- For percentage-based service charges, `applied_money` is the money\ncalculated using the percentage.",
          "x-read-only": true
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for the service charge.\n\n__Note__: if an inclusive tax is applied to the service charge,\n`total_money` __does not__ equal `applied_money` plus `total_tax_money`\nsince the inclusive tax amount will already be included in both\n`applied_money` and `total_tax_money`.",
          "x-read-only": true
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of tax money to collect for the service charge.",
          "x-read-only": true
        },
        "calculation_phase": {
          "type": "string",
          "description": "The calculation phase at which to apply the service charge.\nSee [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase) for possible values"
        },
        "taxable": {
          "type": "boolean",
          "description": "Indicates whether the service charge can be taxed. If set to `true`,\norder-level taxes automatically apply to the service charge. Note that\nservice charges calculated in the `TOTAL_PHASE` cannot be marked as taxable."
        },
        "applied_taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineItemAppliedTax"
          },
          "description": "The list of references to taxes applied to this service charge. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level\n`OrderLineItemTax` that is being applied to this service charge. On reads, the amount applied\nis populated.\n\nAn `OrderLineItemAppliedTax` will be automatically created on every taxable service charge\nfor all `ORDER` scoped taxes that are added to the order. `OrderLineItemAppliedTax` records\nfor `LINE_ITEM` scoped taxes must be added in requests for the tax to apply to any taxable\nservice charge.  Taxable service charges have the `taxable` field set to true and calculated\nin the `SUBTOTAL_PHASE`.\n\nTo change the amount of a tax, modify the referenced top-level tax.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-defined data attached to this service charge. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a \u0027:\u0027 character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "Represents a service charge applied to an order.",
      "x-release-status": "PUBLIC"
    },
    "OrderSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name used to identify the place (physical or digital) that an order originates.\nIf unset, the name defaults to the name of the application that created the order."
        }
      },
      "description": "Represents the origination details of an order.",
      "x-release-status": "PUBLIC"
    },
    "OrderUpdated": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "string",
          "description": "The order\u0027s unique ID."
        },
        "version": {
          "type": "integer",
          "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/docs/orders-api/manage-orders#update-orders)"
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the merchant location this order is associated with."
        },
        "state": {
          "type": "string",
          "description": "The state of the order.\nSee [OrderState](#type-orderstate) for possible values"
        },
        "created_at": {
          "type": "string",
          "description": "Timestamp for when the order was created in RFC 3339 format."
        },
        "updated_at": {
          "type": "string",
          "description": "Timestamp for when the order was last updated in RFC 3339 format."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "OrderUpdatedObject": {
      "type": "object",
      "properties": {
        "order_updated": {
          "$ref": "#/definitions/OrderUpdated",
          "description": "Information about the updated order."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "PayOrderRequest": {
      "type": "object",
      "required": [
        "idempotency_key"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 192,
          "type": "string",
          "description": "A value you specify that uniquely identifies this request among requests you\u0027ve sent. If\nyou\u0027re unsure whether a particular payment request was completed successfully, you can reattempt\nit with the same idempotency key without worrying about duplicate payments.\n\nSee [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency) for more information."
        },
        "order_version": {
          "type": "integer",
          "description": "The version of the order being paid. If not supplied, the latest version will be paid."
        },
        "payment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the `payments` to collect.\nThe payment total must match the order total."
        }
      },
      "description": "Defines the fields that are included in requests to the\n[PayOrder](#endpoint-payorder) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "idempotency_key": "c043a359-7ad9-4136-82a9-c3f1d66dcbff",
          "payment_ids": [
            "EnZdNAlWCmfh6Mt5FMNST1o7taB",
            "0LRiVlbXVwe8ozu4KbZxd12mvaB"
          ]
        }
      }
    },
    "PayOrderResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The paid, updated `order`."
        }
      },
      "description": "Defines the fields that are included in the response body of a request to the\n[PayOrder](#endpoint-payorder) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "order": {
          "id": "lgwOlEityYPJtcuvKTVKT1pA986YY",
          "location_id": "P3CCK6HSNDAS7",
          "line_items": [
            {
              "uid": "QW6kofLHJK7JEKMjlSVP5C",
              "quantity": "1",
              "name": "Item 1",
              "base_price_money": {
                "amount": 500,
                "currency": "USD"
              },
              "gross_sales_money": {
                "amount": 500,
                "currency": "USD"
              },
              "total_tax_money": {
                "amount": 0,
                "currency": "USD"
              },
              "total_discount_money": {
                "amount": 0,
                "currency": "USD"
              },
              "total_money": {
                "amount": 500,
                "currency": "USD"
              }
            },
            {
              "uid": "zhw8MNfRGdFQMI2WE1UBJD",
              "quantity": "2",
              "name": "Item 2",
              "base_price_money": {
                "amount": 750,
                "currency": "USD"
              },
              "gross_sales_money": {
                "amount": 1500,
                "currency": "USD"
              },
              "total_tax_money": {
                "amount": 0,
                "currency": "USD"
              },
              "total_discount_money": {
                "amount": 0,
                "currency": "USD"
              },
              "total_money": {
                "amount": 1500,
                "currency": "USD"
              }
            }
          ],
          "created_at": "2019-08-06T02:47:35.693Z",
          "updated_at": "2019-08-06T02:47:37.140Z",
          "version": 4,
          "total_tax_money": {
            "amount": 0,
            "currency": "USD"
          },
          "total_discount_money": {
            "amount": 0,
            "currency": "USD"
          },
          "total_money": {
            "amount": 2000,
            "currency": "USD"
          },
          "closed_at": "2019-08-06T02:47:37.140Z",
          "tenders": [
            {
              "id": "EnZdNAlWCmfh6Mt5FMNST1o7taB",
              "location_id": "P3CCK6HSNDAS7",
              "transaction_id": "lgwOlEityYPJtcuvKTVKT1pA986YY",
              "created_at": "2019-08-06T02:47:36.293Z",
              "amount_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "type": "CARD",
              "card_details": {
                "status": "CAPTURED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111",
                  "exp_month": 2,
                  "exp_year": 2022,
                  "fingerprint": "sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ"
                },
                "entry_method": "KEYED"
              },
              "payment_id": "EnZdNAlWCmfh6Mt5FMNST1o7taB"
            },
            {
              "id": "0LRiVlbXVwe8ozu4KbZxd12mvaB",
              "location_id": "P3CCK6HSNDAS7",
              "transaction_id": "lgwOlEityYPJtcuvKTVKT1pA986YY",
              "created_at": "2019-08-06T02:47:36.809Z",
              "amount_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "type": "CARD",
              "card_details": {
                "status": "CAPTURED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111",
                  "exp_month": 2,
                  "exp_year": 2022,
                  "fingerprint": "sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ"
                },
                "entry_method": "KEYED"
              },
              "payment_id": "0LRiVlbXVwe8ozu4KbZxd12mvaB"
            }
          ],
          "total_service_charge_money": {
            "amount": 0,
            "currency": "USD"
          },
          "net_amounts": {
            "total_money": {
              "amount": 2000,
              "currency": "USD"
            },
            "tax_money": {
              "amount": 0,
              "currency": "USD"
            },
            "discount_money": {
              "amount": 0,
              "currency": "USD"
            },
            "tip_money": {
              "amount": 0,
              "currency": "USD"
            },
            "service_charge_money": {
              "amount": 0,
              "currency": "USD"
            }
          },
          "source": {
            "name": "Source Name"
          },
          "state": "COMPLETED"
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 192,
          "type": "string",
          "description": "Unique ID for the payment."
        },
        "created_at": {
          "maxLength": 32,
          "type": "string",
          "description": "Timestamp of when the payment was created, in RFC 3339 format."
        },
        "updated_at": {
          "maxLength": 32,
          "type": "string",
          "description": "Timestamp of when the payment was last updated, in RFC 3339 format."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money processed for this payment, not including `tip_money`.\nSpecified in the smallest denomination of the applicable currency. For example,\nUS dollar amounts are specified in cents. For more information, see\n[Working with monetary amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)."
        },
        "tip_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount designated as a tip. Specified in the\nsmallest denomination of the applicable currency. For example, US dollar\namounts are specified in cents."
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total money for the payment, including `amount_money` and `tip_money`.\nSpecified in the smallest denomination of the applicable currency.\nFor example, US dollar amounts are specified in cents."
        },
        "app_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money the developer is taking as a fee\nfor facilitating the payment on behalf of the seller. Specified in the\nsmallest denomination of the applicable currency. For example, US dollar\namounts are specified in cents.\n\nFor more information, see\n[Take Payments and Collect Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).\n\nCannot be more than 90% of the `total_money` value."
        },
        "processing_fee": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessingFee"
          },
          "description": "Processing fees and fee adjustments assessed by Square on this payment."
        },
        "refunded_money": {
          "$ref": "#/definitions/Money",
          "description": "Total amount of the payment refunded to-date. Specified\nin the smallest denomination of the applicable currency. For example, US\ndollar amounts are specified in cents."
        },
        "status": {
          "maxLength": 50,
          "type": "string",
          "description": "Indicates whether the payment is `APPROVED`, `COMPLETED`, `CANCELED`, or `FAILED`."
        },
        "delay_duration": {
          "type": "string",
          "description": "The duration of time after the payment\u0027s creation when Square automatically applies the\n`delay_action` to the payment. This automatic `delay_action` applies only to payments that\ndon\u0027t reach a terminal state (COMPLETED, CANCELED, or FAILED) before the `delay_duration`\ntime period.\n\nThis field is specified as a time duration, in RFC 3339 format.\n\nNotes:\nThis feature is only supported for card payments.\n\nDefault:\n\n- Card Present payments: \"PT36H\" (36 hours) from the creation time.\n- Card Not Present payments: \"P7D\" (7 days) from the creation time.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "delay_action": {
          "type": "string",
          "description": "The action to be applied to the payment when the `delay_duration` has elapsed. This field\nis read only.\n\nCurrent values include:\n`CANCEL`",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "delayed_until": {
          "type": "string",
          "description": "Read only timestamp of when the `delay_action` will automatically be applied,\nin RFC 3339 format.\n\nNote that this field is calculated by summing the payment\u0027s `delay_duration` and `created_at`\nfields. The `created_at` field is generated by Square and may not exactly match the\ntime on your local machine.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "source_type": {
          "maxLength": 50,
          "type": "string",
          "description": "The source type for this payment\n\nCurrent values include: `CARD`."
        },
        "card_details": {
          "$ref": "#/definitions/CardPaymentDetails",
          "description": "Non-confidential details about the source. Only populated if the\n`source_type` is `CARD`."
        },
        "location_id": {
          "maxLength": 50,
          "type": "string",
          "description": "ID of the location associated with the payment."
        },
        "order_id": {
          "maxLength": 192,
          "type": "string",
          "description": "ID of the order associated with this payment."
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "An optional ID that associates this payment with an entity in\nanother system."
        },
        "customer_id": {
          "maxLength": 191,
          "type": "string",
          "description": "The `Customer` ID of the customer associated with the payment."
        },
        "employee_id": {
          "maxLength": 192,
          "type": "string",
          "description": "An optional ID of the employee associated with taking this payment."
        },
        "refund_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of `refund_id`s identifying refunds for this payment."
        },
        "buyer_email_address": {
          "maxLength": 255,
          "type": "string",
          "description": "The buyer\u0027s e-mail address"
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s billing address"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer\u0027s shipping address"
        },
        "note": {
          "maxLength": 500,
          "type": "string",
          "description": "An optional note to include when creating a payment"
        },
        "statement_description_identifier": {
          "type": "string",
          "description": "Additional payment information that gets added on the customer\u0027s card statement\nas part of the statement description.\n\nNote that the `statement_description_identifier` may get truncated on the statement description\nto fit the required information including the Square identifier (SQ *) and name of the\nmerchant taking the payment.",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "receipt_number": {
          "maxLength": 4,
          "type": "string",
          "description": "The payment\u0027s receipt number.\nThe field will be missing if a payment is CANCELED"
        },
        "receipt_url": {
          "maxLength": 255,
          "type": "string",
          "description": "The URL for the payment\u0027s receipt.\nThe field will only be populated for COMPLETED payments."
        }
      },
      "description": "Represents a payment processed by the Square API.",
      "x-release-status": "PUBLIC"
    },
    "PaymentOptions": {
      "type": "object",
      "properties": {
        "autocomplete": {
          "type": "boolean",
          "description": "Indicates whether the Payment objects created from this `TerminalCheckout` will automatically be\nCOMPLETED or left in an APPROVED state for later modification."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "PaymentRefund": {
      "type": "object",
      "required": [
        "id",
        "amount_money"
      ],
      "properties": {
        "id": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "Unique ID for this refund, generated by Square."
        },
        "status": {
          "maxLength": 50,
          "type": "string",
          "description": "The refund\u0027s status:\n- `PENDING` - awaiting approval\n- `COMPLETED` - successfully completed\n- `REJECTED` - the refund was rejected\n- `FAILED` - an error occurred"
        },
        "location_id": {
          "maxLength": 50,
          "type": "string",
          "description": "Location ID associated with the payment this refund is attached to."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money refunded, specified in the smallest denomination\nof the applicable currency. For example, US dollar amounts are specified in cents."
        },
        "app_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "Amount of money the app developer contributed to help cover the refunded amount.\nSpecified in the smallest denomination of the applicable currency. For example,\nUS dollar amounts are specified in cents. See\n[Working with monetary amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts) for details."
        },
        "processing_fee": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessingFee"
          },
          "description": "Processing fees and fee adjustments assessed by Square on this refund."
        },
        "payment_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the payment assocated with this refund."
        },
        "order_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the order associated with the refund."
        },
        "reason": {
          "maxLength": 192,
          "type": "string",
          "description": "The reason for the refund."
        },
        "created_at": {
          "maxLength": 32,
          "type": "string",
          "description": "Timestamp of when the refund was created, in RFC 3339 format."
        },
        "updated_at": {
          "maxLength": 32,
          "type": "string",
          "description": "Timestamp of when the refund was last updated, in RFC 3339 format."
        }
      },
      "description": "Represents a refund of a payment made using Square. Contains information on\nthe original payment and the amount of money refunded.",
      "x-release-status": "PUBLIC"
    },
    "ProcessingFee": {
      "type": "object",
      "properties": {
        "effective_at": {
          "type": "string",
          "description": "Timestamp of when the fee takes effect, in RFC 3339 format."
        },
        "type": {
          "type": "string",
          "description": "The type of fee assessed or adjusted. Can be one of: `INITIAL`, `ADJUSTMENT`."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The fee amount assessed or adjusted by Square. May be negative.\n\nPositive values represent funds being assessed, while negative values represent\nfunds being returned."
        }
      },
      "description": "Represents Square processing fee.",
      "x-release-status": "PUBLIC"
    },
    "PublishInvoiceRequest": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "type": "integer",
          "description": "The version of the `Invoice` to publish.\nThis must match the current version of the invoice,\notherwise the request is rejected."
        },
        "idempotency_key": {
          "maxLength": 128,
          "type": "string",
          "description": "A unique string that identifies the `PublishInvoice` request. If you do not \nprovide `idempotency_key` (or provide an empty string as the value), the endpoint \ntreats each request as independent.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
        }
      },
      "description": "Describes a `PublishInvoice` request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "version": 1,
          "idempotency_key": "32da42d0-1997-41b0-826b-f09464fc2c2e"
        }
      }
    },
    "PublishInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/Invoice",
          "description": "The published invoice."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        }
      },
      "description": "Describes a `PublishInvoice` response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "invoice": {
          "id": "gt2zv1z6mnUm1V7KMxxf3w",
          "version": 1,
          "location_id": "ES0RJRZYEC39A",
          "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
          "payment_requests": [
            {
              "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
              "request_method": "EMAIL",
              "request_type": "BALANCE",
              "due_date": "2030-01-24",
              "tipping_enabled": true,
              "reminders": [
                {
                  "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                  "relative_scheduled_days": -1,
                  "message": "Your invoice is due tomorrow",
                  "status": "PENDING"
                }
              ],
              "computed_amount_money": {
                "amount": 10000,
                "currency": "USD"
              },
              "total_completed_amount_money": {
                "amount": 0,
                "currency": "USD"
              }
            }
          ],
          "invoice_number": "inv-100",
          "title": "Event Planning Services",
          "description": "We appreciate your business!",
          "scheduled_at": "2030-01-13T10:00:00Z",
          "status": "SCHEDULED",
          "timezone": "America/Los_Angeles",
          "created_at": "2020-06-18T17:45:13Z",
          "updated_at": "2020-06-18T18:23:11Z",
          "primary_recipient": {
            "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "phone_number": "1-212-555-4240"
          }
        }
      }
    },
    "Range": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string",
          "description": "The lower bound of the number range."
        },
        "max": {
          "type": "string",
          "description": "The upper bound of the number range."
        }
      },
      "description": "The range of a number value between the specified lower and upper bounds.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "RedeemLoyaltyRewardRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "location_id"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "maxLength": 128,
          "type": "string",
          "description": "A unique string that identifies this `RedeemLoyaltyReward` request. \nKeys can be any valid string, but must be unique for every request."
        },
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the `location` where the reward is redeemed."
        }
      },
      "description": "A request to redeem a loyalty reward.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_params": "?reward_id\u003d9f18ac21-233a-31c3-be77-b45840f5a810",
        "request_body": {
          "idempotency_key": "98adc7f7-6963-473b-b29c-f3c9cdd7d994",
          "location_id": "P034NEENMD09F"
        }
      }
    },
    "RedeemLoyaltyRewardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "event": {
          "$ref": "#/definitions/LoyaltyEvent",
          "description": "The `LoyaltyEvent` for redeeming the reward."
        }
      },
      "description": "A response that includes the `LoyaltyEvent` published for redeeming the reward.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "event": {
          "id": "67377a6e-dbdc-369d-aa16-2e7ed422e71f",
          "type": "REDEEM_REWARD",
          "created_at": "2020-05-08T21:56:00Z",
          "redeem_reward": {
            "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
            "reward_id": "9f18ac21-233a-31c3-be77-b45840f5a810"
          },
          "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
          "location_id": "P034NEENMD09F",
          "source": "LOYALTY_API"
        }
      }
    },
    "Refund": {
      "type": "object",
      "required": [
        "id",
        "location_id",
        "transaction_id",
        "tender_id",
        "reason",
        "amount_money",
        "status"
      ],
      "properties": {
        "id": {
          "maxLength": 255,
          "type": "string",
          "description": "The refund\u0027s unique ID."
        },
        "location_id": {
          "maxLength": 50,
          "type": "string",
          "description": "The ID of the refund\u0027s associated location."
        },
        "transaction_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the transaction that the refunded tender is part of."
        },
        "tender_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the refunded tender."
        },
        "created_at": {
          "maxLength": 32,
          "type": "string",
          "description": "The timestamp for when the refund was created, in RFC 3339 format."
        },
        "reason": {
          "maxLength": 192,
          "type": "string",
          "description": "The reason for the refund being issued."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money refunded to the buyer."
        },
        "status": {
          "type": "string",
          "description": "The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,\nor `FAILED`).\nSee [RefundStatus](#type-refundstatus) for possible values"
        },
        "processing_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of Square processing fee money refunded to the *merchant*."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipient"
          },
          "description": "Additional recipients (other than the merchant) receiving a portion of this refund.\nFor example, fees assessed on a refund of a purchase by a third party integration."
        }
      },
      "description": "Represents a refund processed for a Square transaction.",
      "x-release-status": "PUBLIC"
    },
    "RefundPaymentRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "amount_money",
        "payment_id"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "type": "string",
          "description": " A unique string that identifies this RefundPayment request. Key can be any valid string\nbut must be unique for every RefundPayment request.\n\nFor more information, see [Idempotency keys](https://developer.squareup.com/docs/working-with-apis/idempotency)."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to refund.\n\nCannot be more than the `total_money` value of the payment minus the total\namount of all previously completed refunds for this payment.\n\nMust be specified in the smallest denomination of the applicable currency.\nFor example, US dollar amounts are specified in cents. See\n[Working with monetary amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts) for details.\n\nThe currency code must match the currency associated with the business\nthat is charging the card."
        },
        "app_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "Amount of money the developer will contribute to help cover the refunded amount.\nSpecified in the smallest denomination of the applicable currency. For example, US\ndollar amounts are specified in cents.\n\nValue cannot be more than the `amount_money`.\n\nYou can specify this parameter in a refund request only if the\nsame parameter was also included when taking the payment.\nThis is part of the application fee  scenario the API supports.\nFor more information, see\n[Collect Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees)",
          "x-release-status": "BETA",
          "x-is-beta": true
        },
        "payment_id": {
          "minLength": 1,
          "type": "string",
          "description": "Unique ID of the payment being refunded."
        },
        "reason": {
          "maxLength": 192,
          "type": "string",
          "description": "A description of the reason for the refund."
        }
      },
      "description": "Refunds a payment.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "a7e36d40-d24b-11e8-b568-0800200c9a66",
          "payment_id": "UNOE3kv2BZwqHlJ830RCt5YCuaB",
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          }
        }
      }
    },
    "RefundPaymentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "refund": {
          "$ref": "#/definitions/PaymentRefund",
          "description": "The successfully created `PaymentRefund`."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RefundPayment](#endpoint-refunds-refundpayment) endpoint.\n\nNote: if there are errors processing the request, the refund field may not be\npresent, or it may be present in a FAILED state.",
      "x-release-status": "PUBLIC",
      "example": {
        "refund": {
          "id": "UNOE3kv2BZwqHlJ830RCt5YCuaB_xVteEWVFkXDvKN1ddidfJWipt8p9whmElKT5mZtJ7wZ",
          "status": "PENDING",
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          },
          "payment_id": "UNOE3kv2BZwqHlJ830RCt5YCuaB",
          "created_at": "2018-10-17T20:41:55.520Z",
          "updated_at": "2018-10-17T20:41:55.520Z"
        }
      }
    },
    "RegisterDomainRequest": {
      "type": "object",
      "required": [
        "domain_name"
      ],
      "properties": {
        "domain_name": {
          "minLength": 1,
          "maxLength": 255,
          "type": "string",
          "description": "A domain name as described in RFC-1034 that will be registered with ApplePay"
        }
      },
      "description": "Defines the parameters that can be included in the body of\na request to the [RegisterDomain](#endpoint-registerdomain) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "domain_name": "example.com"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.python",
        "csharp": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.csharp",
        "java": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.java",
        "php": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.php",
        "javascript": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.javascript",
        "ruby": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.ruby"
      }
    },
    "RegisterDomainResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "status": {
          "type": "string",
          "description": "Status of the domain registration.\n\nSee `RegisterDomainResponseStatus` for possible values.\nSee [RegisterDomainResponseStatus](#type-registerdomainresponsestatus) for possible values"
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RegisterDomain](#endpoint-registerdomain) endpoint.\n\nEither `errors` or `status` will be present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "status": "VERIFIED"
      }
    },
    "RemoveDisputeEvidenceRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines parameters for a RemoveDisputeEvidence request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "RemoveDisputeEvidenceResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        }
      },
      "description": "Defines fields in a RemoveDisputeEvidence response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {}
    },
    "RemoveGroupFromCustomerRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the fields that are included in the request body of\na request to the [RemoveGroupFromCustomer](#endpoint-removegroupfromcustomer) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "RemoveGroupFromCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RemoveGroupFromCustomer](#endpoint-removegroupfromcustomer)\nendpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {}
    },
    "RenewTokenRequest": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "The token you want to renew."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "request_body": {
          "access_token": "ACCESS_TOKEN"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RenewToken/RenewTokenRequest.python",
        "csharp": "/sdk_samples/RenewToken/RenewTokenRequest.csharp",
        "java": "/sdk_samples/RenewToken/RenewTokenRequest.java",
        "php": "/sdk_samples/RenewToken/RenewTokenRequest.php",
        "javascript": "/sdk_samples/RenewToken/RenewTokenRequest.javascript",
        "ruby": "/sdk_samples/RenewToken/RenewTokenRequest.ruby"
      }
    },
    "RenewTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "The renewed access token.\nThis value might be different from the `access_token` you provided in your request.\nYou provide this token in a header with every request to Connect API endpoints.\nSee [Request and response headers](https://developer.squareup.com/docs/api/connect/v2/#requestandresponseheaders) for the format of this header."
        },
        "token_type": {
          "type": "string",
          "description": "This value is always _bearer_."
        },
        "expires_at": {
          "type": "string",
          "description": "The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format."
        },
        "merchant_id": {
          "type": "string",
          "description": "The ID of the authorizing merchant\u0027s business."
        },
        "subscription_id": {
          "type": "string",
          "description": "__LEGACY FIELD__. The ID of the merchant subscription associated with\nthe authorization. Only present if the merchant signed up for a subscription\nduring authorization.."
        },
        "plan_id": {
          "type": "string",
          "description": "__LEGACY FIELD__. The ID of the subscription plan the merchant signed\nup for. Only present if the merchant signed up for a subscription during\nauthorization."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "access_token": "ACCESS_TOKEN",
        "token_type": "bearer",
        "expires_at": "2006-01-02T15:04:05Z",
        "merchant_id": "MERCHANT_ID"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RenewToken/RenewTokenResponse.python",
        "csharp": "/sdk_samples/RenewToken/RenewTokenResponse.csharp",
        "java": "/sdk_samples/RenewToken/RenewTokenResponse.java",
        "php": "/sdk_samples/RenewToken/RenewTokenResponse.php",
        "javascript": "/sdk_samples/RenewToken/RenewTokenResponse.javascript",
        "ruby": "/sdk_samples/RenewToken/RenewTokenResponse.ruby"
      }
    },
    "RetrieveCashDrawerShiftRequest": {
      "type": "object",
      "required": [
        "location_id"
      ],
      "properties": {
        "location_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the location to retrieve cash drawer shifts from."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "RetrieveCashDrawerShiftResponse": {
      "type": "object",
      "properties": {
        "cash_drawer_shift": {
          "$ref": "#/definitions/CashDrawerShift",
          "description": "The cash drawer shift queried for."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "RetrieveCatalogObjectRequest": {
      "type": "object",
      "properties": {
        "include_related_objects": {
          "type": "boolean",
          "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a CatalogItem,\nits associated CatalogCategory, CatalogTax objects,\nCatalogImages and CatalogModifierLists\nwill be returned in the `related_objects` field of the response. If the `object`\nfield of the response contains a CatalogItemVariation,\nits parent CatalogItem will be returned in the `related_objects` field of\nthe response.\n\nDefault value: `false`"
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?include_related_objects\u003dtrue"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.python",
        "csharp": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.csharp",
        "java": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.java",
        "php": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.php",
        "javascript": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.javascript",
        "ruby": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.ruby"
      }
    },
    "RetrieveCatalogObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on any errors encountered."
        },
        "object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The CatalogObjects returned."
        },
        "related_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of CatalogObjects referenced by the object in the `object` field."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "object": {
          "type": "ITEM",
          "id": "W62UWFY35CWMYGVWK6TWJDNI",
          "updated_at": "2016-11-16T22:25:24.878Z",
          "version": 1479335124878,
          "is_deleted": false,
          "present_at_all_locations": true,
          "item_data": {
            "name": "Tea",
            "description": "Hot Leaf Juice",
            "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "tax_ids": [
              "HURXQOOAIC4IZSI2BEXQRYFY"
            ],
            "variations": [
              {
                "type": "ITEM_VARIATION",
                "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                "updated_at": "2016-11-16T22:25:24.878Z",
                "version": 1479335124878,
                "is_deleted": false,
                "present_at_all_locations": true,
                "item_variation_data": {
                  "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                  "name": "Mug",
                  "ordinal": 0,
                  "pricing_type": "FIXED_PRICING",
                  "price_money": {
                    "amount": 150,
                    "currency": "USD"
                  }
                }
              }
            ]
          }
        },
        "related_objects": [
          {
            "type": "CATEGORY",
            "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          },
          {
            "type": "TAX",
            "id": "HURXQOOAIC4IZSI2BEXQRYFY",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "enabled": true
            }
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.python",
        "csharp": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.csharp",
        "java": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.java",
        "php": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.php",
        "javascript": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.javascript",
        "ruby": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.ruby"
      }
    },
    "RetrieveCustomerGroupRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the fields that can be provided in a request to the\n[RetrieveCustomerGroup](#endpoint-retrievecustomergroup) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "RetrieveCustomerGroupResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "group": {
          "$ref": "#/definitions/CustomerGroup",
          "description": "The retrieved customer group."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RetrieveCustomerGroup](#endpoint-retrievecustomergroup) endpoint.\n\nOne of `errors` or `group` is present in a given response (never both).",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "group": {
          "id": "2TAT3CMH4Q0A9M87XJZED0WMR3",
          "name": "Loyal Customers",
          "created_at": "2020-04-13T21:54:57.863Z",
          "updated_at": "2020-04-13T21:54:58Z"
        }
      }
    },
    "RetrieveCustomerRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the fields that are included in requests to the RetrieveCustomer\nendpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.python",
        "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.csharp",
        "java": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.java",
        "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.php",
        "javascript": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.javascript",
        "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.ruby"
      }
    },
    "RetrieveCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The requested customer."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the RetrieveCustomer endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customer": {
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "created_at": "2016-03-23T20:21:54.859Z",
          "updated_at": "2016-03-23T20:21:54.859Z",
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "a customer",
          "groups": [
            {
              "id": "545AXB44B4XXWMVQ4W8SBT3HHF",
              "name": "Aviation Enthusiasts"
            },
            {
              "id": "1KB9JE5EGJXCW.REACHABLE",
              "name": "Reachable"
            }
          ],
          "group_ids": [
            "545AXB44B4XXWMVQ4W8SBT3HHF"
          ],
          "segment_ids": [
            "1KB9JE5EGJXCW.REACHABLE"
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.python",
        "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.csharp",
        "java": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.java",
        "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.php",
        "javascript": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.javascript",
        "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.ruby"
      }
    },
    "RetrieveCustomerSegmentRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the valid parameters for requests to __RetrieveCustomerSegmentRequest__.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "RetrieveCustomerSegmentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "segment": {
          "$ref": "#/definitions/CustomerSegment",
          "description": "The retrieved customer segment."
        }
      },
      "description": "Defines the fields included in the response body for requests to __RetrieveCustomerSegment__.\n\nOne of `errors` or `segment` is present in a given response (never both).",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "segment": {
          "id": "GMNXRZVEXNQDF.CHURN_RISK",
          "name": "Lapsed",
          "created_at": "2020-01-09T19:33:24.469Z",
          "updated_at": "2020-04-13T23:01:13Z"
        }
      }
    },
    "RetrieveDisputeEvidenceRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines parameters for a RetrieveDisputeEvidence request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "RetrieveDisputeEvidenceResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "evidence": {
          "$ref": "#/definitions/DisputeEvidence",
          "description": "Metadata about the dispute evidence file."
        }
      },
      "description": "Defines fields in a RetrieveDisputeEvidence response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "evidence": {
          "evidence_id": "TOomLInj6iWmP3N8qfCXrB",
          "dispute_id": "bVTprrwk0gygTLZ96VX1oB",
          "evidence_file": {
            "filename": "evidence.tiff",
            "filetype": "image/tiff"
          },
          "uploaded_at": "2018-10-18T16:01:10.000Z"
        }
      }
    },
    "RetrieveDisputeRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines request parameters for the RetrieveDispute endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "RetrieveDisputeResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "dispute": {
          "$ref": "#/definitions/Dispute",
          "description": "Details about the requested `Dispute`."
        }
      },
      "description": "Defines fields in a RetrieveDispute response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "dispute": {
          "dispute_id": "XDgyFu7yo1E2S5lQGGpYn",
          "amount_money": {
            "amount": 2000,
            "currency": "USD"
          },
          "reason": "NO_KNOWLEDGE",
          "state": "LOST",
          "due_at": "2018-11-01T00:00:00.000Z",
          "disputed_payments": [
            {
              "payment_id": "6Ee10wvqhfipStz297mtUhBXvaB"
            }
          ],
          "card_brand": "visa",
          "created_at": "2018-10-18T15:59:13.613Z",
          "updated_at": "2018-10-18T15:59:13.613Z",
          "brand_dispute_id": "100000282394"
        }
      }
    },
    "RetrieveEmployeeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "RetrieveEmployeeResponse": {
      "type": "object",
      "properties": {
        "employee": {
          "$ref": "#/definitions/Employee",
          "description": "The response object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "RetrieveInventoryAdjustmentRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.python",
        "csharp": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.csharp",
        "java": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.java",
        "php": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.php",
        "javascript": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.javascript",
        "ruby": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.ruby"
      }
    },
    "RetrieveInventoryAdjustmentResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "adjustment": {
          "$ref": "#/definitions/InventoryAdjustment",
          "description": "The requested `InventoryAdjustment`."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "adjustment": {
          "id": "UDMOEO78BG6GYWA2XDRYX3KB",
          "reference_id": "4a366069-4096-47a2-99a5-0084ac879509",
          "from_state": "IN_STOCK",
          "to_state": "SOLD",
          "location_id": "C6W5YS5QM06F5",
          "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
          "catalog_object_type": "ITEM_VARIATION",
          "quantity": "7",
          "total_price_money": {
            "amount": 4550,
            "currency": "USD"
          },
          "occurred_at": "2016-11-16T25:44:22.837Z",
          "created_at": "2016-11-17T13:02:15.142Z",
          "source": {
            "product": "SQUARE_POS",
            "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
            "name": "Square Point of Sale 4.37"
          },
          "employee_id": "LRK57NSQ5X7PUD05"
        }
      }
    },
    "RetrieveInventoryChangesRequest": {
      "type": "object",
      "properties": {
        "location_ids": {
          "type": "string",
          "description": "The `Location` IDs to look up as a comma-separated\nlist. An empty list queries all locations."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?location_ids\u003d\u0026cursor\u003d"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.python",
        "csharp": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.csharp",
        "java": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.java",
        "php": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.php",
        "javascript": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.javascript",
        "ruby": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.ruby"
      }
    },
    "RetrieveInventoryChangesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryChange"
          },
          "description": "The set of inventory changes for the requested object and locations."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "changes": [
          {
            "type": "ADJUSTMENT",
            "adjustment": {
              "id": "OJKJIUANKLMLQANZADNPLKAD",
              "reference_id": "d8207693-168f-4b44-a2fd-a7ff533ddd26",
              "from_state": "IN_STOCK",
              "to_state": "SOLD",
              "location_id": "C6W5YS5QM06F5",
              "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
              "catalog_object_type": "ITEM_VARIATION",
              "quantity": "3",
              "total_price_money": {
                "amount": 5000,
                "currency": "USD"
              },
              "occurred_at": "2016-11-16T22:25:24.878Z",
              "created_at": "2016-11-16T22:25:24.878Z",
              "source": {
                "product": "SQUARE_POS",
                "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
                "name": "Square Point of Sale 4.37"
              },
              "employee_id": "AV7YRCGI2H1J5NQ8E1XIZCNA",
              "transaction_id": "5APV6JYK1SNCZD11AND2RX1Z"
            }
          }
        ]
      }
    },
    "RetrieveInventoryCountRequest": {
      "type": "object",
      "properties": {
        "location_ids": {
          "type": "string",
          "description": "The `Location` IDs to look up as a comma-separated\nlist. An empty list queries all locations."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_params": "?location_ids\u003dC6W5YS5QM06F5\u0026cursor\u003d"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.python",
        "csharp": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.csharp",
        "java": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.java",
        "php": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.php",
        "javascript": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.javascript",
        "ruby": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.ruby"
      }
    },
    "RetrieveInventoryCountResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCount"
          },
          "description": "The current calculated inventory counts for the requested object and\nlocations."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "counts": [
          {
            "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
            "catalog_object_type": "ITEM_VARIATION",
            "state": "IN_STOCK",
            "location_id": "C6W5YS5QM06F5",
            "quantity": "22",
            "calculated_at": "2016-11-16T22:28:01.223Z"
          }
        ]
      }
    },
    "RetrieveInventoryPhysicalCountRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.python",
        "csharp": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.csharp",
        "java": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.java",
        "php": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.php",
        "javascript": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.javascript",
        "ruby": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.ruby"
      }
    },
    "RetrieveInventoryPhysicalCountResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "count": {
          "$ref": "#/definitions/InventoryPhysicalCount",
          "description": "The requested `InventoryPhysicalCount`."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "errors": [],
        "count": {
          "id": "ANZADNPLKADOJKJIUANKLMLQ",
          "reference_id": "f857ec37-f9a0-4458-8e23-5b5e0bea4e53",
          "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
          "catalog_object_type": "ITEM_VARIATION",
          "state": "IN_STOCK",
          "location_id": "C6W5YS5QM06F5",
          "quantity": "15",
          "source": {
            "product": "SQUARE_POS",
            "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
            "name": "Square Point of Sale 4.37"
          },
          "employee_id": "LRK57NSQ5X7PUD05",
          "occurred_at": "2016-11-16T22:25:24.878Z",
          "created_at": "2016-11-16T22:25:24.878Z"
        }
      }
    },
    "RetrieveLocationRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines the fields that are included in the request body for\nthe __RetrieveLocation__ endpoint.",
      "x-release-status": "PUBLIC",
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.python",
        "csharp": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.csharp",
        "java": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.java",
        "php": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.php",
        "javascript": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.javascript",
        "ruby": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.ruby"
      }
    },
    "RetrieveLocationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "location": {
          "$ref": "#/definitions/Location",
          "description": "The requested location."
        }
      },
      "description": "Defines the fields that the\n[RetrieveLocation](#endpoint-retrievelocation) endpoint returns\nin a response.",
      "x-release-status": "PUBLIC",
      "example": {
        "location": {
          "id": "18YC4JDH91E1H",
          "name": "Jet Fuel Coffee - Grant Park",
          "address": {
            "address_line_1": "123 Main St",
            "locality": "San Francisco",
            "administrative_district_level_1": "CA",
            "postal_code": "94114",
            "country": "US"
          },
          "timezone": "America/Los_Angeles",
          "capabilities": [
            "CREDIT_CARD_PROCESSING"
          ],
          "status": "ACTIVE",
          "created_at": "2016-09-19T17:33:12Z",
          "merchant_id": "3MYCJG5GVYQ8Q",
          "country": "US",
          "language_code": "en-US",
          "currency": "USD",
          "phone_number": "+1 650-354-7217",
          "business_name": "Jet Fuel Coffee"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.python",
        "csharp": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.csharp",
        "java": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.java",
        "php": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.php",
        "javascript": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.javascript",
        "ruby": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.ruby"
      }
    },
    "RetrieveLoyaltyAccountRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to retrieve a loyalty account.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_params": "?account_id\u003d79b807d2-d786-46a9-933b-918028d7a8c5"
      }
    },
    "RetrieveLoyaltyAccountResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "loyalty_account": {
          "$ref": "#/definitions/LoyaltyAccount",
          "description": "The loyalty account."
        }
      },
      "description": "A response that includes the loyalty account.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "loyalty_account": {
          "id": "79b807d2-d786-46a9-933b-918028d7a8c5",
          "mappings": [
            {
              "id": "66aaab3f-da99-49ed-8b19-b87f851c844f",
              "type": "PHONE",
              "value": "+14155551234",
              "created_at": "2020-05-08T21:44:32Z"
            }
          ],
          "program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
          "balance": 10,
          "lifetime_points": 20,
          "customer_id": "Q8002FAM9V1EZ0ADB2T5609X6NET1H0",
          "created_at": "2020-05-08T21:44:32Z",
          "updated_at": "2020-05-08T21:44:32Z"
        }
      }
    },
    "RetrieveLoyaltyRewardRequest": {
      "type": "object",
      "properties": {},
      "description": "A request to retrieve a loyalty reward.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_params": "?reward_id\u003d9f18ac21-233a-31c3-be77-b45840f5a810"
      }
    },
    "RetrieveLoyaltyRewardResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "reward": {
          "$ref": "#/definitions/LoyaltyReward",
          "description": "The loyalty reward retrieved."
        }
      },
      "description": "A response that includes the loyalty reward.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "reward": {
          "id": "9f18ac21-233a-31c3-be77-b45840f5a810",
          "status": "REDEEMED",
          "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
          "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
          "points": 10,
          "created_at": "2020-05-08T21:55:42Z",
          "updated_at": "2020-05-08T21:56:00Z",
          "redeemed_at": "2020-05-08T21:56:00Z"
        }
      }
    },
    "RetrieveMerchantRequest": {
      "type": "object",
      "properties": {},
      "description": "Request object for the [RetrieveMerchant](#endpoint-retrievemerchant) endpoint.",
      "x-release-status": "PUBLIC"
    },
    "RetrieveMerchantResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "merchant": {
          "$ref": "#/definitions/Merchant",
          "description": "The requested `Merchant` object."
        }
      },
      "description": "The response object returned by the [RetrieveMerchant](#endpoint-retrieveMerchant) endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "merchant": {
          "id": "DM7VKY8Q63GNP",
          "business_name": "Apple A Day",
          "country": "US",
          "language_code": "en-US",
          "currency": "USD",
          "status": "ACTIVE",
          "main_location_id": "9A65CGC72ZQG1"
        }
      }
    },
    "RetrieveSubscriptionRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines parameters in a \n[RetrieveSubscription](#endpoint-subscriptions-retrievesubscription) endpoint request.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "RetrieveSubscriptionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        },
        "subscription": {
          "$ref": "#/definitions/Subscription",
          "description": "The subscription retrieved."
        }
      },
      "description": "Defines the fields that are included in the response from the\n[RetrieveSubscription](#endpoint-subscriptions-retrievesubscription) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "subscription": {
          "id": "8151fc89-da15-4eb9-a685-1a70883cebfc",
          "location_id": "S8GWD5R9QB376",
          "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
          "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
          "start_date": "2020-05-11",
          "charged_through_date": "2020-06-11",
          "status": "ACTIVE",
          "invoice_ids": [
            "grebK0Q_l8H4fqoMMVvt-Q",
            "rcX_i3sNmHTGKhI4W2mceA"
          ],
          "price_override_money": {
            "amount": 1000,
            "currency": "USD"
          },
          "created_at": "2020-08-03T21:53:10Z",
          "paid_until_date": "2020-06-11",
          "timezone": "America/Los_Angeles"
        }
      }
    },
    "RetrieveTeamMemberRequest": {
      "type": "object",
      "properties": {},
      "description": "Represents a retrieve request for a `TeamMember` object.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {}
      }
    },
    "RetrieveTeamMemberResponse": {
      "type": "object",
      "properties": {
        "team_member": {
          "$ref": "#/definitions/TeamMember",
          "description": "The successfully retrieved `TeamMember` object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The errors that occurred during the request."
        }
      },
      "description": "Represents a response from a retrieve request, containing a `TeamMember` object or error messages.",
      "x-release-status": "PUBLIC",
      "example": {
        "team_member": {
          "id": "1yJlHapkseYnNPETIU1B",
          "reference_id": "reference_id_1",
          "is_owner": false,
          "status": "ACTIVE",
          "given_name": "Joe",
          "family_name": "Doe",
          "email_address": "joe_doe@gmail.com",
          "phone_number": "+14159283333",
          "created_at": "2020-06-11T22:55:45.867Z",
          "updated_at": "2020-06-11T22:55:45.867Z",
          "assigned_locations": {
            "assignment_type": "EXPLICIT_LOCATIONS",
            "location_ids": [
              "GA2Y9HSJ8KRYT",
              "YSGH2WBKG94QZ"
            ]
          }
        }
      }
    },
    "RetrieveTransactionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.python",
        "csharp": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.csharp",
        "java": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.java",
        "php": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.php",
        "javascript": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.javascript",
        "ruby": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.ruby"
      }
    },
    "RetrieveTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "transaction": {
          "$ref": "#/definitions/Transaction",
          "description": "The requested transaction."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [RetrieveTransaction](#endpont-retrievetransaction) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {
        "transaction": {
          "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "location_id": "18YC4JDH91E1H",
          "created_at": "2016-03-10T22:57:56Z",
          "tenders": [
            {
              "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
              "location_id": "18YC4JDH91E1H",
              "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "created_at": "2016-03-10T22:57:56Z",
              "note": "some optional note",
              "amount_money": {
                "amount": 5000,
                "currency": "USD"
              },
              "processing_fee_money": {
                "amount": 138,
                "currency": "USD"
              },
              "type": "CARD",
              "card_details": {
                "status": "CAPTURED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111"
                },
                "entry_method": "KEYED"
              },
              "additional_recipients": [
                {
                  "location_id": "057P5VYJ4A5X1",
                  "description": "Application fees",
                  "amount_money": {
                    "amount": 20,
                    "currency": "USD"
                  }
                }
              ]
            }
          ],
          "reference_id": "some optional reference id",
          "product": "EXTERNAL_API"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.python",
        "csharp": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.csharp",
        "java": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.java",
        "php": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.php",
        "javascript": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.javascript",
        "ruby": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.ruby"
      }
    },
    "RetrieveWageSettingRequest": {
      "type": "object",
      "properties": {},
      "description": "Represents a retrieve request for the wage setting of a team member",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {}
      }
    },
    "RetrieveWageSettingResponse": {
      "type": "object",
      "properties": {
        "wage_setting": {
          "$ref": "#/definitions/WageSetting",
          "description": "The successfully retrieved `WageSetting` object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The errors that occurred during the request."
        }
      },
      "description": "Represents a response from a retrieve request, containing the specified `WageSetting` object or error messages.",
      "x-release-status": "PUBLIC",
      "example": {
        "wage_setting": {
          "team_member_id": "1yJlHapkseYnNPETIU1B",
          "job_assignments": [
            {
              "job_title": "Manager",
              "pay_type": "SALARY",
              "hourly_rate": {
                "amount": 2164,
                "currency": "USD"
              },
              "annual_rate": {
                "amount": 4500000,
                "currency": "USD"
              },
              "weekly_hours": 40
            }
          ],
          "is_overtime_exempt": false,
          "version": 1,
          "created_at": "2020-06-11T23:01:21+00:00",
          "updated_at": "2020-06-11T23:01:21+00:00"
        }
      }
    },
    "RevokeTokenRequest": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "The Square issued ID for your application, available from the\n[application dashboard](https://connect.squareup.com/apps)."
        },
        "access_token": {
          "type": "string",
          "description": "The access token of the merchant whose token you want to revoke.\nDo not provide a value for merchant_id if you provide this parameter."
        },
        "merchant_id": {
          "type": "string",
          "description": "The ID of the merchant whose token you want to revoke.\nDo not provide a value for access_token if you provide this parameter."
        },
        "revoke_only_access_token": {
          "type": "boolean",
          "description": "If `true`, terminate the given single access token, but do not\nterminate the entire authorization.\nDefault: `false`"
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "access_token": "ACCESS_TOKEN",
          "client_id": "CLIENT_ID"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RevokeToken/RevokeTokenRequest.python",
        "csharp": "/sdk_samples/RevokeToken/RevokeTokenRequest.csharp",
        "java": "/sdk_samples/RevokeToken/RevokeTokenRequest.java",
        "php": "/sdk_samples/RevokeToken/RevokeTokenRequest.php",
        "javascript": "/sdk_samples/RevokeToken/RevokeTokenRequest.javascript",
        "ruby": "/sdk_samples/RevokeToken/RevokeTokenRequest.ruby"
      }
    },
    "RevokeTokenResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "If the request is successful, this is true."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "success": true
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/RevokeToken/RevokeTokenResponse.python",
        "csharp": "/sdk_samples/RevokeToken/RevokeTokenResponse.csharp",
        "java": "/sdk_samples/RevokeToken/RevokeTokenResponse.java",
        "php": "/sdk_samples/RevokeToken/RevokeTokenResponse.php",
        "javascript": "/sdk_samples/RevokeToken/RevokeTokenResponse.javascript",
        "ruby": "/sdk_samples/RevokeToken/RevokeTokenResponse.ruby"
      }
    },
    "SearchCatalogItemsRequest": {
      "type": "object",
      "properties": {
        "text_filter": {
          "type": "string",
          "description": "The text filter expression to return items or item variations containing specified text in\nthe `name`, `description`, or `abbreviation` attribute value of an item, or in\nthe `name`, `sku`, or `upc` attribute value of an item variation."
        },
        "category_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The category id query expression to return items containing the specified category IDs."
        },
        "stock_levels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The stock-level query expression to return item variations with the specified stock levels.\nSee [SearchCatalogItemsRequestStockLevel](#type-searchcatalogitemsrequeststocklevel) for possible values"
        },
        "enabled_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The enabled-location query expression to return items and item variations having specified enabled locations."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination token, returned in the previous response, used to fetch the next batch of pending results."
        },
        "limit": {
          "maximum": 100,
          "type": "integer",
          "description": "The maximum number of results to return per page. The default value is 100."
        },
        "sort_order": {
          "type": "string",
          "description": "The order to sort the resutls. The default sort order is ascending (`ASC`).\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "product_types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The product types query expression to return items or item variations having the specified product types.\nSee [CatalogItemProductType](#type-catalogitemproducttype) for possible values"
        },
        "custom_attribute_filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeFilter"
          },
          "description": "The customer-attribute filter to return items or item variations matching the specified\ncustom attribute expressions. A maximum number of 10 custom attribute expressions are supported in\na single call to the `SearchCatalogItems` endpoint."
        }
      },
      "description": "Defines the request body for the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "sort_order": "ASC",
          "product_types": [
            "REGULAR"
          ],
          "category_ids": [
            "WINE_CATEGORY_ID"
          ],
          "enabled_location_ids": [
            "ATL_LOCATION_ID"
          ],
          "text_filter": "red",
          "custom_attribute_filters": [
            {
              "custom_attribute_definition_id": "VEGAN_DEFINITION_ID",
              "bool_filter": true
            },
            {
              "custom_attribute_definition_id": "BRAND_DEFINITION_ID",
              "string_filter": "Dark Horse"
            },
            {
              "key": "VINTAGE",
              "number_filter": {
                "min": 2017,
                "max": 2018
              }
            },
            {
              "custom_attribute_definition_id": "VARIETAL_DEFINITION_ID",
              "selection_ids_filter": "MERLOT_SELECTION_ID"
            }
          ],
          "stock_levels": [
            "OUT",
            "LOW"
          ],
          "limit": 100
        }
      }
    },
    "SearchCatalogItemsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Errors detected when the call to `SearchCatalogItems` endpoint fails."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "Returned items matching the specified query expressions."
        },
        "cursor": {
          "type": "string",
          "description": "Pagination token used in the next request to return more of the search result."
        },
        "matched_variation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Ids of returned item variations matching the specified query expression."
        }
      },
      "description": "Defines the response body returned from the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "items": [
          {
            "type": "ITEM",
            "id": "GPOKJPTV2KDLVKCADJ7I77EZ",
            "updated_at": "2020-06-18T17:55:56.646Z",
            "version": 1592502956646,
            "is_deleted": false,
            "present_at_all_locations": true,
            "custom_attribute_values": {
              "VINTAGE": {
                "name": "Vintage",
                "custom_attribute_definition_id": "EI7IJQDUKYSHULREPIPH6HNU",
                "type": "NUMBER",
                "number_value": 2018,
                "key": "VINTAGE"
              },
              "VARIETAL": {
                "name": "Varietal",
                "custom_attribute_definition_id": "VARIETAL_DEFINITION_ID",
                "type": "SELECTION",
                "selection_uid_values": [
                  "MERLOT_SELECTION_ID",
                  null
                ],
                "key": "VARIETAL"
              },
              "BRAND": {
                "name": "Brand",
                "custom_attribute_definition_id": "BRAND_DEFINITION_ID",
                "type": "STRING",
                "string_value": "Dark Horse",
                "key": "BRAND"
              }
            },
            "item_data": {
              "name": "Dark Horse Merlot 2018",
              "product_type": "REGULAR",
              "description": "A nice red wine",
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "VBJNPHCOKDFECR6VU25WRJUD",
                  "updated_at": "2020-06-18T17:55:56.646Z",
                  "version": 1592502956646,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "GPOKJPTV2KDLVKCADJ7I77EZ",
                    "name": "750 mL",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 1000,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          }
        ],
        "matched_variation_ids": [
          "VBJNPHCOKDFECR6VU25WRJUD"
        ]
      }
    },
    "SearchCatalogObjectsRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        "object_types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The desired set of object types to appear in the search results.\nThe legal values are taken from the CatalogObjectType enum: `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`,\n`\"DISCOUNT\"`, `\"TAX\"`, `\"MODIFIER\"`, or `\"MODIFIER_LIST\"`.\nSee [CatalogObjectType](#type-catalogobjecttype) for possible values"
        },
        "include_deleted_objects": {
          "type": "boolean",
          "description": "If `true`, deleted objects will be included in the results. Deleted objects will have their\n`is_deleted` field set to `true`."
        },
        "include_related_objects": {
          "type": "boolean",
          "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf a CatalogItem is returned in the object field of the response,\nits associated CatalogCategory, CatalogTax objects,\nCatalogImage objects and CatalogModifierList objects\nwill be included in the `related_objects` field of the response.\n\nIf a CatalogItemVariation is returned in the object field of the\nresponse, its parent CatalogItem will be included in the `related_objects` field of\nthe response."
        },
        "begin_time": {
          "type": "string",
          "description": "Return objects modified after this [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), in RFC 3339\nformat, e.g., `2016-09-04T23:59:33.123Z`. The timestamp is exclusive - objects with a\ntimestamp equal to `begin_time` will not be included in the response."
        },
        "query": {
          "$ref": "#/definitions/CatalogQuery",
          "description": "A query to be used to filter or sort the results. If no query is specified, the entire catalog will be returned."
        },
        "limit": {
          "type": "integer",
          "description": "A limit on the number of results to be returned in a single page. The limit is advisory -\nthe implementation may return more or fewer results. If the supplied limit is negative, zero, or\nis higher than the maximum limit of 1,000, it will be ignored."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "object_types": [
            "ITEM"
          ],
          "query": {
            "prefix_query": {
              "attribute_name": "name",
              "attribute_prefix": "tea"
            }
          },
          "limit": 100
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.python",
        "csharp": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.csharp",
        "java": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.java",
        "php": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.php",
        "javascript": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.javascript",
        "ruby": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.ruby"
      }
    },
    "SearchCatalogObjectsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on any errors encountered."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "The CatalogObjects returned."
        },
        "related_objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "description": "A list of CatalogObjects referenced by the objects in the `objects` field."
        },
        "latest_time": {
          "type": "string",
          "description": "When the associated product catalog was last updated. Will\nmatch the value for `end_time` or `cursor` if either field is included in the `SearchCatalog` request.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "objects": [
          {
            "type": "ITEM",
            "id": "X5DZ5NWWAQ44CKBLKIFQGOWK",
            "updated_at": "2017-10-26T15:41:32.337Z",
            "version": 1509032492337,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea - Black",
              "description": "A delicious blend of black tea.",
              "category_id": "E7CLE5RZZ744BHWVQQEAHI2C",
              "product_type": "REGULAR",
              "tax_ids": [
                "ZXITPM6RWHZ7GZ7EIP3YKECM"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "5GSZPX6EU7MM75S57OONG3V5",
                  "updated_at": "2017-10-26T15:27:31.626Z",
                  "version": 1509031651626,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "X5DZ5NWWAQ44CKBLKIFQGOWK",
                    "name": "Regular",
                    "ordinal": 1,
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  }
                },
                {
                  "type": "ITEM_VARIATION",
                  "id": "XVLBN7DU6JTWHJTG5F265B43",
                  "updated_at": "2017-10-26T15:27:31.626Z",
                  "version": 1509031651626,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "X5DZ5NWWAQ44CKBLKIFQGOWK",
                    "name": "Large",
                    "ordinal": 2,
                    "price_money": {
                      "amount": 225,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  }
                }
              ],
              "visibility": "PRIVATE"
            }
          },
          {
            "type": "ITEM",
            "id": "NNNEM3LA656Q46NXLWCNI7S5",
            "updated_at": "2017-10-26T15:41:23.232Z",
            "version": 1509032483232,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea - Green",
              "description": "Relaxing green herbal tea.",
              "category_id": "E7CLE5RZZ744BHWVQQEAHI2C",
              "product_type": "REGULAR",
              "tax_ids": [
                "ZXITPM6RWHZ7GZ7EIP3YKECM"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "FHYBVIA6NVBCSOVETA62WEA4",
                  "updated_at": "2017-10-26T15:29:00.524Z",
                  "version": 1509031740524,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "NNNEM3LA656Q46NXLWCNI7S5",
                    "name": "Regular",
                    "ordinal": 1,
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  }
                }
              ],
              "visibility": "PRIVATE"
            }
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.python",
        "csharp": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.csharp",
        "java": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.java",
        "php": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.php",
        "javascript": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.javascript",
        "ruby": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.ruby"
      }
    },
    "SearchCustomersRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "Include the pagination cursor in subsequent calls to this endpoint to retrieve\nthe next set of results associated with the original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "A limit on the number of results to be returned in a single page.\nThe limit is advisory - the implementation may return more or fewer results.\nIf the supplied limit is negative, zero, or is higher than the maximum limit\nof 100, it will be ignored."
        },
        "query": {
          "$ref": "#/definitions/CustomerQuery",
          "description": "Query customers based on the given conditions and sort order.\nCalling SearchCustomers without an explicit query parameter will return\nall customers ordered alphabetically based on `given_name` and\n`family_name`."
        }
      },
      "description": "Defines the fields included in the request body for the\nSearchCustomers endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "query": {
            "filter": {
              "email_address": {
                "fuzzy": "example.com"
              },
              "creation_source": {
                "values": [
                  "THIRD_PARTY"
                ],
                "rule": "INCLUDE"
              },
              "created_at": {
                "start_at": "2018-01-01T00:00:00-00:00",
                "end_at": "2018-02-01T00:00:00-00:00"
              },
              "group_ids": {
                "all": [
                  "545AXB44B4XXWMVQ4W8SBT3HHF"
                ]
              }
            },
            "sort": {
              "field": "CREATED_AT",
              "order": "ASC"
            }
          },
          "limit": 2
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/SearchCustomers/SearchCustomersRequest.python",
        "csharp": "/sdk_samples/SearchCustomers/SearchCustomersRequest.csharp",
        "java": "/sdk_samples/SearchCustomers/SearchCustomersRequest.java",
        "php": "/sdk_samples/SearchCustomers/SearchCustomersRequest.php",
        "javascript": "/sdk_samples/SearchCustomers/SearchCustomersRequest.javascript",
        "ruby": "/sdk_samples/SearchCustomers/SearchCustomersRequest.ruby"
      }
    },
    "SearchCustomersResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          },
          "description": "An array of `Customer` objects that match a query."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor that can be used during subsequent calls\nto SearchCustomers to retrieve the next set of results associated\nwith the original query. Pagination cursors are only present when\na request succeeds and additional results are available.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the SearchCustomers endpoint.\n\nOne of `errors` or `customers` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customers": [
          {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2018-01-23T20:21:54.859Z",
            "updated_at": "2018-04-20T10:02:43.083Z",
            "given_name": "James",
            "family_name": "Bond",
            "email_address": "james.bond@example.com",
            "address": {
              "address_line_1": "505 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4250",
            "reference_id": "YOUR_REFERENCE_ID_2",
            "creation_source": "THIRD_PARTY",
            "groups": [
              {
                "id": "545AXB44B4XXWMVQ4W8SBT3HHF",
                "name": "Aviation Enthusiasts"
              },
              {
                "id": "1KB9JE5EGJXCW.REACHABLE",
                "name": "Reachable"
              }
            ],
            "group_ids": [
              "545AXB44B4XXWMVQ4W8SBT3HHF"
            ],
            "segment_ids": [
              "1KB9JE5EGJXCW.REACHABLE"
            ]
          },
          {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2018-01-30T14:10:54.859Z",
            "updated_at": "2018-03-08T18:25:54.859Z",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "amelia.earhart@example.com",
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4240",
            "reference_id": "YOUR_REFERENCE_ID_1",
            "note": "a customer",
            "creation_source": "THIRD_PARTY",
            "groups": [
              {
                "id": "545AXB44B4XXWMVQ4W8SBT3HHF",
                "name": "Aviation Enthusiasts"
              },
              {
                "id": "1KB9JE5EGJXCW.REACHABLE",
                "name": "Reachable"
              }
            ],
            "group_ids": [
              "545AXB44B4XXWMVQ4W8SBT3HHF"
            ],
            "segment_ids": [
              "1KB9JE5EGJXCW.REACHABLE"
            ]
          }
        ],
        "cursor": "9dpS093Uy12AzeE"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/SearchCustomers/SearchCustomersResponse.python",
        "csharp": "/sdk_samples/SearchCustomers/SearchCustomersResponse.csharp",
        "java": "/sdk_samples/SearchCustomers/SearchCustomersResponse.java",
        "php": "/sdk_samples/SearchCustomers/SearchCustomersResponse.php",
        "javascript": "/sdk_samples/SearchCustomers/SearchCustomersResponse.javascript",
        "ruby": "/sdk_samples/SearchCustomers/SearchCustomersResponse.ruby"
      }
    },
    "SearchInvoicesRequest": {
      "type": "object",
      "required": [
        "query"
      ],
      "properties": {
        "query": {
          "$ref": "#/definitions/InvoiceQuery",
          "description": "Describes the query criteria for searching invoices."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of invoices to return (200 is the maximum `limit`). \nIf not provided, the server \nuses a default limit of 100 invoices."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint. \nProvide this cursor to retrieve the next set of results for your original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        }
      },
      "description": "Describes a `SearchInvoices` request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "query": {
            "filter": {
              "location_ids": [
                "ES0RJRZYEC39A"
              ],
              "customer_ids": [
                "JDKYHBWT1D4F8MFH63DBMEN8Y4"
              ]
            },
            "sort": {
              "field": "INVOICE_SORT_DATE",
              "order": "DESC"
            },
            "limit": 100
          }
        }
      }
    },
    "SearchInvoicesResponse": {
      "type": "object",
      "properties": {
        "invoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Invoice"
          },
          "description": "The list of invoices returned by the search."
        },
        "cursor": {
          "type": "string",
          "description": "When a response is truncated, it includes a cursor that you can use in a \nsubsequent request to fetch the next set of invoices. If empty, this is the final \nresponse. \nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        }
      },
      "description": "Describes a `SearchInvoices` response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "invoices": [
          {
            "invoice": {
              "id": "gt2zv1z6mnUm1V7KMxxf3w",
              "version": 0,
              "location_id": "ES0RJRZYEC39A",
              "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
              "payment_requests": [
                {
                  "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                  "request_method": "EMAIL",
                  "request_type": "BALANCE",
                  "due_date": "2030-01-24",
                  "tipping_enabled": true,
                  "reminders": [
                    {
                      "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                      "relative_scheduled_days": -1,
                      "message": "Your invoice is due tomorrow",
                      "status": "PENDING"
                    }
                  ],
                  "computed_amount_money": {
                    "amount": 10000,
                    "currency": "USD"
                  },
                  "total_completed_amount_money": {
                    "amount": 0,
                    "currency": "USD"
                  }
                }
              ],
              "invoice_number": "inv-100",
              "title": "Event Planning Services",
              "description": "We appreciate your business!",
              "scheduled_at": "2030-01-13T10:00:00Z",
              "status": "DRAFT",
              "timezone": "America/Los_Angeles",
              "created_at": "2020-06-18T17:45:13Z",
              "updated_at": "2020-06-18T17:45:13Z",
              "primary_recipient": {
                "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
                "given_name": "Amelia",
                "family_name": "Earhart",
                "email_address": "Amelia.Earhart@example.com",
                "phone_number": "1-212-555-4240"
              }
            }
          }
        ],
        "cursor": "CURSOR"
      }
    },
    "SearchLoyaltyAccountsRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/SearchLoyaltyAccountsRequestLoyaltyAccountQuery",
          "description": "The search criteria for the request."
        },
        "limit": {
          "maximum": 30,
          "minimum": 1,
          "type": "integer",
          "description": "The maximum number of results to include in the response."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to \nthis endpoint. Provide this to retrieve the next set of \nresults for the original query.\n\nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
        }
      },
      "description": "A request to search for loyalty accounts.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "query": {
            "mappings": [
              {
                "type": "PHONE",
                "value": "+14155551234"
              }
            ]
          },
          "limit": 10
        }
      }
    },
    "SearchLoyaltyAccountsRequestLoyaltyAccountQuery": {
      "type": "object",
      "properties": {
        "mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyAccountMapping"
          },
          "description": "The set of mappings to use in the loyalty account search."
        }
      },
      "description": "The search criteria for the loyalty accounts.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SearchLoyaltyAccountsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "loyalty_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyAccount"
          },
          "description": "The loyalty accounts that met the search criteria,  \nin order of creation date."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to use in a subsequent \nrequest. If empty, this is the final response.\nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
        }
      },
      "description": "A response that includes loyalty accounts that satisfy the search criteria.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "loyalty_accounts": [
          {
            "id": "79b807d2-d786-46a9-933b-918028d7a8c5",
            "mappings": [
              {
                "id": "66aaab3f-da99-49ed-8b19-b87f851c844f",
                "type": "PHONE",
                "value": "+14155551234",
                "created_at": "2020-05-08T21:44:32Z"
              }
            ],
            "program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
            "balance": 10,
            "lifetime_points": 20,
            "customer_id": "Q8002FAM9V1EZ0ADB2T5609X6NET1H0",
            "created_at": "2020-05-08T21:44:32Z",
            "updated_at": "2020-05-08T21:44:32Z"
          }
        ]
      }
    },
    "SearchLoyaltyEventsRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/LoyaltyEventQuery",
          "description": "A set of one or more predefined query filters to apply when \nsearching for loyalty events. The endpoint performs a logical AND to \nevaluate multiple filters and performs a logical OR on arrays  \nthat specifies multiple field values."
        },
        "limit": {
          "maximum": 30,
          "minimum": 1,
          "type": "integer",
          "description": "The maximum number of results to include in the response. \nThe last page might contain fewer events. \nThe default is 30 events."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
        }
      },
      "description": "A request to search for loyalty events.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "query": {
            "filter": {
              "order_filter": {
                "order_id": "PyATxhYLfsMqpVkcKJITPydgEYfZY"
              }
            }
          },
          "limit": 30
        }
      }
    },
    "SearchLoyaltyEventsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyEvent"
          },
          "description": "The loyalty events that satisfy the search criteria."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent \nrequest. If empty, this is the final response. \nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
        }
      },
      "description": "A response that contains loyalty events that satisfy the search \ncriteria, in order by the `created_at` date.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "events": [
          {
            "id": "c27c8465-806e-36f2-b4b3-71f5887b5ba8",
            "type": "ACCUMULATE_POINTS",
            "created_at": "2020-05-08T22:01:30Z",
            "accumulate_points": {
              "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
              "points": 5,
              "order_id": "PyATxhYLfsMqpVkcKJITPydgEYfZY"
            },
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "location_id": "P034NEENMD09F",
            "source": "LOYALTY_API"
          },
          {
            "id": "e4a5cbc3-a4d0-3779-98e9-e578885d9430",
            "type": "REDEEM_REWARD",
            "created_at": "2020-05-08T22:01:15Z",
            "redeem_reward": {
              "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
              "reward_id": "d03f79f4-815f-3500-b851-cc1e68a457f9",
              "order_id": "PyATxhYLfsMqpVkcKJITPydgEYfZY"
            },
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "location_id": "P034NEENMD09F",
            "source": "LOYALTY_API"
          },
          {
            "id": "5e127479-0b03-3671-ab1e-15faea8b7188",
            "type": "CREATE_REWARD",
            "created_at": "2020-05-08T22:00:44Z",
            "create_reward": {
              "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
              "reward_id": "d03f79f4-815f-3500-b851-cc1e68a457f9",
              "points": -10
            },
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "source": "LOYALTY_API"
          }
        ]
      }
    },
    "SearchLoyaltyRewardsRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/SearchLoyaltyRewardsRequestLoyaltyRewardQuery",
          "description": "The search criteria for the request. \nIf empty, the endpoint retrieves all loyalty rewards in the loyalty program."
        },
        "limit": {
          "maximum": 30,
          "minimum": 1,
          "type": "integer",
          "description": "The maximum number of results to return in the response."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to \nthis endpoint. Provide this to retrieve the next set of \nresults for the original query.\nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
        }
      },
      "description": "A request to search for loyalty rewards.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "query": {
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd"
          },
          "limit": 10
        }
      }
    },
    "SearchLoyaltyRewardsRequestLoyaltyRewardQuery": {
      "type": "object",
      "required": [
        "loyalty_account_id"
      ],
      "properties": {
        "loyalty_account_id": {
          "type": "string",
          "description": "The ID of the `loyalty account` to which the loyalty reward belongs."
        },
        "status": {
          "type": "string",
          "description": "The status of the loyalty reward.\nSee [LoyaltyRewardStatus](#type-loyaltyrewardstatus) for possible values"
        }
      },
      "description": "The set of search requirements.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SearchLoyaltyRewardsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyReward"
          },
          "description": "The loyalty rewards that satisfy the search criteria.\nThese are returned in descending order by `updated_at`."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent \nrequest. If empty, this is the final response."
        }
      },
      "description": "A response that includes the loyalty rewards satisfying the search criteria.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "rewards": [
          {
            "id": "d03f79f4-815f-3500-b851-cc1e68a457f9",
            "status": "REDEEMED",
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
            "points": 10,
            "order_id": "PyATxhYLfsMqpVkcKJITPydgEYfZY",
            "created_at": "2020-05-08T22:00:44Z",
            "updated_at": "2020-05-08T22:01:17Z",
            "redeemed_at": "2020-05-08T22:01:17Z"
          },
          {
            "id": "9f18ac21-233a-31c3-be77-b45840f5a810",
            "status": "REDEEMED",
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
            "points": 10,
            "created_at": "2020-05-08T21:55:42Z",
            "updated_at": "2020-05-08T21:56:00Z",
            "redeemed_at": "2020-05-08T21:56:00Z"
          },
          {
            "id": "a8f43ebe-2ad6-3001-bdd5-7d7c2da08943",
            "status": "DELETED",
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
            "points": 10,
            "order_id": "5NB69ZNh3FbsOs1ox43bh1xrli6YY",
            "created_at": "2020-05-01T21:49:54Z",
            "updated_at": "2020-05-08T21:55:10Z"
          },
          {
            "id": "a051254c-f840-3b45-8cf1-50bcd38ff92a",
            "status": "ISSUED",
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
            "points": 10,
            "order_id": "LQQ16znvi2VIUKPVhUfJefzr1eEZY",
            "created_at": "2020-05-01T20:20:37Z",
            "updated_at": "2020-05-01T20:20:40Z"
          }
        ]
      }
    },
    "SearchOrdersCustomerFilter": {
      "type": "object",
      "properties": {
        "customer_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of customer IDs to filter by.\n\nMax: 10 customer IDs."
        }
      },
      "description": "Filter based on Order `customer_id` and any Tender `customer_id`\nassociated with the Order. Does not filter based on the\n[FulfillmentRecipient](#type-orderfulfillmentrecipient) `customer_id`.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SearchOrdersDateTimeFilter": {
      "type": "object",
      "properties": {
        "created_at": {
          "$ref": "#/definitions/TimeRange",
          "description": "Time range for filtering on the `created_at` timestamp. If you use this\nvalue, you must also set the `sort_field` in the OrdersSearchSort object to\n`CREATED_AT`."
        },
        "updated_at": {
          "$ref": "#/definitions/TimeRange",
          "description": "Time range for filtering on the `updated_at` timestamp. If you use this\nvalue, you must also set the `sort_field` in the OrdersSearchSort object to\n`UPDATED_AT`."
        },
        "closed_at": {
          "$ref": "#/definitions/TimeRange",
          "description": "Time range for filtering on the `closed_at` timestamp. If you use this\nvalue, you must also set the `sort_field` in the OrdersSearchSort object to\n`CLOSED_AT`."
        }
      },
      "description": "Filter for `Order` objects based on whether their `CREATED_AT`,\n`CLOSED_AT` or `UPDATED_AT` timestamps fall within a specified time range.\nYou can specify the time range and which timestamp to filter for. You can filter\nfor only one time range at a time.\n\nFor each time range, the start time and end time are inclusive. If the end time\nis absent, it defaults to the time of the first request for the cursor.\n\n__Important:__ If you use the DateTimeFilter in a SearchOrders query,\nyou must also set the `sort_field` in [OrdersSort](#type-searchorderordersort)\nto the same field you filter for. For example, if you set the `CLOSED_AT` field\nin DateTimeFilter, you must also set the `sort_field` in SearchOrdersSort to\n`CLOSED_AT`. Otherwise, SearchOrders will throw an error.\n[Learn more about filtering orders by time range](/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range).",
      "x-release-status": "PUBLIC"
    },
    "SearchOrdersFilter": {
      "type": "object",
      "properties": {
        "state_filter": {
          "$ref": "#/definitions/SearchOrdersStateFilter",
          "description": "Filter by ``OrderState``."
        },
        "date_time_filter": {
          "$ref": "#/definitions/SearchOrdersDateTimeFilter",
          "description": "Filter for results within a time range.\n\n__Important:__ If you filter for orders by time range, you must set SearchOrdersSort\nto sort by the same field.\n[Learn more about filtering orders by time range](https://developer.squareup.com/docs/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range)"
        },
        "fulfillment_filter": {
          "$ref": "#/definitions/SearchOrdersFulfillmentFilter",
          "description": "Filter by fulfillment type or state."
        },
        "source_filter": {
          "$ref": "#/definitions/SearchOrdersSourceFilter",
          "description": "Filter by source of order."
        },
        "customer_filter": {
          "$ref": "#/definitions/SearchOrdersCustomerFilter",
          "description": "Filter by customers associated with the order.",
          "x-release-status": "BETA",
          "x-is-beta": true
        }
      },
      "description": "Filtering criteria to use for a SearchOrders request. Multiple filters\nwill be ANDed together.",
      "x-release-status": "PUBLIC"
    },
    "SearchOrdersFulfillmentFilter": {
      "type": "object",
      "properties": {
        "fulfillment_types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of `fulfillment types` to filter\nfor. Will return orders if any of its fulfillments match any of the fulfillment types\nlisted in this field.\nSee [OrderFulfillmentType](#type-orderfulfillmenttype) for possible values"
        },
        "fulfillment_states": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of `fulfillment states` to filter\nfor. Will return orders if any of its fulfillments match any of the\nfulfillment states listed in this field.\nSee [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values"
        }
      },
      "description": "Filter based on [Order Fulfillment](#type-orderfulfillment) information.",
      "x-release-status": "PUBLIC"
    },
    "SearchOrdersQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/SearchOrdersFilter",
          "description": "Criteria to filter results by."
        },
        "sort": {
          "$ref": "#/definitions/SearchOrdersSort",
          "description": "Criteria to sort results by."
        }
      },
      "description": "Contains query criteria for the search.",
      "x-release-status": "PUBLIC"
    },
    "SearchOrdersRequest": {
      "type": "object",
      "properties": {
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The location IDs for the orders to query. All locations must belong to\nthe same merchant.\n\nMin: 1 location IDs.\n\nMax: 10 location IDs."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        "query": {
          "$ref": "#/definitions/SearchOrdersQuery",
          "description": "Query conditions used to filter or sort the results. Note that when\nfetching additional pages using a cursor, the query must be equal to the\nquery used to fetch the first page of results."
        },
        "limit": {
          "minimum": 1,
          "type": "integer",
          "description": "Maximum number of results to be returned in a single page. It is\npossible to receive fewer results than the specified limit on a given page.\n\nDefault: `500`"
        },
        "return_entries": {
          "type": "boolean",
          "description": "Boolean that controls the format of the search results. If `true`,\nSearchOrders will return ``OrderEntry`` objects. If `false`, SearchOrders\nwill return complete Order objects.\n\nDefault: `false`."
        }
      },
      "description": "The request does not have any required fields. When given no query criteria,\nSearchOrders will return all results for all of the merchant’s locations. When fetching additional\npages using a `cursor`, the `query` must be equal to the `query` used to fetch the first page of\nresults.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "return_entries": true,
          "limit": 3,
          "location_ids": [
            "057P5VYJ4A5X1",
            "18YC4JDH91E1H"
          ],
          "query": {
            "filter": {
              "date_time_filter": {
                "closed_at": {
                  "start_at": "2018-03-03T20:00:00+00:00",
                  "end_at": "2019-03-04T21:54:45+00:00"
                }
              },
              "state_filter": {
                "states": [
                  "COMPLETED"
                ]
              }
            },
            "sort": {
              "sort_field": "CLOSED_AT",
              "sort_order": "DESC"
            }
          }
        }
      }
    },
    "SearchOrdersResponse": {
      "type": "object",
      "properties": {
        "order_entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEntry"
          },
          "description": "List of `OrderEntries` that fit the query\nconditions. Populated only if `return_entries` was set to `true` in the request."
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "description": "List of\n`Order` objects that match query conditions. Populated only if\n`return_entries` in the request is set to `false`."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "`Errors` encountered during the search."
        }
      },
      "description": "Only one of `order_entries` or `orders` fields will be set, depending on whether\n`return_entries` was set on the [SearchOrdersRequest](#type-searchorderrequest).",
      "x-release-status": "PUBLIC",
      "example": {
        "order_entries": [
          {
            "order_id": "CAISEM82RcpmcFBM0TfOyiHV3es",
            "location_id": "057P5VYJ4A5X1",
            "version": 1
          },
          {
            "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
            "location_id": "18YC4JDH91E1H"
          },
          {
            "order_id": "CAISEM52YcpmcWAzERDOyiWS3ty",
            "location_id": "057P5VYJ4A5X1"
          }
        ],
        "cursor": "123"
      }
    },
    "SearchOrdersSort": {
      "type": "object",
      "required": [
        "sort_field"
      ],
      "properties": {
        "sort_field": {
          "type": "string",
          "description": "The field to sort by.\n\n__Important:__ When using a `DateTimeFilter`,\n`sort_field` must match the timestamp field that the DateTimeFilter uses to\nfilter. For example, If you set your `sort_field` to `CLOSED_AT` and you use a\nDateTimeFilter, your DateTimeFilter must filter for orders by their `CLOSED_AT` date.\nIf this field does not match the timestamp field in `DateTimeFilter`,\nSearchOrders will return an error.\n\nDefault: `CREATED_AT`.\nSee [SearchOrdersSortField](#type-searchorderssortfield) for possible values"
        },
        "sort_order": {
          "type": "string",
          "description": "The chronological order in which results are returned. Defaults to `DESC`.\nSee [SortOrder](#type-sortorder) for possible values"
        }
      },
      "description": "Sorting criteria for a SearchOrders request. Results can only be sorted\nby a timestamp field.",
      "x-release-status": "PUBLIC"
    },
    "SearchOrdersSourceFilter": {
      "type": "object",
      "properties": {
        "source_names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filters by `Source` `name`. Will return any orders\nwith with a `source.name` that matches any of the listed source names.\n\nMax: 10 source names."
        }
      },
      "description": "Filter based on order `source` information.",
      "x-release-status": "PUBLIC"
    },
    "SearchOrdersStateFilter": {
      "type": "object",
      "required": [
        "states"
      ],
      "properties": {
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "States to filter for.\nSee [OrderState](#type-orderstate) for possible values"
        }
      },
      "description": "Filter by current Order `state`.",
      "x-release-status": "PUBLIC"
    },
    "SearchShiftsRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/ShiftQuery",
          "description": "Query filters."
        },
        "limit": {
          "maximum": 200,
          "minimum": 1,
          "type": "integer",
          "description": "number of resources in a page (200 by default)."
        },
        "cursor": {
          "type": "string",
          "description": "opaque cursor for fetching the next page."
        }
      },
      "description": "A request for a filtered and sorted set of `Shift` objects.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "query": {
            "filter": {
              "workday": {
                "date_range": {
                  "start_date": "2019-01-20",
                  "end_date": "2019-02-03"
                },
                "match_shifts_by": "START_AT",
                "default_timezone": "America/Los_Angeles"
              }
            }
          },
          "limit": 100
        }
      }
    },
    "SearchShiftsResponse": {
      "type": "object",
      "properties": {
        "shifts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shift"
          },
          "description": "Shifts"
        },
        "cursor": {
          "type": "string",
          "description": "Opaque cursor for fetching the next page."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request for `Shift` objects. Contains\nthe requested `Shift` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "shifts": [
          {
            "id": "X714F3HA6D1PT",
            "employee_id": "ormj0jJJZ5OZIzxrZYJI",
            "location_id": "PAA1RJZZKXBFG",
            "timezone": "America/New_York",
            "start_at": "2019-01-21T03:11:00-05:00",
            "end_at": "2019-01-21T13:11:00-05:00",
            "wage": {
              "title": "Barista",
              "hourly_rate": {
                "amount": 1100,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "id": "SJW7X6AKEJQ65",
                "start_at": "2019-01-21T06:11:00-05:00",
                "end_at": "2019-01-21T06:11:00-05:00",
                "break_type_id": "REGS1EQR1TPZ5",
                "name": "Tea Break",
                "expected_duration": "PT10M",
                "is_paid": true
              }
            ],
            "status": "CLOSED",
            "version": 6,
            "created_at": "2019-01-24T01:12:03Z",
            "updated_at": "2019-02-07T22:21:08Z"
          },
          {
            "id": "GDHYBZYWK0P2V",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "location_id": "PAA1RJZZKXBFG",
            "timezone": "America/New_York",
            "start_at": "2019-01-22T12:02:00-05:00",
            "end_at": "2019-01-22T13:02:00-05:00",
            "wage": {
              "title": "Cook",
              "hourly_rate": {
                "amount": 1600,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "id": "BKS6VR7WR748A",
                "start_at": "2019-01-23T14:30:00-05:00",
                "end_at": "2019-01-23T14:40:00-05:00",
                "break_type_id": "WQX00VR99F53J",
                "name": "Tea Break",
                "expected_duration": "PT10M",
                "is_paid": true
              },
              {
                "id": "BQFEZSHFZSC51",
                "start_at": "2019-01-22T12:30:00-05:00",
                "end_at": "2019-01-22T12:44:00-05:00",
                "break_type_id": "P6Q468ZFRN1AC",
                "name": "Coffee Break",
                "expected_duration": "PT15M",
                "is_paid": false
              }
            ],
            "status": "CLOSED",
            "version": 16,
            "created_at": "2019-01-23T23:32:45Z",
            "updated_at": "2019-01-24T00:56:25Z"
          }
        ]
      }
    },
    "SearchSubscriptionsFilter": {
      "type": "object",
      "properties": {
        "customer_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A filter to select subscriptions based on the customer."
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A filter to select subscriptions based the location."
        }
      },
      "description": "Represents a set of SearchSubscriptionsQuery filters used to limit the set of Subscriptions returned by SearchSubscriptions.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SearchSubscriptionsQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/SearchSubscriptionsFilter",
          "description": "A list of filtering criteria."
        }
      },
      "description": "Represents a query (including filtering criteria) used to search for subscriptions.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SearchSubscriptionsRequest": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        },
        "limit": {
          "minimum": 1,
          "type": "integer",
          "description": "The upper limit on the number of subscriptions to return \nin the response. \n\nDefault: `200`"
        },
        "query": {
          "$ref": "#/definitions/SearchSubscriptionsQuery",
          "description": "Query subscriptions based on the given conditions and sort order.\nCalling SearchSubscriptions without an explicit query parameter will return all subscriptions."
        }
      },
      "description": "Defines parameters in a\n[SearchSubscriptions](#endpoint-subscriptions-searchsubscriptions) endpoint \nrequest.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "query": {
            "filter": {
              "location_ids": [
                "S8GWD5R9QB376"
              ],
              "customer_ids": [
                "CHFGVKYY8RSV93M5KCYTG4PN0G"
              ]
            }
          }
        }
      }
    },
    "SearchSubscriptionsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subscription"
          },
          "description": "The search result."
        },
        "cursor": {
          "type": "string",
          "description": "When a response is truncated, it includes a cursor that you can \nuse in a subsequent request to fetch the next set of subscriptions. \nIf empty, this is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
        }
      },
      "description": "Defines the fields that are included in the response from the\n[SearchSubscriptions](#endpoint-subscriptions-searchsubscriptions) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "subscriptions": [
          {
            "id": "de86fc96-8664-474b-af1a-abbe59cacf0e",
            "location_id": "S8GWD5R9QB376",
            "plan_id": "L3TJVDHVBEQEGQDEZL2JJM7R",
            "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
            "start_date": "2020-04-14",
            "canceled_date": "2020-04-14",
            "charged_through_date": "2020-05-14",
            "status": "CANCELED",
            "created_at": "2020-08-03T21:53:10Z",
            "card_id": "ccof:mueUsvgajChmjEbp4GB",
            "paid_until_date": "2020-05-14",
            "timezone": "UTC"
          },
          {
            "id": "56214fb2-cc85-47a1-93bc-44f3766bb56f",
            "location_id": "S8GWD5R9QB376",
            "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
            "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
            "start_date": "2020-08-01",
            "status": "PENDING",
            "tax_percentage": "5",
            "price_override_money": {
              "amount": 100,
              "currency": "USD"
            },
            "version": 1594155459464,
            "created_at": "2020-08-03T21:53:10Z",
            "timezone": "America/Los_Angeles"
          },
          {
            "id": "8151fc89-da15-4eb9-a685-1a70883cebfc",
            "location_id": "S8GWD5R9QB376",
            "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
            "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
            "start_date": "2020-05-11",
            "charged_through_date": "2020-06-11",
            "status": "ACTIVE",
            "invoice_ids": [
              "grebK0Q_l8H4fqoMMVvt-Q",
              "rcX_i3sNmHTGKhI4W2mceA"
            ],
            "price_override_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "created_at": "2020-08-03T21:53:10Z",
            "paid_until_date": "2020-06-11",
            "timezone": "America/Los_Angeles"
          }
        ]
      }
    },
    "SearchTeamMembersFilter": {
      "type": "object",
      "properties": {
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When present, filter by team members assigned to the specified locations.\nWhen empty, include team members assigned to any location."
        },
        "status": {
          "type": "string",
          "description": "When present, filter by team members who match the given status.\nWhen empty, include team members of all statuses.\nSee [TeamMemberStatus](#type-teammemberstatus) for possible values"
        }
      },
      "description": "Represents a filter used in a search for `TeamMember` objects. `AND` logic is applied\nbetween the individual fields, and `OR` logic is applied within list-based fields.\nFor example, setting this filter value,\n```\nfilter \u003d (locations_ids \u003d [\"A\", \"B\"], status \u003d ACTIVE)\n```\nreturns only active team members assigned to either location \"A\" or \"B\".",
      "x-release-status": "PUBLIC"
    },
    "SearchTeamMembersQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/SearchTeamMembersFilter",
          "description": "The options to filter by."
        }
      },
      "description": "Represents the parameters in a search for `TeamMember` objects.",
      "x-release-status": "PUBLIC"
    },
    "SearchTeamMembersRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/SearchTeamMembersQuery",
          "description": "The query parameters."
        },
        "limit": {
          "maximum": 25,
          "minimum": 1,
          "type": "integer",
          "description": "The maximum number of `TeamMember` objects in a page (25 by default)."
        },
        "cursor": {
          "type": "string",
          "description": "The opaque cursor for fetching the next page. Read about\n[pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) with Square APIs for more information."
        }
      },
      "description": "Represents a search request for a filtered list of `TeamMember` objects.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "query": {
            "filter": {
              "location_ids": [
                "0G5P3VGACMMQZ"
              ],
              "status": "ACTIVE"
            }
          },
          "limit": 10
        }
      }
    },
    "SearchTeamMembersResponse": {
      "type": "object",
      "properties": {
        "team_members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamMember"
          },
          "description": "The filtered list of `TeamMember` objects."
        },
        "cursor": {
          "type": "string",
          "description": "The opaque cursor for fetching the next page. Read about\n[pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) with Square APIs for more information."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The errors that occurred during the request."
        }
      },
      "description": "Represents a response from a search request, containing a filtered list of `TeamMember` objects.",
      "x-release-status": "PUBLIC",
      "example": {
        "team_members": [
          {
            "id": "-3oZQKPKVk6gUXU_V5Qa",
            "reference_id": "12345678",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Johnny",
            "family_name": "Cash",
            "email_address": "johnny_cash@squareup.com",
            "created_at": "2019-07-10T17:26:48Z",
            "updated_at": "2020-04-28T21:49:28.957Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          },
          {
            "id": "1AVJj0DjkzbmbJw5r4KK",
            "reference_id": "abcded",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Lombard",
            "family_name": "Smith",
            "phone_number": "+14155552671",
            "created_at": "2020-03-24T18:14:01.127Z",
            "updated_at": "2020-06-09T17:38:05.423Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          },
          {
            "id": "2JCmiJol_KKFs9z2Evim",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Monica",
            "family_name": "Sway",
            "created_at": "2020-03-24T01:09:25.010Z",
            "updated_at": "2020-03-24T01:09:25.010Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          },
          {
            "id": "4uXcJQSLtbk3F0UQHFNQ",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Elton",
            "family_name": "Ipsum",
            "created_at": "2020-03-24T01:09:23.464Z",
            "updated_at": "2020-03-24T01:09:23.464Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          },
          {
            "id": "5CoUpyrw1YwGWcRd-eDL",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Steven",
            "family_name": "Lo",
            "created_at": "2020-03-24T01:09:23.074Z",
            "updated_at": "2020-03-24T01:09:23.074Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          },
          {
            "id": "5MRPTTp8MMBLVSmzrGha",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Patrick",
            "family_name": "Steward",
            "email_address": "patrick_steward@gmail.com",
            "phone_number": "+14155552671",
            "created_at": "2020-03-24T18:14:03.865Z",
            "updated_at": "2020-03-24T18:14:03.865Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          },
          {
            "id": "7F5ZxsfRnkexhu1PTbfh",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Ivy",
            "family_name": "Manny",
            "created_at": "2020-03-24T01:09:25.180Z",
            "updated_at": "2020-03-24T01:09:25.180Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          },
          {
            "id": "808X9HR72yKvVaigQXf4",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "John",
            "family_name": "Smith",
            "email_address": "john_smith@gmail.com",
            "phone_number": "+14155552671",
            "created_at": "2020-03-24T18:14:02.797Z",
            "updated_at": "2020-03-24T18:14:02.797Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          },
          {
            "id": "9MVDVoY4hazkWKGo_OuZ",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Robert",
            "family_name": "Wen",
            "email_address": "r_wen@gmail.com",
            "phone_number": "+14155552671",
            "created_at": "2020-03-24T18:14:00.399Z",
            "updated_at": "2020-03-24T18:14:00.399Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          },
          {
            "id": "9UglUjOXQ13-hMFypCft",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Ashley",
            "family_name": "Simpson",
            "email_address": "asimpson@gmail.com",
            "phone_number": "+14155552671",
            "created_at": "2020-03-24T18:14:00.445Z",
            "updated_at": "2020-03-24T18:14:00.445Z",
            "assigned_locations": {
              "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
            }
          }
        ],
        "cursor": "N:9UglUjOXQ13-hMFypCft"
      }
    },
    "SearchTerminalCheckoutsRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/TerminalCheckoutQuery",
          "description": "Query the terminal checkouts based on given conditions and sort order. Calling\nSearchTerminalCheckouts without an explicitly query parameter will return all available\ncheckouts with the default sort order."
        },
        "cursor": {
          "type": "string",
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query."
        },
        "limit": {
          "type": "integer",
          "description": "Limit the number of results returned for a single request."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "limit": 2,
          "query": {
            "filter": {
              "status": "COMPLETED"
            }
          }
        }
      }
    },
    "SearchTerminalCheckoutsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "checkouts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TerminalCheckout"
          },
          "description": "The requested search result of `TerminalCheckout`s."
        },
        "cursor": {
          "type": "string",
          "description": "The pagination cursor to be used in a subsequent request. If empty,\nthis is the final response.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "checkouts": [
          {
            "id": "tsQPvzwBpMqqO",
            "amount_money": {
              "amount": 2610,
              "currency": "USD"
            },
            "reference_id": "id14467",
            "note": "A brief note",
            "device_options": {
              "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
              "tip_settings": {
                "allow_tipping": false
              },
              "skip_receipt_screen": false
            },
            "status": "COMPLETED",
            "payment_ids": [
              "rXnhZzywrEk4vR6pw76fPZfgvaB"
            ],
            "created_at": "2020-03-31T18:13:15.921Z",
            "updated_at": "2020-03-31T18:13:52.725Z",
            "app_id": "APP_ID",
            "deadline_duration": "PT10M"
          },
          {
            "id": "XlOPTgcEhrbqO",
            "amount_money": {
              "amount": 2610,
              "currency": "USD"
            },
            "reference_id": "id41623",
            "note": "A brief note",
            "device_options": {
              "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
              "tip_settings": {
                "allow_tipping": false
              },
              "skip_receipt_screen": true
            },
            "status": "COMPLETED",
            "payment_ids": [
              "VYBF861PaoKPP7Pih0TlbZiNvaB"
            ],
            "created_at": "2020-03-31T18:08:31.882Z",
            "updated_at": "2020-03-31T18:08:41.635Z",
            "app_id": "APP_ID",
            "deadline_duration": "PT10M"
          }
        ],
        "cursor": "RiTJqBoTuXlbLmmrPvEkX9iG7XnQ4W4RjGnH"
      }
    },
    "Shift": {
      "type": "object",
      "required": [
        "employee_id",
        "start_at"
      ],
      "properties": {
        "id": {
          "maxLength": 255,
          "type": "string",
          "description": "UUID for this object"
        },
        "employee_id": {
          "minLength": 1,
          "type": "string",
          "description": "The ID of the employee this shift belongs to."
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the location this shift occurred at. Should be based on\nwhere the employee clocked in."
        },
        "timezone": {
          "type": "string",
          "description": "Read-only convenience value that is calculated from the location based\non `location_id`. Format: the IANA Timezone Database identifier for the\nlocation timezone."
        },
        "start_at": {
          "minLength": 1,
          "type": "string",
          "description": "RFC 3339; shifted to location timezone + offset. Precision up to the\nminute is respected; seconds are truncated."
        },
        "end_at": {
          "type": "string",
          "description": "RFC 3339; shifted to timezone + offset. Precision up to the minute is\nrespected; seconds are truncated. The `end_at` minute is not\ncounted when the shift length is calculated. For example, a shift from `00:00`\nto `08:01` is considered an 8 hour shift (midnight to 8am)."
        },
        "wage": {
          "$ref": "#/definitions/ShiftWage",
          "description": "Job and pay related information. If wage is not set on create, will default to a wage\nof zero money. If title is not set on create, will default to the name of the role the employee\nis assigned to, if any."
        },
        "breaks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Break"
          },
          "description": "A list of any paid or unpaid breaks that were taken during this shift."
        },
        "status": {
          "type": "string",
          "description": "Describes working state of the current `Shift`.\nSee [ShiftStatus](#type-shiftstatus) for possible values"
        },
        "version": {
          "type": "integer",
          "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If not provided,\nSquare executes a blind write; potentially overwriting data from another\nwrite."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format; presented in UTC."
        },
        "updated_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format; presented in UTC."
        }
      },
      "description": "A record of the hourly rate, start, and end times for a single work shift\nfor an employee. May include a record of the start and end times for breaks\ntaken during the shift.",
      "x-release-status": "PUBLIC"
    },
    "ShiftFilter": {
      "type": "object",
      "properties": {
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Fetch shifts for the specified location."
        },
        "employee_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Fetch shifts for the specified employee."
        },
        "status": {
          "type": "string",
          "description": "Fetch a `Shift` instance by `Shift.status`.\nSee [ShiftFilterStatus](#type-shiftfilterstatus) for possible values"
        },
        "start": {
          "$ref": "#/definitions/TimeRange",
          "description": "Fetch `Shift`s that start in the time range - Inclusive."
        },
        "end": {
          "$ref": "#/definitions/TimeRange",
          "description": "Fetch the `Shift`s that end in the time range - Inclusive."
        },
        "workday": {
          "$ref": "#/definitions/ShiftWorkday",
          "description": "Fetch the `Shift`s based on workday date range."
        }
      },
      "description": "Defines a filter used in a search for `Shift` records. `AND` logic is\nused by Square\u0027s servers to apply each filter property specified.",
      "x-release-status": "PUBLIC"
    },
    "ShiftQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/ShiftFilter",
          "description": "Query filter options"
        },
        "sort": {
          "$ref": "#/definitions/ShiftSort",
          "description": "Sort order details"
        }
      },
      "description": "The parameters of a `Shift` search query. Includes filter and sort options.",
      "x-release-status": "PUBLIC"
    },
    "ShiftSort": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field to sort on.\nSee [ShiftSortField](#type-shiftsortfield) for possible values"
        },
        "order": {
          "type": "string",
          "description": "The order in which results are returned. Defaults to DESC.\nSee [SortOrder](#type-sortorder) for possible values"
        }
      },
      "description": "Sets the sort order of search results.",
      "x-release-status": "PUBLIC"
    },
    "ShiftWage": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The name of the job performed during this shift. Square\nlabor-reporting UIs may group shifts together by title."
        },
        "hourly_rate": {
          "$ref": "#/definitions/Money",
          "description": "Can be a custom-set hourly wage or the calculated effective hourly\nwage based on annual wage and hours worked per week."
        }
      },
      "description": "The hourly wage rate used to compensate an employee for this shift.",
      "x-release-status": "PUBLIC"
    },
    "ShiftWorkday": {
      "type": "object",
      "properties": {
        "date_range": {
          "$ref": "#/definitions/DateRange",
          "description": "Dates for fetching the shifts"
        },
        "match_shifts_by": {
          "type": "string",
          "description": "The strategy on which the dates are applied.\nSee [ShiftWorkdayMatcher](#type-shiftworkdaymatcher) for possible values"
        },
        "default_timezone": {
          "type": "string",
          "description": "Location-specific timezones convert workdays to datetime filters.\nEvery location included in the query must have a timezone, or this field\nmust be provided as a fallback. Format: the IANA timezone database\nidentifier for the relevant timezone."
        }
      },
      "description": "A `Shift` search query filter parameter that sets a range of days that \na `Shift` must start or end in before passing the filter condition.",
      "x-release-status": "PUBLIC"
    },
    "SourceApplication": {
      "type": "object",
      "properties": {
        "product": {
          "type": "string",
          "description": "Read-only `Product` type for the application.\nSee [Product](#type-product) for possible values"
        },
        "application_id": {
          "type": "string",
          "description": "Read-only Square ID assigned to the application. Only used for\n`Product` type `EXTERNAL_API`."
        },
        "name": {
          "type": "string",
          "description": "Read-only display name assigned to the application\n(e.g. `\"Custom Application\"`, `\"Square POS 4.74 for Android\"`)."
        }
      },
      "description": "Provides information about the application used to generate a change.",
      "x-release-status": "PUBLIC"
    },
    "StandardUnitDescription": {
      "type": "object",
      "properties": {
        "unit": {
          "$ref": "#/definitions/MeasurementUnit",
          "description": "Identifies the measurement unit being described."
        },
        "name": {
          "type": "string",
          "description": "UI display name of the measurement unit. For example, \u0027Pound\u0027."
        },
        "abbreviation": {
          "type": "string",
          "description": "UI display abbreviation for the measurement unit. For example, \u0027lb\u0027."
        }
      },
      "description": "Contains the name and abbreviation for standard measurement unit.",
      "x-release-status": "PUBLIC"
    },
    "StandardUnitDescriptionGroup": {
      "type": "object",
      "properties": {
        "standard_unit_descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandardUnitDescription"
          },
          "description": "List of standard (non-custom) measurement units in this description group."
        },
        "language_code": {
          "type": "string",
          "description": "IETF language tag."
        }
      },
      "description": "Group of standard measurement units.",
      "x-release-status": "PUBLIC"
    },
    "SubmitEvidenceRequest": {
      "type": "object",
      "properties": {},
      "description": "Defines parameters for a SubmitEvidence request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {}
      }
    },
    "SubmitEvidenceResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "dispute": {
          "$ref": "#/definitions/Dispute",
          "description": "The `Dispute` for which evidence was submitted."
        }
      },
      "description": "Defines fields in a SubmitEvidence response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "dispute": {
          "dispute_id": "EAZoK70gX3fyvibecLwIGB",
          "amount_money": {
            "amount": 2000,
            "currency": "USD"
          },
          "reason": "NO_KNOWLEDGE",
          "state": "PROCESSING",
          "due_at": "2018-11-01T00:00:00.000Z",
          "disputed_payments": [
            {
              "payment_id": "2yeBUWJzllJTpmnSqtMRAL19taB"
            }
          ],
          "evidence_ids": [
            "CKWRhnZN0eMSUbh38BKmD"
          ],
          "card_brand": "visa",
          "created_at": "2018-10-18T16:02:15.313Z",
          "updated_at": "2018-10-18T16:02:15.313Z",
          "brand_dispute_id": "100000399240"
        }
      }
    },
    "Subscription": {
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 255,
          "type": "string",
          "description": "The Square-assigned ID of the subscription.",
          "x-read-only": true
        },
        "location_id": {
          "type": "string",
          "description": "The ID of the location associated with the subscription.",
          "x-read-only": true
        },
        "plan_id": {
          "type": "string",
          "description": "The ID of the associated `subscription plan`.",
          "x-read-only": true
        },
        "customer_id": {
          "type": "string",
          "description": "The ID of the associated `customer` profile.",
          "x-read-only": true
        },
        "start_date": {
          "type": "string",
          "description": "The start date of the subscription, in YYYY-MM-DD format (for example,\n2013-01-15).",
          "x-read-only": true
        },
        "canceled_date": {
          "type": "string",
          "description": "The subscription cancellation date, in YYYY-MM-DD format (for\nexample, 2013-01-15). On this date, the subscription status changes \nto `CANCELED` and the subscription billing stops. \nIf you don\u0027t set this field, the subscription plan dictates if and \nwhen subscription ends. \n\nYou cannot update this field, you can only clear it."
        },
        "status": {
          "type": "string",
          "description": "The current status of the subscription.\nSee [SubscriptionStatus](#type-subscriptionstatus) for possible values",
          "x-read-only": true
        },
        "tax_percentage": {
          "type": "string",
          "description": "The tax amount applied when billing the subscription. The\npercentage is expressed in decimal form, using a `\u0027.\u0027` as the decimal\nseparator and without a `\u0027%\u0027` sign. For example, a value of `7.5`\ncorresponds to 7.5%."
        },
        "invoice_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the `invoices` created for the \nsubscription, listed in order when the invoices were created \n(oldest invoices appear first).",
          "x-read-only": true
        },
        "price_override_money": {
          "$ref": "#/definitions/Money",
          "description": "A custom price to apply for the subscription. If specified, \nit overrides the price configured by the subscription plan."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the object. When updating an object, the version\nsupplied must match the version in the database, otherwise the write will\nbe rejected as conflicting.",
          "x-read-only": true
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp when the subscription was created, in RFC 3339 format.",
          "x-read-only": true
        },
        "card_id": {
          "type": "string",
          "description": "The ID of the `customer](#type-customer) [card`\nthat is charged for the subscription."
        },
        "paid_until_date": {
          "type": "string",
          "description": "The date up to which the customer is invoiced for the\nsubscription, in YYYY-MM-DD format (for example, 2013-01-15).\n\nAfter the invoice is paid for a given billing period,\nthis date will be the last day of the billing period.\nFor example,\nsuppose for the month of May a customer gets an invoice\n(or charged the card) on May 1. For the monthly billing scenario,\nthis date is then set to May 31.",
          "x-read-only": true
        },
        "timezone": {
          "type": "string",
          "description": "Timezone that will be used in date calculations for the subscription.\nDefaults to the timezone of the location based on `location_id`.\nFormat: the IANA Timezone Database identifier for the location timezone (for example, `America/Los_Angeles`).",
          "x-read-only": true
        }
      },
      "description": "Represents a customer subscription to a subscription plan.\nFor an overview of the `Subscription` type, see \n[Subscription object](/docs/subscriptions-api/overview#subscription-object-overview).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SubscriptionEvent": {
      "type": "object",
      "required": [
        "id",
        "subscription_event_type",
        "effective_date",
        "plan_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the subscription event."
        },
        "subscription_event_type": {
          "type": "string",
          "description": "Type of the subscription event.\nSee [SubscriptionEventSubscriptionEventType](#type-subscriptioneventsubscriptioneventtype) for possible values"
        },
        "effective_date": {
          "type": "string",
          "description": "The date, in YYYY-MM-DD format (for\nexample, 2013-01-15), when the subscription event went into effect."
        },
        "plan_id": {
          "type": "string",
          "description": "The ID of the subscription plan associated with the subscription."
        }
      },
      "description": "Describes changes to subscription and billing states.",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "SubscriptionPhase": {
      "type": "object",
      "required": [
        "cadence",
        "recurring_price_money"
      ],
      "properties": {
        "uid": {
          "type": "string",
          "description": "The Square-assigned ID of the subscription phase.",
          "x-read-only": true
        },
        "cadence": {
          "type": "string",
          "description": "The billing cadence of the phase. For example, weekly or monthly.\nSee [SubscriptionCadence](#type-subscriptioncadence) for possible values",
          "x-read-only": true
        },
        "periods": {
          "type": "integer",
          "description": "The number of `cadence`s the phase lasts. If not set, the phase never ends. Only the last phase can be indefinite.",
          "x-read-only": true
        },
        "recurring_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount to bill for each `cadence`."
        },
        "ordinal": {
          "type": "integer",
          "format": "int64",
          "description": "The position this phase appears in the sequence of phases defined for the plan, indexed from 0.",
          "x-read-only": true
        }
      },
      "description": "Describes a phase in a subscription plan. For more information, see\n[Set Up and Manage a Subscription Plan](/docs/subscriptions-api/setup-plan).",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "TeamMember": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID for the team member.",
          "x-read-only": true
        },
        "reference_id": {
          "type": "string",
          "description": "A second ID used to associate the team member with an entity in another system."
        },
        "is_owner": {
          "type": "boolean",
          "description": "Whether the team member is the owner of the Square account.",
          "x-read-only": true
        },
        "status": {
          "type": "string",
          "description": "Describes the status of the team member.\nSee [TeamMemberStatus](#type-teammemberstatus) for possible values"
        },
        "given_name": {
          "type": "string",
          "description": "The given (i.e., first) name associated with the team member."
        },
        "family_name": {
          "type": "string",
          "description": "The family (i.e., last) name associated with the team member."
        },
        "email_address": {
          "type": "string",
          "description": "The email address associated with the team member."
        },
        "phone_number": {
          "type": "string",
          "description": "The team member\u0027s phone number in E.164 format. Examples:\n+14155552671 - the country code is 1 for US\n+551155256325 - the country code is 55 for BR"
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp in RFC 3339 format describing when the team member was created.\nEx: \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\"",
          "x-read-only": true
        },
        "updated_at": {
          "type": "string",
          "description": "The timestamp in RFC 3339 format describing when the team member was last updated.\nEx: \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\"",
          "x-read-only": true
        },
        "assigned_locations": {
          "$ref": "#/definitions/TeamMemberAssignedLocations",
          "description": "Describes the team member\u0027s assigned locations."
        }
      },
      "description": "A record representing an individual team member for a business.",
      "x-release-status": "PUBLIC"
    },
    "TeamMemberAssignedLocations": {
      "type": "object",
      "properties": {
        "assignment_type": {
          "type": "string",
          "description": "The current assignment type of the team member.\nSee [TeamMemberAssignedLocationsAssignmentType](#type-teammemberassignedlocationsassignmenttype) for possible values"
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The locations that the team member is assigned to."
        }
      },
      "description": "An object that represents a team member\u0027s assignment to locations.",
      "x-release-status": "PUBLIC"
    },
    "Tender": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "id": {
          "maxLength": 192,
          "type": "string",
          "description": "The tender\u0027s unique ID."
        },
        "location_id": {
          "maxLength": 50,
          "type": "string",
          "description": "The ID of the transaction\u0027s associated location."
        },
        "transaction_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the tender\u0027s associated transaction."
        },
        "created_at": {
          "maxLength": 32,
          "type": "string",
          "description": "The timestamp for when the tender was created, in RFC 3339 format."
        },
        "note": {
          "maxLength": 500,
          "type": "string",
          "description": "An optional note associated with the tender at the time of payment."
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,\nthe `total_money` of the corresponding `Payment` will be equal to the\n`amount_money` of the tender."
        },
        "tip_money": {
          "$ref": "#/definitions/Money",
          "description": "The tip\u0027s amount of the tender."
        },
        "processing_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of any Square processing fees applied to the tender.\n\nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds."
        },
        "customer_id": {
          "maxLength": 191,
          "type": "string",
          "description": "If the tender is associated with a customer or represents a customer\u0027s card on file,\nthis is the ID of the associated customer."
        },
        "type": {
          "type": "string",
          "description": "The type of tender, such as `CARD` or `CASH`.\nSee [TenderType](#type-tendertype) for possible values"
        },
        "card_details": {
          "$ref": "#/definitions/TenderCardDetails",
          "description": "The details of the card tender.\n\nThis value is present only if the value of `type` is `CARD`."
        },
        "cash_details": {
          "$ref": "#/definitions/TenderCashDetails",
          "description": "The details of the cash tender.\n\nThis value is present only if the value of `type` is `CASH`."
        },
        "additional_recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRecipient"
          },
          "description": "Additional recipients (other than the merchant) receiving a portion of this tender.\nFor example, fees assessed on the purchase by a third party integration."
        },
        "payment_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The ID of the `Payment` that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API."
        }
      },
      "description": "Represents a tender (i.e., a method of payment) used in a Square transaction.",
      "x-release-status": "PUBLIC"
    },
    "TenderCardDetails": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The credit card payment\u0027s current state (such as `AUTHORIZED` or\n`CAPTURED`). See `TenderCardDetailsStatus`\nfor possible values.\nSee [TenderCardDetailsStatus](#type-tendercarddetailsstatus) for possible values"
        },
        "card": {
          "$ref": "#/definitions/Card",
          "description": "The credit card\u0027s non-confidential details."
        },
        "entry_method": {
          "type": "string",
          "description": "The method used to enter the card\u0027s details for the transaction.\nSee [TenderCardDetailsEntryMethod](#type-tendercarddetailsentrymethod) for possible values"
        }
      },
      "description": "Represents additional details of a tender with `type` `CARD` or `SQUARE_GIFT_CARD`",
      "x-release-status": "PUBLIC"
    },
    "TenderCashDetails": {
      "type": "object",
      "properties": {
        "buyer_tendered_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of cash provided by the buyer, before change is given."
        },
        "change_back_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of change returned to the buyer."
        }
      },
      "description": "Represents the details of a tender with `type` `CASH`.",
      "x-release-status": "PUBLIC"
    },
    "TerminalCheckout": {
      "type": "object",
      "required": [
        "amount_money",
        "device_options"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique ID for this `TerminalCheckout`",
          "x-read-only": true
        },
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money (including tax amount) that the Square Terminal device should try to collect."
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "An optional user-defined reference ID which can be used to associate\nthis TerminalCheckout to another entity in an external system. For example, an order\nID generated by a third-party shopping cart. Will also be associated with any payments\nused to complete the checkout."
        },
        "note": {
          "maxLength": 250,
          "type": "string",
          "description": "An optional note to associate with the checkout, as well any payments used to complete the checkout."
        },
        "device_options": {
          "$ref": "#/definitions/DeviceCheckoutOptions",
          "description": "Options to control the display and behavior of the Square Terminal device."
        },
        "deadline_duration": {
          "type": "string",
          "description": "The duration as an RFC 3339 duration, after which the checkout will be automatically canceled.\nTerminalCheckouts that are PENDING will be automatically CANCELED and have a cancellation reason\nof “TIMED\\_OUT”.\n\nDefault: 5 minutes from creation\n\nMaximum: 5 minutes"
        },
        "status": {
          "type": "string",
          "description": "The status of the `TerminalCheckout`.\nOptions: PENDING, IN\\_PROGRESS, CANCELED, COMPLETED",
          "x-read-only": true
        },
        "cancel_reason": {
          "type": "string",
          "description": "Present if the status is CANCELED.\nSee [ActionCancelReason](#type-actioncancelreason) for possible values",
          "x-read-only": true
        },
        "payment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of payments created by this `TerminalCheckout`.",
          "x-read-only": true
        },
        "created_at": {
          "type": "string",
          "description": "The time when the `TerminalCheckout` was created as an RFC 3339 timestamp.",
          "x-read-only": true
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the `TerminalCheckout` was last updated as an RFC 3339 timestamp.",
          "x-read-only": true
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "TerminalCheckoutQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/TerminalCheckoutQueryFilter",
          "description": "Options for filtering returned `TerminalCheckout`s"
        },
        "sort": {
          "$ref": "#/definitions/TerminalCheckoutQuerySort",
          "description": "Option for sorting returned `TerminalCheckout`s"
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "TerminalCheckoutQueryFilter": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "description": "`TerminalCheckout`s associated with a specific device. If no device is specified then all\n`TerminalCheckout`s for the merchant will be displayed."
        },
        "created_at": {
          "$ref": "#/definitions/TimeRange",
          "description": "Time range for the beginning of the reporting period. Inclusive.\nDefault: The current time minus one day."
        },
        "status": {
          "type": "string",
          "description": "Filtered results with the desired status of the `TerminalCheckout`\nOptions: PENDING, IN\\_PROGRESS, CANCELED, COMPLETED"
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "TerminalCheckoutQuerySort": {
      "type": "object",
      "properties": {
        "sort_order": {
          "type": "string",
          "description": "The order in which results are listed.\n- `ASC` - oldest to newest\n- `DESC` - newest to oldest (default)."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "TimeRange": {
      "type": "object",
      "properties": {
        "start_at": {
          "type": "string",
          "description": "A datetime value in RFC-3339 format indicating when the time range\nstarts."
        },
        "end_at": {
          "type": "string",
          "description": "A datetime value in RFC-3339 format indicating when the time range\nends."
        }
      },
      "description": "Represents a generic time range. The start and end values are\nrepresented in RFC-3339 format. Time ranges are customized to be\ninclusive or exclusive based on the needs of a particular endpoint.\nRefer to the relevent endpoint-specific documentation to determine\nhow time ranges are handled.",
      "x-release-status": "PUBLIC"
    },
    "TipSettings": {
      "type": "object",
      "properties": {
        "allow_tipping": {
          "type": "boolean",
          "description": "Indicates whether tipping is enabled for this checkout. Defaults to false."
        },
        "separate_tip_screen": {
          "type": "boolean",
          "description": "Indicates whether tip options should be presented on their own screen before presenting\nthe signature screen during card payment. Defaults to false."
        },
        "custom_tip_field": {
          "type": "boolean",
          "description": "Indicates whether custom tip amounts are allowed during the checkout flow. Defaults to false."
        }
      },
      "description": "",
      "x-release-status": "BETA",
      "x-is-beta": true
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 192,
          "type": "string",
          "description": "The transaction\u0027s unique ID, issued by Square payments servers."
        },
        "location_id": {
          "maxLength": 50,
          "type": "string",
          "description": "The ID of the transaction\u0027s associated location."
        },
        "created_at": {
          "maxLength": 32,
          "type": "string",
          "description": "The timestamp for when the transaction was created, in RFC 3339 format."
        },
        "tenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tender"
          },
          "description": "The tenders used to pay in the transaction."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "description": "Refunds that have been applied to any tender in the transaction."
        },
        "reference_id": {
          "maxLength": 40,
          "type": "string",
          "description": "If the transaction was created with the `Charge`\nendpoint, this value is the same as the value provided for the `reference_id`\nparameter in the request to that endpoint. Otherwise, it is not set."
        },
        "product": {
          "type": "string",
          "description": "The Square product that processed the transaction.\nSee [TransactionProduct](#type-transactionproduct) for possible values"
        },
        "client_id": {
          "maxLength": 192,
          "type": "string",
          "description": "If the transaction was created in the Square Point of Sale app, this value\nis the ID generated for the transaction by Square Point of Sale.\n\nThis ID has no relationship to the transaction\u0027s canonical `id`, which is\ngenerated by Square\u0027s backend servers. This value is generated for bookkeeping\npurposes, in case the transaction cannot immediately be completed (for example,\nif the transaction is processed in offline mode).\n\nIt is not currently possible with the Connect API to perform a transaction\nlookup by this value."
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided in the request, if any."
        },
        "order_id": {
          "maxLength": 192,
          "type": "string",
          "description": "The order_id is an identifier for the order associated with this transaction, if any."
        }
      },
      "description": "Represents a transaction processed with Square, either with the\nConnect API or with Square Point of Sale.\n\nThe `tenders` field of this object lists all methods of payment used to pay in\nthe transaction.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "UpdateBreakTypeRequest": {
      "type": "object",
      "required": [
        "break_type"
      ],
      "properties": {
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The updated `BreakType`."
        }
      },
      "description": "A request to update a `BreakType`",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "break_type": {
            "location_id": "26M7H24AZ9N6R",
            "break_name": "Lunch",
            "expected_duration": "PT50M",
            "is_paid": true,
            "version": 1
          }
        }
      }
    },
    "UpdateBreakTypeResponse": {
      "type": "object",
      "properties": {
        "break_type": {
          "$ref": "#/definitions/BreakType",
          "description": "The response object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "A response to a request to update a `BreakType`. Contains\nthe requested `BreakType` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "break_type": {
          "id": "Q6JSJS6D4DBCH",
          "location_id": "26M7H24AZ9N6R",
          "break_name": "Lunch",
          "expected_duration": "PT50M",
          "is_paid": true,
          "version": 2,
          "created_at": "2018-06-12T20:19:12Z",
          "updated_at": "2019-02-26T23:12:59Z"
        }
      }
    },
    "UpdateCustomerGroupRequest": {
      "type": "object",
      "required": [
        "group"
      ],
      "properties": {
        "group": {
          "$ref": "#/definitions/CustomerGroup",
          "description": "The `CustomerGroup` object including all the updates you want to make."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\n[UpdateCustomerGroup](#endpoint-updatecustomergroup) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "group": {
            "name": "Loyal Customers"
          }
        }
      }
    },
    "UpdateCustomerGroupResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "group": {
          "$ref": "#/definitions/CustomerGroup",
          "description": "The successfully updated customer group."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [UpdateCustomerGroup](#endpoint-updatecustomergroup) endpoint.\n\nOne of `errors` or `group` is present in a given response (never both).",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "group": {
          "id": "2TAT3CMH4Q0A9M87XJZED0WMR3",
          "name": "Loyal Customers",
          "created_at": "2020-04-13T21:54:57.863Z",
          "updated_at": "2020-04-13T21:54:58Z"
        }
      }
    },
    "UpdateCustomerRequest": {
      "type": "object",
      "properties": {
        "given_name": {
          "type": "string",
          "description": "The given (i.e., first) name associated with the customer profile."
        },
        "family_name": {
          "type": "string",
          "description": "The family (i.e., last) name associated with the customer profile."
        },
        "company_name": {
          "type": "string",
          "description": "A business name associated with the customer profile."
        },
        "nickname": {
          "type": "string",
          "description": "A nickname for the customer profile."
        },
        "email_address": {
          "type": "string",
          "description": "The email address associated with the customer profile."
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The physical address associated with the customer profile."
        },
        "phone_number": {
          "type": "string",
          "description": "The 11-digit phone number associated with the customer profile."
        },
        "reference_id": {
          "type": "string",
          "description": "An optional, second ID used to associate the customer profile with an\nentity in another system."
        },
        "note": {
          "type": "string",
          "description": "A custom note associated with the customer profile."
        },
        "birthday": {
          "type": "string",
          "description": "The birthday associated with the customer profile, in RFC-3339 format.\nYear is optional, timezone and times are not allowed.\nFor example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.\n`1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__."
        }
      },
      "description": "Defines the body parameters that can be provided in a request to the\nUpdateCustomer endpoint.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "phone_number": "",
          "email_address": "New.Amelia.Earhart@example.com",
          "note": "updated customer note"
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.python",
        "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.csharp",
        "java": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.java",
        "php": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.php",
        "javascript": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.javascript",
        "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.ruby"
      }
    },
    "UpdateCustomerResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The updated customer."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the UpdateCustomer endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "x-release-status": "PUBLIC",
      "example": {
        "customer": {
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "created_at": "2016-03-23T20:21:54.859Z",
          "updated_at": "2016-03-25T20:21:55Z",
          "given_name": "Amelia",
          "family_name": "Earhart",
          "email_address": "New.Amelia.Earhart@example.com",
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "locality": "New York",
            "administrative_district_level_1": "NY",
            "postal_code": "10003",
            "country": "US"
          },
          "reference_id": "YOUR_REFERENCE_ID",
          "note": "updated customer note",
          "groups": [
            {
              "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
              "name": "Aviation Enthusiasts"
            }
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.python",
        "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.csharp",
        "java": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.java",
        "php": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.php",
        "javascript": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.javascript",
        "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.ruby"
      }
    },
    "UpdateInvoiceRequest": {
      "type": "object",
      "required": [
        "invoice"
      ],
      "properties": {
        "invoice": {
          "$ref": "#/definitions/Invoice",
          "description": "The invoice fields to update. You need to only specify the fields you want to change.\nThe current invoice version must be specified in the version field. For more information,\nsee [Update an invoice](invoices-api/overview#update-an-invoice)."
        },
        "idempotency_key": {
          "maxLength": 128,
          "type": "string",
          "description": "A unique string that identifies the `UpdateInvoice` request. If you do not\nprovide `idempotency_key` (or provide an empty string as the value), the endpoint\ntreats each request as independent.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
        },
        "fields_to_clear": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of fields to clear.\nFor examples, see [Update an invoice](https://developer.squareup.com/docs/docs/invoices-api/overview#update-an-invoice)."
        }
      },
      "description": "Describes a `UpdateInvoice` request.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "idempotency_key": "4ee82288-0910-499e-ab4c-5d0071dad1be",
          "invoice": {
            "payment_requests": [
              {
                "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                "tipping_enabled": false
              }
            ]
          },
          "fields_to_clear": [
            "payments_requests[2da7964f-f3d2-4f43-81e8-5aa220bf3355].reminders"
          ]
        }
      }
    },
    "UpdateInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "$ref": "#/definitions/Invoice",
          "description": "The updated invoice."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        }
      },
      "description": "Describes a `UpdateInvoice` response.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "invoice": {
          "id": "gt2zv1z6mnUm1V7KMxxf3w",
          "version": 2,
          "location_id": "ES0RJRZYEC39A",
          "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
          "payment_requests": [
            {
              "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
              "request_method": "EMAIL",
              "request_type": "BALANCE",
              "due_date": "2030-01-24",
              "tipping_enabled": false,
              "reminders": [
                {
                  "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                  "relative_scheduled_days": -1,
                  "message": "Your invoice is due tomorrow",
                  "status": "PENDING"
                }
              ],
              "computed_amount_money": {
                "amount": 10000,
                "currency": "USD"
              },
              "total_completed_amount_money": {
                "amount": 0,
                "currency": "USD"
              }
            }
          ],
          "invoice_number": "inv-100",
          "title": "Event Planning Services",
          "description": "We appreciate your business!",
          "scheduled_at": "2030-01-13T10:00:00Z",
          "status": "UNPAID",
          "timezone": "America/Los_Angeles",
          "created_at": "2020-06-18T17:45:13Z",
          "updated_at": "2020-06-18T18:23:11Z",
          "primary_recipient": {
            "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "phone_number": "1-212-555-4240"
          },
          "next_payment_amount_money": {
            "amount": 10000,
            "currency": "USD"
          }
        }
      }
    },
    "UpdateItemModifierListsRequest": {
      "type": "object",
      "required": [
        "item_ids"
      ],
      "properties": {
        "item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the catalog items associated with the CatalogModifierList objects being updated."
        },
        "modifier_lists_to_enable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the CatalogModifierList objects to enable for the CatalogItem."
        },
        "modifier_lists_to_disable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the CatalogModifierList objects to disable for the CatalogItem."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "item_ids": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "modifier_lists_to_enable": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "modifier_lists_to_disable": [
            "7WRC16CJZDVLSNDQ35PP6YAD"
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.python",
        "csharp": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.csharp",
        "java": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.java",
        "php": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.php",
        "javascript": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.javascript",
        "ruby": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.ruby"
      }
    },
    "UpdateItemModifierListsResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on any errors encountered."
        },
        "updated_at": {
          "type": "string",
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "updated_at": "2016-11-16T22:25:24.878Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.python",
        "csharp": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.csharp",
        "java": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.java",
        "php": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.php",
        "javascript": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.javascript",
        "ruby": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.ruby"
      }
    },
    "UpdateItemTaxesRequest": {
      "type": "object",
      "required": [
        "item_ids"
      ],
      "properties": {
        "item_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs for the CatalogItems associated with the CatalogTax objects being updated."
        },
        "taxes_to_enable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of the CatalogTax objects to enable."
        },
        "taxes_to_disable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of the CatalogTax objects to disable."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "item_ids": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "taxes_to_enable": [
            "4WRCNHCJZDVLSNDQ35PP6YAD"
          ],
          "taxes_to_disable": [
            "AQCEGCEBBQONINDOHRGZISEX"
          ]
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.python",
        "csharp": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.csharp",
        "java": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.java",
        "php": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.php",
        "javascript": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.javascript",
        "ruby": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.ruby"
      }
    },
    "UpdateItemTaxesResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on any errors encountered."
        },
        "updated_at": {
          "type": "string",
          "description": "The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this update in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "updated_at": "2016-11-16T22:25:24.878Z"
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.python",
        "csharp": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.csharp",
        "java": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.java",
        "php": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.php",
        "javascript": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.javascript",
        "ruby": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.ruby"
      }
    },
    "UpdateLocationRequest": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/Location",
          "description": "The `Location` object with only the fields to update."
        }
      },
      "description": "Request object for the [UpdateLocation](#endpoint-updatelocation) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "location": {
            "name": "Updated nickname",
            "description": "Updated description",
            "twitter_username": "twitter",
            "instagram_username": "instagram",
            "address": {
              "address_line_1": "1234 Peachtree St. NE",
              "administrative_district_level_1": "GA",
              "locality": "Atlanta",
              "postal_code": "30309"
            },
            "business_hours": {
              "periods": [
                {
                  "day_of_week": "MON",
                  "start_local_time": "09:00",
                  "end_local_time": "17:00"
                }
              ]
            }
          }
        }
      }
    },
    "UpdateLocationResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on errors encountered during the request."
        },
        "location": {
          "$ref": "#/definitions/Location",
          "description": "The updated `Location`."
        }
      },
      "description": "Response object returned by the [UpdateLocation](#endpoint-updatelocation) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "location": {
          "id": "LOCATION_ID",
          "name": "Updated nickname",
          "address": {
            "address_line_1": "1234 Peachtree St. NE",
            "locality": "Atlanta",
            "administrative_district_level_1": "GA",
            "postal_code": "30309"
          },
          "timezone": "America/New_York",
          "capabilities": [
            "CREDIT_CARD_PROCESSING"
          ],
          "status": "ACTIVE",
          "created_at": "2019-07-19T17:58:25Z",
          "merchant_id": "MERCHANT_ID",
          "country": "US",
          "language_code": "en-US",
          "currency": "USD",
          "phone_number": "5559211234",
          "business_name": "Business Name",
          "type": "MOBILE",
          "website_url": "examplewebsite.com",
          "business_hours": {
            "periods": [
              {
                "day_of_week": "MON",
                "start_local_time": "09:00",
                "end_local_time": "17:00"
              }
            ]
          },
          "business_email": "example@squareup.com",
          "description": "Updated description",
          "twitter_username": "twitter",
          "instagram_username": "instagram",
          "coordinates": {
            "latitude": 33.788567,
            "longitude": -84.466947
          },
          "mcc": "1234"
        }
      }
    },
    "UpdateOrderRequest": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The [sparse order](https://developer.squareup.com/docs/orders-api/manage-orders#sparse-order-objects)\ncontaining only the fields to update and the version the update is\nbeing applied to."
        },
        "fields_to_clear": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation)\nfields to clear. For example, `line_items[uid].note`\n[Read more about Deleting fields](https://developer.squareup.com/docs/orders-api/manage-orders#delete-fields)."
        },
        "idempotency_key": {
          "maxLength": 192,
          "type": "string",
          "description": "A value you specify that uniquely identifies this update request\n\nIf you\u0027re unsure whether a particular update was applied to an order successfully,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate updates to the order.\nThe latest order version will be returned.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
        }
      },
      "description": "Defines the fields that are included in requests to the\n[UpdateOrder](#endpoint-orders-updateorder) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "idempotency_key": "UNIQUE_STRING",
          "order": {
            "version": 1,
            "line_items": [
              {
                "uid": "cookie_uid",
                "quantity": "2",
                "name": "COOKIE",
                "base_price_money": {
                  "amount": 200,
                  "currency": "USD"
                }
              }
            ]
          },
          "fields_to_clear": [
            "discounts"
          ]
        }
      }
    },
    "UpdateOrderResponse": {
      "type": "object",
      "properties": {
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The updated Order."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [UpdateOrder](#endpoint-orders-updateorder) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "order": {
          "version": 2,
          "total_money": {
            "currency": "USD",
            "amount": 900
          },
          "source": {
            "name": "Cookies"
          },
          "line_items": [
            {
              "total_tax_money": {
                "currency": "USD",
                "amount": 0
              },
              "total_money": {
                "amount": 500,
                "currency": "USD"
              },
              "gross_sales_money": {
                "amount": 500,
                "currency": "USD"
              },
              "base_price_money": {
                "amount": 500,
                "currency": "USD"
              },
              "quantity": "1",
              "total_discount_money": {
                "currency": "USD",
                "amount": 0
              },
              "name": "Small Coffee",
              "uid": "EuYkakhmu3ksHIds5Hiot",
              "variation_total_price_money": {
                "amount": 500,
                "currency": "USD"
              }
            },
            {
              "total_money": {
                "amount": 400,
                "currency": "USD"
              },
              "gross_sales_money": {
                "currency": "USD",
                "amount": 400
              },
              "total_tax_money": {
                "currency": "USD",
                "amount": 0
              },
              "variation_total_price_money": {
                "currency": "USD",
                "amount": 400
              },
              "name": "COOKIE",
              "uid": "cookie_uid",
              "base_price_money": {
                "amount": 200,
                "currency": "USD"
              },
              "quantity": "2",
              "total_discount_money": {
                "amount": 0,
                "currency": "USD"
              }
            }
          ],
          "state": "OPEN",
          "total_service_charge_money": {
            "amount": 0,
            "currency": "USD"
          },
          "id": "DREk7wJcyXNHqULq8JJ2iPAsluJZY",
          "location_id": "MXVQSVNDGN3C8",
          "total_tax_money": {
            "amount": 0,
            "currency": "USD"
          },
          "created_at": "2019-08-23T18:26:18.243Z",
          "total_discount_money": {
            "amount": 0,
            "currency": "USD"
          },
          "net_amounts": {
            "service_charge_money": {
              "currency": "USD",
              "amount": 0
            },
            "total_money": {
              "amount": 900,
              "currency": "USD"
            },
            "discount_money": {
              "currency": "USD",
              "amount": 0
            },
            "tax_money": {
              "currency": "USD",
              "amount": 0
            }
          },
          "updated_at": "2019-08-23T18:33:47.523Z"
        }
      }
    },
    "UpdateShiftRequest": {
      "type": "object",
      "required": [
        "shift"
      ],
      "properties": {
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The updated `Shift` object."
        }
      },
      "description": "A request to update a `Shift` object.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "shift": {
            "employee_id": "ormj0jJJZ5OZIzxrZYJI",
            "location_id": "PAA1RJZZKXBFG",
            "start_at": "2019-01-25T03:11:00-05:00",
            "end_at": "2019-01-25T13:11:00-05:00",
            "wage": {
              "title": "Bartender",
              "hourly_rate": {
                "amount": 1500,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "id": "X7GAQYVVRRG6P",
                "start_at": "2019-01-25T06:11:00-05:00",
                "end_at": "2019-01-25T06:16:00-05:00",
                "break_type_id": "REGS1EQR1TPZ5",
                "name": "Tea Break",
                "expected_duration": "PT5M",
                "is_paid": true
              }
            ],
            "version": 1
          }
        }
      }
    },
    "UpdateShiftResponse": {
      "type": "object",
      "properties": {
        "shift": {
          "$ref": "#/definitions/Shift",
          "description": "The updated `Shift`."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to update a `Shift`. Contains\nthe updated `Shift` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "shift": {
          "id": "K0YH4CV5462JB",
          "employee_id": "ormj0jJJZ5OZIzxrZYJI",
          "location_id": "PAA1RJZZKXBFG",
          "timezone": "America/New_York",
          "start_at": "2019-01-25T03:11:00-05:00",
          "end_at": "2019-01-25T13:11:00-05:00",
          "wage": {
            "title": "Bartender",
            "hourly_rate": {
              "amount": 1500,
              "currency": "USD"
            }
          },
          "breaks": [
            {
              "id": "X7GAQYVVRRG6P",
              "start_at": "2019-01-25T06:11:00-05:00",
              "end_at": "2019-01-25T06:16:00-05:00",
              "break_type_id": "REGS1EQR1TPZ5",
              "name": "Tea Break",
              "expected_duration": "PT5M",
              "is_paid": true
            }
          ],
          "status": "CLOSED",
          "version": 2,
          "created_at": "2019-02-28T00:39:02Z",
          "updated_at": "2019-02-28T00:42:41Z"
        }
      }
    },
    "UpdateSubscriptionRequest": {
      "type": "object",
      "properties": {
        "subscription": {
          "$ref": "#/definitions/Subscription",
          "description": "The subscription object containing the current version, and fields to update.\nUnset fields will be left at their current server values, and JSON `null` values will\nbe treated as a request to clear the relevant data."
        }
      },
      "description": "Defines parameters in a\n[UpdateSubscription](#endpoint-subscriptions-updatesubscription) endpoint \nrequest.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "request_body": {
          "subscription": {
            "version": 1594155459464,
            "price_override_money": {
              "amount": 2000,
              "currency": "USD"
            }
          }
        }
      }
    },
    "UpdateSubscriptionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information about errors encountered during the request."
        },
        "subscription": {
          "$ref": "#/definitions/Subscription",
          "description": "The modified `Subscription` object."
        }
      },
      "description": "Defines the fields that are included in the response from the\n[UpdateSubscription](#endpoint-subscriptions-updatesubscription) endpoint.",
      "x-release-status": "BETA",
      "x-is-beta": true,
      "example": {
        "subscription": {
          "id": "9ba40961-995a-4a3d-8c53-048c40cafc13",
          "location_id": "S8GWD5R9QB376",
          "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
          "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
          "status": "ACTIVE",
          "price_override_money": {
            "amount": 2000,
            "currency": "USD"
          },
          "version": 1594311617331,
          "created_at": "2020-08-03T21:53:10Z",
          "timezone": "America/Los_Angeles"
        }
      }
    },
    "UpdateTeamMemberRequest": {
      "type": "object",
      "properties": {
        "team_member": {
          "$ref": "#/definitions/TeamMember",
          "description": "The data which will be used to update the `TeamMember` object."
        }
      },
      "description": "Represents an update request for a `TeamMember` object.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "team_member": {
            "reference_id": "reference_id_1",
            "status": "ACTIVE",
            "given_name": "Joe",
            "family_name": "Doe",
            "email_address": "joe_doe@gmail.com",
            "phone_number": "+14159283333",
            "assigned_locations": {
              "location_ids": [
                "YSGH2WBKG94QZ",
                "GA2Y9HSJ8KRYT"
              ],
              "assignment_type": "EXPLICIT_LOCATIONS"
            }
          }
        }
      }
    },
    "UpdateTeamMemberResponse": {
      "type": "object",
      "properties": {
        "team_member": {
          "$ref": "#/definitions/TeamMember",
          "description": "The successfully updated `TeamMember` object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The errors that occurred during the request."
        }
      },
      "description": "Represents a response from an update request, containing the updated `TeamMember` object or error messages.",
      "x-release-status": "PUBLIC",
      "example": {
        "team_member": {
          "id": "1yJlHapkseYnNPETIU1B",
          "reference_id": "reference_id_1",
          "is_owner": false,
          "status": "ACTIVE",
          "given_name": "Joe",
          "family_name": "Doe",
          "email_address": "joe_doe@gmail.com",
          "phone_number": "+14159283333",
          "created_at": "2020-06-11T22:55:45.867Z",
          "assigned_locations": {
            "assignment_type": "EXPLICIT_LOCATIONS",
            "location_ids": [
              "GA2Y9HSJ8KRYT",
              "YSGH2WBKG94QZ"
            ]
          }
        }
      }
    },
    "UpdateWageSettingRequest": {
      "type": "object",
      "required": [
        "wage_setting"
      ],
      "properties": {
        "wage_setting": {
          "$ref": "#/definitions/WageSetting",
          "description": "The new `WageSetting` object that will completely replace the existing one."
        }
      },
      "description": "Represents an update request for the `WageSetting` object describing a `TeamMember`.",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "wage_setting": {
            "is_overtime_exempt": true,
            "job_assignments": [
              {
                "job_title": "Manager",
                "pay_type": "SALARY",
                "annual_rate": {
                  "amount": 3000000,
                  "currency": "USD"
                },
                "weekly_hours": 40
              },
              {
                "job_title": "Cashier",
                "pay_type": "HOURLY",
                "hourly_rate": {
                  "amount": 1200,
                  "currency": "USD"
                }
              }
            ]
          }
        }
      }
    },
    "UpdateWageSettingResponse": {
      "type": "object",
      "properties": {
        "wage_setting": {
          "$ref": "#/definitions/WageSetting",
          "description": "The successfully updated `WageSetting` object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "The errors that occurred during the request."
        }
      },
      "description": "Represents a response from an update request, containing the updated `WageSetting` object\nor error messages.",
      "x-release-status": "PUBLIC",
      "example": {
        "wage_setting": {
          "team_member_id": "-3oZQKPKVk6gUXU_V5Qa",
          "job_assignments": [
            {
              "job_title": "Manager",
              "pay_type": "SALARY",
              "hourly_rate": {
                "amount": 1443,
                "currency": "USD"
              },
              "annual_rate": {
                "amount": 3000000,
                "currency": "USD"
              },
              "weekly_hours": 40
            },
            {
              "job_title": "Cashier",
              "pay_type": "HOURLY",
              "hourly_rate": {
                "amount": 1200,
                "currency": "USD"
              }
            }
          ],
          "is_overtime_exempt": true,
          "version": 1,
          "created_at": "2019-07-10T17:26:48+00:00",
          "updated_at": "2020-06-11T23:12:04+00:00"
        }
      }
    },
    "UpdateWorkweekConfigRequest": {
      "type": "object",
      "required": [
        "workweek_config"
      ],
      "properties": {
        "workweek_config": {
          "$ref": "#/definitions/WorkweekConfig",
          "description": "The updated `WorkweekConfig` object."
        }
      },
      "description": "A request to update a `WorkweekConfig` object",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "workweek_config": {
            "start_of_week": "MON",
            "start_of_day_local_time": "10:00",
            "version": 10
          }
        }
      }
    },
    "UpdateWorkweekConfigResponse": {
      "type": "object",
      "properties": {
        "workweek_config": {
          "$ref": "#/definitions/WorkweekConfig",
          "description": "The response object."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "The response to a request to update a `WorkweekConfig` object. Contains\nthe updated `WorkweekConfig` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
      "x-release-status": "PUBLIC",
      "example": {
        "workweek_config": {
          "id": "FY4VCAQN700GM",
          "start_of_week": "MON",
          "start_of_day_local_time": "10:00",
          "version": 11,
          "created_at": "2016-02-04T00:58:24Z",
          "updated_at": "2019-02-28T01:04:35Z"
        }
      }
    },
    "UpsertCatalogObjectRequest": {
      "type": "object",
      "required": [
        "idempotency_key",
        "object"
      ],
      "properties": {
        "idempotency_key": {
          "minLength": 1,
          "type": "string",
          "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you\u0027re unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
        },
        "object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "A CatalogObject to be created or updated.\n\n- For updates, the object must be active (the `is_deleted` field is not `true`).\n- For creates, the object ID must start with `#`. The provided ID is replaced with a server-generated ID."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "request_body": {
          "idempotency_key": "af3d1afc-7212-4300-b463-0bfc5314a5ae",
          "object": {
            "type": "ITEM",
            "id": "#Cocoa",
            "item_data": {
              "name": "Cocoa",
              "description": "Hot chocolate",
              "abbreviation": "Ch"
            }
          }
        }
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.python",
        "csharp": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.csharp",
        "java": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.java",
        "php": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.php",
        "javascript": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.javascript",
        "ruby": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.ruby"
      }
    },
    "UpsertCatalogObjectResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Information on any errors encountered."
        },
        "catalog_object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The successfully created or updated CatalogObject."
        },
        "id_mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogIdMapping"
          },
          "description": "The mapping between client and server IDs for this upsert."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "example": {
        "catalog_object": {
          "type": "ITEM",
          "id": "7SB3ZQYJ5GDMVFL7JK46JCHT",
          "updated_at": "2016-11-16T22:32:42.996Z",
          "version": 1479335562996,
          "is_deleted": false,
          "item_data": {
            "name": "Cocoa",
            "description": "Hot chocolate",
            "abbreviation": "Ch"
          }
        },
        "id_mappings": [
          {
            "client_object_id": "#Cocoa",
            "object_id": "7SB3ZQYJ5GDMVFL7JK46JCHT"
          }
        ]
      },
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.python",
        "csharp": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.csharp",
        "java": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.java",
        "php": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.php",
        "javascript": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.javascript",
        "ruby": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.ruby"
      }
    },
    "V1AdjustInventoryRequest": {
      "type": "object",
      "properties": {
        "quantity_delta": {
          "type": "number",
          "description": "The number to adjust the variation\u0027s quantity by."
        },
        "adjustment_type": {
          "type": "string",
          "description": "The reason for the inventory adjustment.\nSee [V1AdjustInventoryRequestAdjustmentType](#type-v1adjustinventoryrequestadjustmenttype) for possible values"
        },
        "memo": {
          "type": "string",
          "description": "A note about the inventory adjustment."
        }
      },
      "description": "V1AdjustInventoryRequest",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ApplyFeeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ApplyModifierListRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1BankAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The bank account\u0027s Square-issued ID."
        },
        "merchant_id": {
          "type": "string",
          "description": "The Square-issued ID of the merchant associated with the bank account."
        },
        "bank_name": {
          "type": "string",
          "description": "The name of the bank that manages the account."
        },
        "name": {
          "type": "string",
          "description": "The name associated with the bank account."
        },
        "routing_number": {
          "type": "string",
          "description": "The bank account\u0027s routing number."
        },
        "account_number_suffix": {
          "type": "string",
          "description": "The last few digits of the bank account number."
        },
        "currency_code": {
          "type": "string",
          "description": "The currency code of the currency associated with the bank account, in ISO 4217 format. For example, the currency code for US dollars is USD."
        },
        "type": {
          "type": "string",
          "description": "The bank account\u0027s type (for example, savings or checking).\nSee [V1BankAccountType](#type-v1bankaccounttype) for possible values"
        }
      },
      "description": "V1BankAccount",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CashDrawerEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The event\u0027s unique ID."
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee that created the event."
        },
        "event_type": {
          "type": "string",
          "description": "The type of event that occurred.\nSee [V1CashDrawerEventEventType](#type-v1cashdrawereventeventtype) for possible values"
        },
        "event_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that was added to or removed from the cash drawer because of the event. This value can be positive (for added money) or negative (for removed money)."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the event occurred, in ISO 8601 format."
        },
        "description": {
          "type": "string",
          "description": "An optional description of the event, entered by the employee that created it."
        }
      },
      "description": "V1CashDrawerEvent",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CashDrawerShift": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The shift\u0027s unique ID."
        },
        "event_type": {
          "type": "string",
          "description": "The shift\u0027s current state.\nSee [V1CashDrawerShiftEventType](#type-v1cashdrawershifteventtype) for possible values"
        },
        "opened_at": {
          "type": "string",
          "description": "The time when the shift began, in ISO 8601 format."
        },
        "ended_at": {
          "type": "string",
          "description": "The time when the shift ended, in ISO 8601 format."
        },
        "closed_at": {
          "type": "string",
          "description": "The time when the shift was closed, in ISO 8601 format."
        },
        "employee_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of all employees that were logged into Square Register at some point during the cash drawer shift."
        },
        "opening_employee_id": {
          "type": "string",
          "description": "The ID of the employee that started the cash drawer shift."
        },
        "ending_employee_id": {
          "type": "string",
          "description": "The ID of the employee that ended the cash drawer shift."
        },
        "closing_employee_id": {
          "type": "string",
          "description": "The ID of the employee that closed the cash drawer shift by auditing the cash drawer\u0027s contents."
        },
        "description": {
          "type": "string",
          "description": "A description of the cash drawer shift."
        },
        "starting_cash_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money in the cash drawer at the start of the shift."
        },
        "cash_payment_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money added to the cash drawer from cash payments."
        },
        "cash_refunds_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money removed from the cash drawer from cash refunds. This value is always negative or zero."
        },
        "cash_paid_in_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money added to the cash drawer for reasons other than cash payments."
        },
        "cash_paid_out_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money removed from the cash drawer for reasons other than cash refunds."
        },
        "expected_cash_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that should be in the cash drawer at the end of the shift, based on the shift\u0027s other money amounts."
        },
        "closed_cash_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money found in the cash drawer at the end of the shift by an auditing employee."
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device running Square Register that was connected to the cash drawer."
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1CashDrawerEvent"
          },
          "description": "All of the events (payments, refunds, and so on) that involved the cash drawer during the shift."
        }
      },
      "description": "Contains details for a single cash drawer shift.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The category\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The category\u0027s name."
        },
        "v2_id": {
          "type": "string",
          "description": "The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID."
        }
      },
      "description": "V1Category",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CreateCategoryRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Category",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CreateDiscountRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Discount",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CreateEmployeeRoleRequest": {
      "type": "object",
      "properties": {
        "employee_role": {
          "$ref": "#/definitions/V1EmployeeRole",
          "description": "An EmployeeRole object with a name and permissions, and an optional owner flag."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1CreateFeeRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Fee",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CreateItemRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Item",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CreateModifierListRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1ModifierList",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CreateModifierOptionRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1ModifierOption",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CreatePageRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Page",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1CreateRefundRequest": {
      "type": "object",
      "required": [
        "payment_id",
        "type",
        "reason"
      ],
      "properties": {
        "payment_id": {
          "type": "string",
          "description": "The ID of the payment to refund. If you are creating a `PARTIAL`\nrefund for a split tender payment, instead provide the id of the\nparticular tender you want to refund."
        },
        "type": {
          "type": "string",
          "description": "TThe type of refund (FULL or PARTIAL).\nSee [V1CreateRefundRequestType](#type-v1createrefundrequesttype) for possible values"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund."
        },
        "refunded_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money to refund. Required only for PARTIAL refunds."
        },
        "request_idempotence_key": {
          "type": "string",
          "description": "An optional key to ensure idempotence if you issue the same PARTIAL refund request more than once."
        }
      },
      "description": "V1CreateRefundRequest",
      "x-release-status": "PUBLIC"
    },
    "V1CreateVariationRequest": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Variation",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeleteCategoryRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeleteDiscountRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeleteFeeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeleteItemRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeleteModifierListRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeleteModifierOptionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeletePageCellRequest": {
      "type": "object",
      "properties": {
        "row": {
          "type": "string",
          "description": "The row of the cell to clear. Always an integer between 0 and 4, inclusive. Row 0 is the top row."
        },
        "column": {
          "type": "string",
          "description": "The column of the cell to clear. Always an integer between 0 and 4, inclusive. Column 0 is the leftmost column."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeletePageRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeleteTimecardRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeleteTimecardResponse": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1DeleteVariationRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Discount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The discount\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "rate": {
          "type": "string",
          "description": "The rate of the discount, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%. This rate is 0 if discount_type is VARIABLE_PERCENTAGE."
        },
        "amount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of the discount. This amount is 0 if discount_type is VARIABLE_AMOUNT. This field is not included for rate-based discounts."
        },
        "discount_type": {
          "type": "string",
          "description": "Indicates whether the discount is a FIXED value or entered at the time of sale.\nSee [V1DiscountDiscountType](#type-v1discountdiscounttype) for possible values"
        },
        "pin_required": {
          "type": "boolean",
          "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the discount to a payment."
        },
        "color": {
          "type": "string",
          "description": "The color of the discount\u0027s display label in Square Point of Sale, if not the default color. The default color is 9da2a6.\nSee [V1DiscountColor](#type-v1discountcolor) for possible values"
        },
        "v2_id": {
          "type": "string",
          "description": "The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID."
        }
      },
      "description": "V1Discount",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Employee": {
      "type": "object",
      "required": [
        "first_name",
        "last_name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The employee\u0027s unique ID."
        },
        "first_name": {
          "type": "string",
          "description": "The employee\u0027s first name."
        },
        "last_name": {
          "type": "string",
          "description": "The employee\u0027s last name."
        },
        "role_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The ids of the employee\u0027s associated roles. Currently, you can specify only one or zero roles per employee."
        },
        "authorized_location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the locations the employee is allowed to clock in at."
        },
        "email": {
          "type": "string",
          "description": "The employee\u0027s email address."
        },
        "status": {
          "type": "string",
          "description": "CWhether the employee is ACTIVE or INACTIVE. Inactive employees cannot sign in to Square Register.Merchants update this field from the Square Dashboard.\nSee [V1EmployeeStatus](#type-v1employeestatus) for possible values"
        },
        "external_id": {
          "type": "string",
          "description": "An ID the merchant can set to associate the employee with an entity in another system."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the employee entity was created, in ISO 8601 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the employee entity was most recently updated, in ISO 8601 format."
        }
      },
      "description": "Represents one of a business\u0027s employees.",
      "x-release-status": "PUBLIC"
    },
    "V1EmployeeRole": {
      "type": "object",
      "required": [
        "name",
        "permissions"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The role\u0027s unique ID, Can only be set by Square."
        },
        "name": {
          "type": "string",
          "description": "The role\u0027s merchant-defined name."
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The role\u0027s permissions.\nSee [V1EmployeeRolePermissions](#type-v1employeerolepermissions) for possible values"
        },
        "is_owner": {
          "type": "boolean",
          "description": "If true, employees with this role have all permissions, regardless of the values indicated in permissions."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the employee entity was created, in ISO 8601 format. Is set by Square when the Role is created."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the employee entity was most recently updated, in ISO 8601 format. Is set by Square when the Role updated."
        }
      },
      "description": "V1EmployeeRole",
      "x-release-status": "PUBLIC"
    },
    "V1Fee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The fee\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The fee\u0027s name."
        },
        "rate": {
          "type": "string",
          "description": "The rate of the fee, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%."
        },
        "calculation_phase": {
          "type": "string",
          "description": "Forthcoming\nSee [V1FeeCalculationPhase](#type-v1feecalculationphase) for possible values"
        },
        "adjustment_type": {
          "type": "string",
          "description": "The type of adjustment the fee applies to a payment. Currently, this value is TAX for all fees.\nSee [V1FeeAdjustmentType](#type-v1feeadjustmenttype) for possible values"
        },
        "applies_to_custom_amounts": {
          "type": "boolean",
          "description": "If true, the fee applies to custom amounts entered into Square Point of Sale that are not associated with a particular item."
        },
        "enabled": {
          "type": "boolean",
          "description": "If true, the fee is applied to all appropriate items. If false, the fee is not applied at all."
        },
        "inclusion_type": {
          "type": "string",
          "description": "Whether the fee is ADDITIVE or INCLUSIVE.\nSee [V1FeeInclusionType](#type-v1feeinclusiontype) for possible values"
        },
        "type": {
          "type": "string",
          "description": "In countries with multiple classifications for sales taxes, indicates which classification the fee falls under. Currently relevant only to Canadian merchants.\nSee [V1FeeType](#type-v1feetype) for possible values"
        },
        "v2_id": {
          "type": "string",
          "description": "The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID."
        }
      },
      "description": "V1Fee",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1InventoryEntry": {
      "type": "object",
      "properties": {
        "variation_id": {
          "type": "string",
          "description": "The variation that the entry corresponds to."
        },
        "quantity_on_hand": {
          "type": "number",
          "description": "The current available quantity of the item variation."
        }
      },
      "description": "V1InventoryEntry",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The item\u0027s ID. Must be unique among all entity IDs ever provided on behalf of the merchant. You can never reuse an ID. This value can include alphanumeric characters, dashes (-), and underscores (_)."
        },
        "name": {
          "type": "string",
          "description": "The item\u0027s name."
        },
        "description": {
          "type": "string",
          "description": "The item\u0027s description."
        },
        "type": {
          "type": "string",
          "description": "The item\u0027s type. This value is NORMAL for almost all items.\nSee [V1ItemType](#type-v1itemtype) for possible values"
        },
        "color": {
          "type": "string",
          "description": "The color of the discount\u0027s display label in Square Point of Sale, if not the default color. The default color is 9da2a6.\nSee [V1ItemColor](#type-v1itemcolor) for possible values"
        },
        "abbreviation": {
          "type": "string",
          "description": "The text of the item\u0027s display label in Square Point of Sale. Only up to the first five characters of the string are used."
        },
        "visibility": {
          "type": "string",
          "description": "Indicates whether the item is viewable from the merchant\u0027s online store (PUBLIC) or PRIVATE.\nSee [V1ItemVisibility](#type-v1itemvisibility) for possible values"
        },
        "available_online": {
          "type": "boolean",
          "description": "If true, the item can be added to shipping orders from the merchant\u0027s online store."
        },
        "master_image": {
          "$ref": "#/definitions/V1ItemImage",
          "description": "The item\u0027s master image, if any."
        },
        "category": {
          "$ref": "#/definitions/V1Category",
          "description": "The category the item belongs to, if any."
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Variation"
          },
          "description": "The item\u0027s variations. You must specify at least one variation."
        },
        "modifier_lists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1ModifierList"
          },
          "description": "The modifier lists that apply to the item, if any."
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Fee"
          },
          "description": "The fees that apply to the item, if any."
        },
        "taxable": {
          "type": "boolean",
          "description": "Deprecated. This field is not used."
        },
        "category_id": {
          "type": "string",
          "description": "The ID of the item\u0027s category, if any."
        },
        "available_for_pickup": {
          "type": "boolean",
          "description": "If true, the item can be added to pickup orders from the merchant\u0027s online store. Default value: false"
        },
        "v2_id": {
          "type": "string",
          "description": "The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID."
        }
      },
      "description": "V1Item",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ItemImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The image\u0027s unique ID."
        },
        "url": {
          "type": "string",
          "description": "The image\u0027s publicly accessible URL."
        }
      },
      "description": "V1ItemImage",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListBankAccountsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListBankAccountsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1BankAccount"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListCashDrawerShiftsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "description": "The order in which cash drawer shifts are listed in the response, based on their created_at field. Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time minus 90 days."
        },
        "end_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListCashDrawerShiftsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1CashDrawerShift"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListCategoriesRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListCategoriesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Category"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListDiscountsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListDiscountsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Discount"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListEmployeeRolesRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "limit": {
          "type": "integer",
          "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListEmployeeRolesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1EmployeeRole"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListEmployeesRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_updated_at": {
          "type": "string",
          "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format"
        },
        "end_updated_at": {
          "type": "string",
          "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format."
        },
        "begin_created_at": {
          "type": "string",
          "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format."
        },
        "end_created_at": {
          "type": "string",
          "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format."
        },
        "status": {
          "type": "string",
          "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).\nSee [V1ListEmployeesRequestStatus](#type-v1listemployeesrequeststatus) for possible values"
        },
        "external_id": {
          "type": "string",
          "description": "If provided, the endpoint returns only employee entities with the specified external_id."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListEmployeesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Employee"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListFeesRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListFeesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Fee"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListInventoryRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "The maximum number of inventory entries to return in a single response. This value cannot exceed 1000."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListInventoryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1InventoryEntry"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListItemsRequest": {
      "type": "object",
      "properties": {
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Item"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListLocationsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListLocationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Merchant"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListModifierListsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListModifierListsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1ModifierList"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListOrdersRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "description": "TThe order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of payments to return in a single response. This value cannot exceed 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1ListOrdersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Order"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1ListPagesRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListPagesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Page"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListPaymentsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "description": "The order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of payments to return in a single response. This value cannot exceed 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        },
        "include_partial": {
          "type": "boolean",
          "description": "Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListPaymentsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Payment"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListRefundsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "description": "TThe order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
        },
        "limit": {
          "type": "integer",
          "description": "The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListRefundsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Refund"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListSettlementsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "description": "The order in which settlements are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "begin_time": {
          "type": "string",
          "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
        },
        "end_time": {
          "type": "string",
          "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of settlements to return in a single response. This value cannot exceed 200."
        },
        "status": {
          "type": "string",
          "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).\nSee [V1ListSettlementsRequestStatus](#type-v1listsettlementsrequeststatus) for possible values"
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListSettlementsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Settlement"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1ListTimecardEventsRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListTimecardEventsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1TimecardEvent"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListTimecardsRequest": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "description": "The order in which timecards are listed in the response, based on their created_at field.\nSee [SortOrder](#type-sortorder) for possible values"
        },
        "employee_id": {
          "type": "string",
          "description": "If provided, the endpoint returns only timecards for the employee with the specified ID."
        },
        "begin_clockin_time": {
          "type": "string",
          "description": "If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format."
        },
        "end_clockin_time": {
          "type": "string",
          "description": "If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format."
        },
        "begin_clockout_time": {
          "type": "string",
          "description": "If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format."
        },
        "end_clockout_time": {
          "type": "string",
          "description": "If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format."
        },
        "begin_updated_at": {
          "type": "string",
          "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format."
        },
        "end_updated_at": {
          "type": "string",
          "description": "If filtering results by their updated_at field, the end of the requested reporting period, in ISO 8601 format."
        },
        "deleted": {
          "type": "boolean",
          "description": "If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don\u0027t provide this parameter, both valid and deleted timecards are returned."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
        },
        "batch_token": {
          "type": "string",
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ListTimecardsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Timecard"
          },
          "description": ""
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Merchant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The merchant account\u0027s unique identifier."
        },
        "name": {
          "type": "string",
          "description": "The name associated with the merchant account."
        },
        "email": {
          "type": "string",
          "description": "The email address associated with the merchant account."
        },
        "account_type": {
          "type": "string",
          "description": "Indicates whether the merchant account corresponds to a single-location account (LOCATION) or a business account (BUSINESS). This value is almost always LOCATION.\nSee [V1MerchantAccountType](#type-v1merchantaccounttype) for possible values"
        },
        "account_capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Capabilities that are enabled for the merchant\u0027s Square account. Capabilities that are not listed in this array are not enabled for the account."
        },
        "country_code": {
          "type": "string",
          "description": "The country associated with the merchant account, in ISO 3166-1-alpha-2 format."
        },
        "language_code": {
          "type": "string",
          "description": "The language associated with the merchant account, in BCP 47 format."
        },
        "currency_code": {
          "type": "string",
          "description": "The currency associated with the merchant account, in ISO 4217 format. For example, the currency code for US dollars is USD."
        },
        "business_name": {
          "type": "string",
          "description": "The name of the merchant\u0027s business."
        },
        "business_address": {
          "$ref": "#/definitions/Address",
          "description": "The address of the merchant\u0027s business."
        },
        "business_phone": {
          "$ref": "#/definitions/V1PhoneNumber",
          "description": "The phone number of the merchant\u0027s business."
        },
        "business_type": {
          "type": "string",
          "description": "The type of business operated by the merchant.\nSee [V1MerchantBusinessType](#type-v1merchantbusinesstype) for possible values"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The merchant\u0027s shipping address."
        },
        "location_details": {
          "$ref": "#/definitions/V1MerchantLocationDetails",
          "description": "Additional information for a single-location account specified by its associated business account, if it has one."
        },
        "market_url": {
          "type": "string",
          "description": "The URL of the merchant\u0027s online store."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the **RetrieveBusiness** endpoint.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1MerchantLocationDetails": {
      "type": "object",
      "properties": {
        "nickname": {
          "type": "string",
          "description": "The nickname assigned to the single-location account by the parent business. This value appears in the parent business\u0027s multi-location dashboard."
        }
      },
      "description": "Additional information for a single-location account specified by its associated business account, if it has one.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ModifierList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The modifier list\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The modifier list\u0027s name."
        },
        "selection_type": {
          "type": "string",
          "description": "Indicates whether MULTIPLE options or a SINGLE option from the modifier list can be applied to a single item.\nSee [V1ModifierListSelectionType](#type-v1modifierlistselectiontype) for possible values"
        },
        "modifier_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1ModifierOption"
          },
          "description": "The options included in the modifier list."
        },
        "v2_id": {
          "type": "string",
          "description": "The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID."
        }
      },
      "description": "V1ModifierList",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1ModifierOption": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The modifier option\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The modifier option\u0027s name."
        },
        "price_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The modifier option\u0027s price."
        },
        "on_by_default": {
          "type": "boolean",
          "description": "If true, the modifier option is the default option in a modifier list for which selection_type is SINGLE."
        },
        "ordinal": {
          "type": "integer",
          "description": "Indicates the modifier option\u0027s list position when displayed in Square Point of Sale and the merchant dashboard. If more than one modifier option in the same modifier list has the same ordinal value, those options are displayed in alphabetical order."
        },
        "modifier_list_id": {
          "type": "string",
          "description": "The ID of the modifier list the option belongs to."
        },
        "v2_id": {
          "type": "string",
          "description": "The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID."
        }
      },
      "description": "V1ModifierOption",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Money": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "description": "Amount in the lowest denominated value of this Currency. E.g. in USD\nthese are cents, in JPY they are Yen (which do not have a \u0027cent\u0027 concept)."
        },
        "currency_code": {
          "type": "string",
          "description": "\nSee [Currency](#type-currency) for possible values"
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Order": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "id": {
          "type": "string",
          "description": "The order\u0027s unique identifier."
        },
        "buyer_email": {
          "type": "string",
          "description": "The email address of the order\u0027s buyer."
        },
        "recipient_name": {
          "type": "string",
          "description": "The name of the order\u0027s buyer."
        },
        "recipient_phone_number": {
          "type": "string",
          "description": "The phone number to use for the order\u0027s delivery."
        },
        "state": {
          "type": "string",
          "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.\nSee [V1OrderState](#type-v1orderstate) for possible values"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The address to ship the order to."
        },
        "subtotal_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of all items purchased in the order, before taxes and shipping."
        },
        "total_shipping_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The shipping cost for the order."
        },
        "total_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all taxes applied to the order."
        },
        "total_price_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total cost of the order."
        },
        "total_discount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all discounts applied to the order."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the order was created, in ISO 8601 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the order was last modified, in ISO 8601 format."
        },
        "expires_at": {
          "type": "string",
          "description": "The time when the order expires if no action is taken, in ISO 8601 format."
        },
        "payment_id": {
          "type": "string",
          "description": "The unique identifier of the payment associated with the order."
        },
        "buyer_note": {
          "type": "string",
          "description": "A note provided by the buyer when the order was created, if any."
        },
        "completed_note": {
          "type": "string",
          "description": "A note provided by the merchant when the order\u0027s state was set to COMPLETED, if any"
        },
        "refunded_note": {
          "type": "string",
          "description": "A note provided by the merchant when the order\u0027s state was set to REFUNDED, if any."
        },
        "canceled_note": {
          "type": "string",
          "description": "A note provided by the merchant when the order\u0027s state was set to CANCELED, if any."
        },
        "tender": {
          "$ref": "#/definitions/V1Tender",
          "description": "The tender used to pay for the order."
        },
        "order_history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1OrderHistoryEntry"
          },
          "description": "The history of actions associated with the order."
        },
        "promo_code": {
          "type": "string",
          "description": "The promo code provided by the buyer, if any."
        },
        "btc_receive_address": {
          "type": "string",
          "description": "For Bitcoin transactions, the address that the buyer sent Bitcoin to."
        },
        "btc_price_satoshi": {
          "type": "number",
          "description": "For Bitcoin transactions, the price of the buyer\u0027s order in satoshi (100 million satoshi equals 1 BTC)."
        }
      },
      "description": "V1Order",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1OrderHistoryEntry": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "The type of action performed on the order.\nSee [V1OrderHistoryEntryAction](#type-v1orderhistoryentryaction) for possible values"
        },
        "created_at": {
          "type": "string",
          "description": "The time when the action was performed, in ISO 8601 format."
        }
      },
      "description": "V1OrderHistoryEntry",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1Page": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The page\u0027s unique identifier."
        },
        "name": {
          "type": "string",
          "description": "The page\u0027s name, if any."
        },
        "page_index": {
          "maximum": 6,
          "minimum": 0,
          "type": "integer",
          "description": "The page\u0027s position in the merchant\u0027s list of pages. Always an integer between 0 and 6, inclusive."
        },
        "cells": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PageCell"
          },
          "description": "The cells included on the page."
        }
      },
      "description": "V1Page",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1PageCell": {
      "type": "object",
      "properties": {
        "page_id": {
          "type": "string",
          "description": "The unique identifier of the page the cell is included on."
        },
        "row": {
          "type": "integer",
          "description": "The row of the cell. Always an integer between 0 and 4, inclusive."
        },
        "column": {
          "type": "integer",
          "description": "The column of the cell. Always an integer between 0 and 4, inclusive."
        },
        "object_type": {
          "type": "string",
          "description": "The type of entity represented in the cell (ITEM, DISCOUNT, CATEGORY, or PLACEHOLDER).\nSee [V1PageCellObjectType](#type-v1pagecellobjecttype) for possible values"
        },
        "object_id": {
          "type": "string",
          "description": "The unique identifier of the entity represented in the cell. Not present for cells with an object_type of PLACEHOLDER."
        },
        "placeholder_type": {
          "type": "string",
          "description": "For a cell with an object_type of PLACEHOLDER, this value indicates the cell\u0027s special behavior.\nSee [V1PageCellPlaceholderType](#type-v1pagecellplaceholdertype) for possible values"
        }
      },
      "description": "V1PageCell",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Payment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The payment\u0027s unique identifier."
        },
        "merchant_id": {
          "type": "string",
          "description": "The unique identifier of the merchant that took the payment."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the payment was created, in ISO 8601 format. Reflects the time of the first payment if the object represents an incomplete partial payment, and the time of the last or complete payment otherwise."
        },
        "creator_id": {
          "type": "string",
          "description": "The unique identifier of the Square account that took the payment."
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device that took the payment."
        },
        "payment_url": {
          "type": "string",
          "description": "The URL of the payment\u0027s detail page in the merchant dashboard. The merchant must be signed in to the merchant dashboard to view this page."
        },
        "receipt_url": {
          "type": "string",
          "description": "The URL of the receipt for the payment. Note that for split tender\npayments, this URL corresponds to the receipt for the first tender\nlisted in the payment\u0027s tender field. Each Tender object has its own\nreceipt_url field you can use to get the other receipts associated with\na split tender payment."
        },
        "inclusive_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The sum of all inclusive taxes associated with the payment."
        },
        "additive_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The sum of all additive taxes associated with the payment."
        },
        "tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all taxes applied to the payment. This is always the sum of inclusive_tax_money and additive_tax_money."
        },
        "tip_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all tips applied to the payment."
        },
        "discount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all discounts applied to the payment."
        },
        "total_collected_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all discounts applied to the payment."
        },
        "processing_fee_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all processing fees collected by Square for the payment."
        },
        "net_total_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount to be deposited into the merchant\u0027s bank account for the payment."
        },
        "refunded_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all refunds applied to the payment."
        },
        "swedish_rounding_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all sales, including any applicable taxes, rounded to the smallest legal unit of currency (e.g., the nearest penny in USD, the nearest nickel in CAD)"
        },
        "gross_sales_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all sales, including any applicable taxes."
        },
        "net_sales_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all sales, minus any applicable taxes."
        },
        "inclusive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All of the inclusive taxes associated with the payment."
        },
        "additive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All of the additive taxes associated with the payment."
        },
        "tender": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Tender"
          },
          "description": "All of the tenders associated with the payment."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Refund"
          },
          "description": "All of the refunds applied to the payment. Note that the value of all refunds on a payment can exceed the value of all tenders if a merchant chooses to refund money to a tender after previously accepting returned goods as part of an exchange."
        },
        "itemizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentItemization"
          },
          "description": "The items purchased in the payment."
        },
        "surcharge_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all surcharges applied to the payment."
        },
        "surcharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentSurcharge"
          },
          "description": "A list of all surcharges associated with the payment."
        },
        "is_partial": {
          "type": "boolean",
          "description": "Indicates whether or not the payment is only partially paid for.\nIf true, this payment will have the tenders collected so far, but the\nitemizations will be empty until the payment is completed."
        }
      },
      "description": "A payment represents a paid transaction between a Square merchant and a\ncustomer. Payment details are usually available from Connect API endpoints\nwithin a few minutes after the transaction completes.\n\nEach Payment object includes several fields that end in `_money`. These fields\ndescribe the various amounts of money that contribute to the payment total:\n\n\u003cul\u003e\n\u003cli\u003e\nMonetary values are \u003cb\u003epositive\u003c/b\u003e if they represent an\n\u003cem\u003eincrease\u003c/em\u003e in the amount of money the merchant receives (e.g.,\n\u003ccode\u003etax_money\u003c/code\u003e, \u003ccode\u003etip_money\u003c/code\u003e).\n\u003c/li\u003e\n\u003cli\u003e\nMonetary values are \u003cb\u003enegative\u003c/b\u003e if they represent an\n\u003cem\u003edecrease\u003c/em\u003e in the amount of money the merchant receives (e.g.,\n\u003ccode\u003ediscount_money\u003c/code\u003e, \u003ccode\u003erefunded_money\u003c/code\u003e).\n\u003c/li\u003e\n\u003c/ul\u003e",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentDiscount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The discount\u0027s name."
        },
        "applied_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that this discount adds to the payment (note that this value is always negative or zero)."
        },
        "discount_id": {
          "type": "string",
          "description": "The ID of the applied discount, if available. Discounts applied in older versions of Square Register might not have an ID."
        }
      },
      "description": "V1PaymentDiscount",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentItemDetail": {
      "type": "object",
      "properties": {
        "category_name": {
          "type": "string",
          "description": "The name of the item\u0027s merchant-defined category, if any."
        },
        "sku": {
          "type": "string",
          "description": " The item\u0027s merchant-defined SKU, if any."
        },
        "item_id": {
          "type": "string",
          "description": "The unique ID of the item purchased, if any."
        },
        "item_variation_id": {
          "type": "string",
          "description": "The unique ID of the item variation purchased, if any."
        }
      },
      "description": "V1PaymentItemDetail",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentItemization": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The item\u0027s name."
        },
        "quantity": {
          "type": "number",
          "description": "The quantity of the item purchased. This can be a decimal value."
        },
        "itemization_type": {
          "type": "string",
          "description": "The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT\nSee [V1PaymentItemizationItemizationType](#type-v1paymentitemizationitemizationtype) for possible values"
        },
        "item_detail": {
          "$ref": "#/definitions/V1PaymentItemDetail",
          "description": "Details of the item, including its unique identifier and the identifier of the item variation purchased."
        },
        "notes": {
          "type": "string",
          "description": "Notes entered by the merchant about the item at the time of payment, if any."
        },
        "item_variation_name": {
          "type": "string",
          "description": "The name of the item variation purchased, if any."
        },
        "total_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total cost of the item, including all taxes and discounts."
        },
        "single_quantity_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The cost of a single unit of this item."
        },
        "gross_sales_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total cost of the itemization and its modifiers, not including taxes or discounts."
        },
        "discount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all discounts applied to the itemization. This value is always negative or zero."
        },
        "net_sales_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The sum of gross_sales_money and discount_money."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All taxes applied to this itemization."
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentDiscount"
          },
          "description": "All discounts applied to this itemization."
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentModifier"
          },
          "description": "All modifier options applied to this itemization."
        }
      },
      "description": "Payment include an` itemizations` field that lists the items purchased,\nalong with associated fees, modifiers, and discounts. Each itemization has an\n`itemization_type` field that indicates which of the following the itemization\nrepresents:\n\n\u003cul\u003e\n\u003cli\u003eAn item variation from the merchant\u0027s item library\u003c/li\u003e\n\u003cli\u003eA custom monetary amount\u003c/li\u003e\n\u003cli\u003e\nAn action performed on a Square gift card, such as activating or\nreloading it.\n\u003c/li\u003e\n\u003c/ul\u003e\n\n*Note**: itemization information included in a `Payment` object reflects\ndetails collected **at the time of the payment**. Details such as the name or\nprice of items might have changed since the payment was processed.",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentModifier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The modifier option\u0027s name."
        },
        "applied_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that this modifier option adds to the payment."
        },
        "modifier_option_id": {
          "type": "string",
          "description": "TThe ID of the applied modifier option, if available. Modifier options applied in older versions of Square Register might not have an ID."
        }
      },
      "description": "V1PaymentModifier",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentSurcharge": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the surcharge."
        },
        "applied_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money applied to the order as a result of the surcharge."
        },
        "rate": {
          "type": "string",
          "description": "The amount of the surcharge as a percentage. The percentage is provided as a string representing the decimal equivalent of the percentage. For example, \"0.7\" corresponds to a 7% surcharge. Exactly one of rate or amount_money should be set."
        },
        "amount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of the surcharge as a Money object. Exactly one of rate or amount_money should be set."
        },
        "type": {
          "type": "string",
          "description": "Indicates the source of the surcharge. For example, if it was applied as an automatic gratuity for a large group.\nSee [V1PaymentSurchargeType](#type-v1paymentsurchargetype) for possible values"
        },
        "taxable": {
          "type": "boolean",
          "description": "Indicates whether the surcharge is taxable."
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "The list of taxes that should be applied to the surcharge."
        },
        "surcharge_id": {
          "type": "string",
          "description": "A Square-issued unique identifier associated with the surcharge."
        }
      },
      "description": "V1PaymentSurcharge",
      "x-release-status": "PUBLIC"
    },
    "V1PaymentTax": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        },
        "name": {
          "type": "string",
          "description": "The merchant-defined name of the tax."
        },
        "applied_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money that this tax adds to the payment."
        },
        "rate": {
          "type": "string",
          "description": "The rate of the tax, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%."
        },
        "inclusion_type": {
          "type": "string",
          "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.\nSee [V1PaymentTaxInclusionType](#type-v1paymenttaxinclusiontype) for possible values"
        },
        "fee_id": {
          "type": "string",
          "description": "The ID of the tax, if available. Taxes applied in older versions of Square Register might not have an ID."
        }
      },
      "description": "V1PaymentTax",
      "x-release-status": "PUBLIC"
    },
    "V1PhoneNumber": {
      "type": "object",
      "required": [
        "calling_code",
        "number"
      ],
      "properties": {
        "calling_code": {
          "type": "string",
          "description": "The phone number\u0027s international calling code. For US phone numbers, this value is +1."
        },
        "number": {
          "type": "string",
          "description": "The phone number."
        }
      },
      "description": "Represents a phone number.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Refund": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of refund\nSee [V1RefundType](#type-v1refundtype) for possible values"
        },
        "reason": {
          "type": "string",
          "description": "The merchant-specified reason for the refund."
        },
        "refunded_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money refunded. This amount is always negative."
        },
        "refunded_processing_fee_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of processing fee money refunded. This amount is always positive."
        },
        "refunded_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total amount of tax money refunded. This amount is always negative."
        },
        "refunded_additive_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of additive tax money refunded. This amount is always negative."
        },
        "refunded_additive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All of the additive taxes associated with the refund."
        },
        "refunded_inclusive_tax_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of inclusive tax money refunded. This amount is always negative."
        },
        "refunded_inclusive_tax": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentTax"
          },
          "description": "All of the inclusive taxes associated with the refund."
        },
        "refunded_tip_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of tip money refunded. This amount is always negative."
        },
        "refunded_discount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of discount money refunded. This amount is always positive."
        },
        "refunded_surcharge_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of surcharge money refunded. This amount is always negative."
        },
        "refunded_surcharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1PaymentSurcharge"
          },
          "description": "A list of all surcharges associated with the refund."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the merchant initiated the refund for Square to process, in ISO 8601 format."
        },
        "processed_at": {
          "type": "string",
          "description": "The time when Square processed the refund on behalf of the merchant, in ISO 8601 format."
        },
        "payment_id": {
          "type": "string",
          "description": "A Square-issued ID associated with the refund. For single-tender refunds, payment_id is the ID of the original payment ID. For split-tender refunds, payment_id is the ID of the original tender. For exchange-based refunds (is_exchange \u003d\u003d true), payment_id is the ID of the original payment ID even if the payment includes other tenders."
        },
        "merchant_id": {
          "type": "string",
          "description": ""
        },
        "is_exchange": {
          "type": "boolean",
          "description": "Indicates whether or not the refund is associated with an exchange. If is_exchange is true, the refund reflects the value of goods returned in the exchange not the total money refunded."
        }
      },
      "description": "V1Refund",
      "x-release-status": "PUBLIC"
    },
    "V1RemoveFeeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1RemoveModifierListRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1RetrieveBankAccountRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1RetrieveBusinessRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1RetrieveCashDrawerShiftRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1RetrieveEmployeeRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveEmployeeRoleRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveItemRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1RetrieveModifierListRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1RetrieveOrderRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1RetrievePaymentRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveSettlementRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1RetrieveTimecardRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Settlement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The settlement\u0027s unique identifier."
        },
        "status": {
          "type": "string",
          "description": "The settlement\u0027s current status.\nSee [V1SettlementStatus](#type-v1settlementstatus) for possible values"
        },
        "total_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of money involved in the settlement. A positive amount indicates a deposit, and a negative amount indicates a withdrawal. This amount is never zero."
        },
        "initiated_at": {
          "type": "string",
          "description": "The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format."
        },
        "bank_account_id": {
          "type": "string",
          "description": "The Square-issued unique identifier for the bank account associated with the settlement."
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1SettlementEntry"
          },
          "description": "The entries included in this settlement."
        }
      },
      "description": "V1Settlement",
      "x-release-status": "PUBLIC"
    },
    "V1SettlementEntry": {
      "type": "object",
      "properties": {
        "payment_id": {
          "type": "string",
          "description": "The settlement\u0027s unique identifier."
        },
        "type": {
          "type": "string",
          "description": "The settlement\u0027s current status.\nSee [V1SettlementEntryType](#type-v1settlemententrytype) for possible values"
        },
        "amount_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total amount of money this entry contributes to the total settlement amount."
        },
        "fee_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of all Square fees associated with this settlement entry. This value is always negative or zero."
        }
      },
      "description": "V1SettlementEntry",
      "x-release-status": "PUBLIC"
    },
    "V1Tender": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The tender\u0027s unique ID."
        },
        "type": {
          "type": "string",
          "description": "The type of tender.\nSee [V1TenderType](#type-v1tendertype) for possible values"
        },
        "name": {
          "type": "string",
          "description": "A human-readable description of the tender."
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee that processed the tender."
        },
        "receipt_url": {
          "type": "string",
          "description": "The URL of the receipt for the tender."
        },
        "card_brand": {
          "type": "string",
          "description": "The brand of credit card provided.\nSee [V1TenderCardBrand](#type-v1tendercardbrand) for possible values"
        },
        "pan_suffix": {
          "type": "string",
          "description": "The last four digits of the provided credit card\u0027s account number."
        },
        "entry_method": {
          "type": "string",
          "description": "The tender\u0027s unique ID.\nSee [V1TenderEntryMethod](#type-v1tenderentrymethod) for possible values"
        },
        "payment_note": {
          "type": "string",
          "description": "Notes entered by the merchant about the tender at the time of payment, if any. Typically only present for tender with the type: OTHER."
        },
        "total_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total amount of money provided in this form of tender."
        },
        "tendered_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of total_money applied to the payment."
        },
        "tendered_at": {
          "type": "string",
          "description": "The time when the tender was created, in ISO 8601 format."
        },
        "settled_at": {
          "type": "string",
          "description": "The time when the tender was settled, in ISO 8601 format."
        },
        "change_back_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The amount of total_money returned to the buyer as change."
        },
        "refunded_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The total of all refunds applied to this tender. This amount is always negative or zero."
        },
        "is_exchange": {
          "type": "boolean",
          "description": "Indicates whether or not the tender is associated with an exchange. If is_exchange is true, the tender represents the value of goods returned in an exchange not the actual money paid. The exchange value reduces the tender amounts needed to pay for items purchased in the exchange."
        }
      },
      "description": "A tender represents a discrete monetary exchange. Square represents this\nexchange as a money object with a specific currency and amount, where the\namount is given in the smallest denomination of the given currency.\n\nSquare POS can accept more than one form of tender for a single payment (such\nas by splitting a bill between a credit card and a gift card). The `tender`\nfield of the Payment object lists all forms of tender used for the payment.\n\nSplit tender payments behave slightly differently from single tender payments:\n\nThe receipt_url for a split tender corresponds only to the first tender listed\nin the tender field. To get the receipt URLs for the remaining tenders, use\nthe receipt_url fields of the corresponding Tender objects.\n\n*A note on gift cards**: when a customer purchases a Square gift card from a\nmerchant, the merchant receives the full amount of the gift card in the\nassociated payment.\n\nWhen that gift card is used as a tender, the balance of the gift card is\nreduced and the merchant receives no funds. A `Tender` object with a type of\n`SQUARE_GIFT_CARD` indicates a gift card was used for some or all of the\nassociated payment.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Timecard": {
      "type": "object",
      "required": [
        "employee_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The timecard\u0027s unique ID."
        },
        "employee_id": {
          "type": "string",
          "description": "The ID of the employee the timecard is associated with."
        },
        "deleted": {
          "type": "boolean",
          "description": "If true, the timecard was deleted by the merchant, and it is no longer valid."
        },
        "clockin_time": {
          "type": "string",
          "description": "The clock-in time for the timecard, in ISO 8601 format."
        },
        "clockout_time": {
          "type": "string",
          "description": "The clock-out time for the timecard, in ISO 8601 format. Provide this value only if importing timecard information from another system."
        },
        "clockin_location_id": {
          "type": "string",
          "description": "The ID of the location the employee clocked in from. We strongly reccomend providing a clockin_location_id. Square uses the clockin_location_id to determine a timecard’s timezone and overtime rules."
        },
        "clockout_location_id": {
          "type": "string",
          "description": "The ID of the location the employee clocked out from. Provide this value only if importing timecard information from another system."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the timecard was created, in ISO 8601 format."
        },
        "updated_at": {
          "type": "string",
          "description": "The time when the timecard was most recently updated, in ISO 8601 format."
        },
        "regular_seconds_worked": {
          "type": "number",
          "description": "The total number of regular (non-overtime) seconds worked in the timecard."
        },
        "overtime_seconds_worked": {
          "type": "number",
          "description": "The total number of overtime seconds worked in the timecard."
        },
        "doubletime_seconds_worked": {
          "type": "number",
          "description": "The total number of doubletime seconds worked in the timecard."
        }
      },
      "description": "Represents a timecard for an employee.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1TimecardEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The event\u0027s unique ID."
        },
        "event_type": {
          "type": "string",
          "description": "The ID of the timecard to list events for.\nSee [V1TimecardEventEventType](#type-v1timecardeventeventtype) for possible values"
        },
        "clockin_time": {
          "type": "string",
          "description": "The time the employee clocked in, in ISO 8601 format."
        },
        "clockout_time": {
          "type": "string",
          "description": "The time the employee clocked out, in ISO 8601 format."
        },
        "created_at": {
          "type": "string",
          "description": "The time when the event was created, in ISO 8601 format."
        }
      },
      "description": "V1TimecardEvent",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateCategoryRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Category",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateDiscountRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Discount",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateEmployeeRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Employee",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateEmployeeRoleRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1EmployeeRole",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "PUBLIC"
    },
    "V1UpdateFeeRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Fee",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateItemRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Item",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateModifierListRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The modifier list\u0027s name."
        },
        "selection_type": {
          "type": "string",
          "description": "Indicates whether multiple options from the modifier list can be applied to a single item.\nSee [V1UpdateModifierListRequestSelectionType](#type-v1updatemodifierlistrequestselectiontype) for possible values"
        }
      },
      "description": "V1UpdateModifierListRequest",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateModifierOptionRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1ModifierOption",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateOrderRequest": {
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "type": "string",
          "description": "The action to perform on the order (COMPLETE, CANCEL, or REFUND).\nSee [V1UpdateOrderRequestAction](#type-v1updateorderrequestaction) for possible values"
        },
        "shipped_tracking_number": {
          "type": "string",
          "description": "The tracking number of the shipment associated with the order. Only valid if action is COMPLETE."
        },
        "completed_note": {
          "type": "string",
          "description": "A merchant-specified note about the completion of the order. Only valid if action is COMPLETE."
        },
        "refunded_note": {
          "type": "string",
          "description": "A merchant-specified note about the refunding of the order. Only valid if action is REFUND."
        },
        "canceled_note": {
          "type": "string",
          "description": "A merchant-specified note about the canceling of the order. Only valid if action is CANCEL."
        }
      },
      "description": "V1UpdateOrderRequest",
      "x-release-status": "PUBLIC",
      "x-visibility": "SDK_ONLY"
    },
    "V1UpdatePageCellRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1PageCell",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdatePageRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Page",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateTimecardRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Timecard",
          "description": "An object containing the fields to POST for the request.\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1UpdateVariationRequest": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/V1Variation",
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details."
        }
      },
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "V1Variation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The item variation\u0027s unique ID."
        },
        "name": {
          "type": "string",
          "description": "The item variation\u0027s name."
        },
        "item_id": {
          "type": "string",
          "description": "The ID of the variation\u0027s associated item."
        },
        "ordinal": {
          "type": "integer",
          "description": "Indicates the variation\u0027s list position when displayed in Square Point of Sale and the merchant dashboard. If more than one variation for the same item has the same ordinal value, those variations are displayed in alphabetical order"
        },
        "pricing_type": {
          "type": "string",
          "description": "Indicates whether the item variation\u0027s price is fixed or determined at the time of sale.\nSee [V1VariationPricingType](#type-v1variationpricingtype) for possible values"
        },
        "price_money": {
          "$ref": "#/definitions/V1Money",
          "description": "The item variation\u0027s price, if any."
        },
        "sku": {
          "type": "string",
          "description": "The item variation\u0027s SKU, if any."
        },
        "track_inventory": {
          "type": "boolean",
          "description": "If true, inventory tracking is active for the variation."
        },
        "inventory_alert_type": {
          "type": "string",
          "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal to its inventory_alert_threshold.\nSee [V1VariationInventoryAlertType](#type-v1variationinventoryalerttype) for possible values"
        },
        "inventory_alert_threshold": {
          "type": "integer",
          "description": "If the inventory quantity for the variation is less than or equal to this value and inventory_alert_type is LOW_QUANTITY, the variation displays an alert in the merchant dashboard."
        },
        "user_data": {
          "type": "string",
          "description": "Arbitrary metadata associated with the variation. Cannot exceed 255 characters."
        },
        "v2_id": {
          "type": "string",
          "description": "The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID."
        }
      },
      "description": "V1Variation",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true
    },
    "VoidTransactionRequest": {
      "type": "object",
      "properties": {},
      "description": "",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/VoidTransaction/VoidTransactionRequest.python",
        "csharp": "/sdk_samples/VoidTransaction/VoidTransactionRequest.csharp",
        "java": "/sdk_samples/VoidTransaction/VoidTransactionRequest.java",
        "php": "/sdk_samples/VoidTransaction/VoidTransactionRequest.php",
        "javascript": "/sdk_samples/VoidTransaction/VoidTransactionRequest.javascript",
        "ruby": "/sdk_samples/VoidTransaction/VoidTransactionRequest.ruby"
      }
    },
    "VoidTransactionResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "description": "Any errors that occurred during the request."
        }
      },
      "description": "Defines the fields that are included in the response body of\na request to the [VoidTransaction](#endpoint-voidtransaction) endpoint.",
      "x-release-status": "DEPRECATED",
      "x-is-deprecated": true,
      "example": {},
      "x-sq-sdk-sample-code": {
        "python": "/sdk_samples/VoidTransaction/VoidTransactionResponse.python",
        "csharp": "/sdk_samples/VoidTransaction/VoidTransactionResponse.csharp",
        "java": "/sdk_samples/VoidTransaction/VoidTransactionResponse.java",
        "php": "/sdk_samples/VoidTransaction/VoidTransactionResponse.php",
        "javascript": "/sdk_samples/VoidTransaction/VoidTransactionResponse.javascript",
        "ruby": "/sdk_samples/VoidTransaction/VoidTransactionResponse.ruby"
      }
    },
    "WageSetting": {
      "type": "object",
      "properties": {
        "team_member_id": {
          "type": "string",
          "description": "The unique ID of the `TeamMember` whom this wage setting describes."
        },
        "job_assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobAssignment"
          },
          "description": "\u003cb\u003eRequired\u003c/b\u003e The ordered list of jobs that the team member is assigned to.\nThe first job assignment is considered the team member\u0027s \"Primary Job\".\n\u003cbr\u003e\n\u003cb\u003eMin Length 1    Max Length 12\u003c/b\u003e"
        },
        "is_overtime_exempt": {
          "type": "boolean",
          "description": "Whether the team member is exempt from the overtime rules of the seller country."
        },
        "version": {
          "type": "integer",
          "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If not provided,\nSquare executes a blind write, potentially overwriting data from another write. Read\nabout [optimistic concurrency](https://developer.squareup.com/docs/docs/working-with-apis/optimistic-concurrency)\nin Square APIs for more information."
        },
        "created_at": {
          "type": "string",
          "description": "The timestamp in RFC 3339 format describing when the wage setting object was created.\nEx: \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\"",
          "x-read-only": true
        },
        "updated_at": {
          "type": "string",
          "description": "The timestamp in RFC 3339 format describing when the wage setting object was last updated.\nEx: \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\"",
          "x-read-only": true
        }
      },
      "description": "An object representing a team member\u0027s wage information.",
      "x-release-status": "PUBLIC"
    },
    "WorkweekConfig": {
      "type": "object",
      "required": [
        "start_of_week",
        "start_of_day_local_time"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID for this object"
        },
        "start_of_week": {
          "type": "string",
          "description": "The day of the week on which a business week cuts over for\ncompensation purposes.\nSee [Weekday](#type-weekday) for possible values"
        },
        "start_of_day_local_time": {
          "minLength": 1,
          "type": "string",
          "description": "The local time at which a business week cuts over. Represented as a\nstring in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are\ntruncated)."
        },
        "version": {
          "type": "integer",
          "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If not provided,\nSquare executes a blind write; potentially overwriting data from another\nwrite."
        },
        "created_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format; presented in UTC"
        },
        "updated_at": {
          "type": "string",
          "description": "A read-only timestamp in RFC 3339 format; presented in UTC"
        }
      },
      "description": "Sets the Day of the week and hour of the day that a business starts a\nwork week. Used for the calculation of overtime pay.",
      "x-release-status": "PUBLIC"
    }
  }
}
